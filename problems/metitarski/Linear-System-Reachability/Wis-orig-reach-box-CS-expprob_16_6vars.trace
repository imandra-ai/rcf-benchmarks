-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC6,skoYC6,skoC2C6,skoC1C6,skoC3C6,skoTC6}, ForAll[{}, And[skoYC6*skoC1C6*5>skoXC6*skoC2C6*5,skoYC6*skoYC6==1+skoXC6*skoXC6*-1,skoTC6>20,skoC3C6>(9/10),skoC2C6>(4/5),skoC1C6>(-1/10),1>skoC3C6,1>skoC2C6,(1/10)>skoC1C6]]], Reals]]

% In QepcadB format:
(E skoXC6) (E skoYC6) (E skoC2C6) (E skoC1C6) (E skoC3C6) (E skoTC6) [[(skoXC6 skoC2C6 (5))<(skoYC6 skoC1C6 (5))]/\[[(skoYC6 skoYC6)=(1+(skoXC6 skoXC6 (-1)))]/\[[20<skoTC6]/\[[9/10<skoC3C6]/\[[4/5<skoC2C6]/\[[-1/10<skoC1C6]/\[[skoC3C6<1]/\[[skoC2C6<1]/\[skoC1C6<1/10]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC6 () Real) (declare-fun skoYC6 () Real) (declare-fun skoC2C6 () Real) (declare-fun skoC1C6 () Real) (declare-fun skoC3C6 () Real) (declare-fun skoTC6 () Real) (assert (and (not (<= (* skoYC6 (* skoC1C6 5.)) (* skoXC6 (* skoC2C6 5.)))) (and (= (* skoYC6 skoYC6) (+ 1. (* skoXC6 (* skoXC6 (- 1.))))) (and (not (<= skoTC6 20.)) (and (not (<= skoC3C6 (/ 9. 10.))) (and (not (<= skoC2C6 (/ 4. 5.))) (and (not (<= skoC1C6 (/ (- 1.) 10.))) (and (not (<= 1. skoC3C6)) (and (not (<= 1. skoC2C6)) (not (<= (/ 1. 10.) skoC1C6)))))))))))
-----[end problem]-----

