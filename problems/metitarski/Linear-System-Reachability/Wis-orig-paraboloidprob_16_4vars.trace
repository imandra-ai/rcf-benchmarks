-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoC1C1,skoC2C1,skoC3C1,skoTC1}, ForAll[{}, And[skoC2C1*skoC2C1*-100>skoC1C1*skoC1C1*25,skoTC1>0,skoC3C1>(9/10),skoC2C1>(4/5),skoC1C1>(-1/10),1>skoTC1,1>skoC3C1,1>skoC2C1,(1/10)>skoC1C1]]], Reals]]

% In QepcadB format:
(E skoC1C1) (E skoC2C1) (E skoC3C1) (E skoTC1) [[(skoC1C1 skoC1C1 (25))<(skoC2C1 skoC2C1 (-100))]/\[[0<skoTC1]/\[[9/10<skoC3C1]/\[[4/5<skoC2C1]/\[[-1/10<skoC1C1]/\[[skoTC1<1]/\[[skoC3C1<1]/\[[skoC2C1<1]/\[skoC1C1<1/10]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoC1C1 () Real) (declare-fun skoC2C1 () Real) (declare-fun skoC3C1 () Real) (declare-fun skoTC1 () Real) (assert (and (not (<= (* skoC2C1 (* skoC2C1 (- 100.))) (* skoC1C1 (* skoC1C1 25.)))) (and (not (<= skoTC1 0.)) (and (not (<= skoC3C1 (/ 9. 10.))) (and (not (<= skoC2C1 (/ 4. 5.))) (and (not (<= skoC1C1 (/ (- 1.) 10.))) (and (not (<= 1. skoTC1)) (and (not (<= 1. skoC3C1)) (and (not (<= 1. skoC2C1)) (not (<= (/ 1. 10.) skoC1C1)))))))))))
-----[end problem]-----

