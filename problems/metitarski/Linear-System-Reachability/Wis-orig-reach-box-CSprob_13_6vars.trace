-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoC1C6,skoC2C6,skoCC6,skoSC6,skoC3C6,skoTC6}, ForAll[{}, And[skoSC6*skoC2C6<=skoCC6*skoC1C6,skoSC6*skoC2C6*-1>skoCC6*skoC1C6*-1,skoTC6>20,skoC3C6>(9/10),skoC2C6>(4/5),skoC1C6>(-1/10),1>skoC3C6,1>skoC2C6,(1/10)>skoC1C6]]], Reals]]

% In QepcadB format:
(E skoC1C6) (E skoC2C6) (E skoCC6) (E skoSC6) (E skoC3C6) (E skoTC6) [[(skoSC6 skoC2C6)<=(skoCC6 skoC1C6)]/\[[(skoCC6 skoC1C6 (-1))<(skoSC6 skoC2C6 (-1))]/\[[20<skoTC6]/\[[9/10<skoC3C6]/\[[4/5<skoC2C6]/\[[-1/10<skoC1C6]/\[[skoC3C6<1]/\[[skoC2C6<1]/\[skoC1C6<1/10]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoC1C6 () Real) (declare-fun skoC2C6 () Real) (declare-fun skoCC6 () Real) (declare-fun skoSC6 () Real) (declare-fun skoC3C6 () Real) (declare-fun skoTC6 () Real) (assert (and (<= (* skoSC6 skoC2C6) (* skoCC6 skoC1C6)) (and (not (<= (* skoSC6 (* skoC2C6 (- 1.))) (* skoCC6 (* skoC1C6 (- 1.))))) (and (not (<= skoTC6 20.)) (and (not (<= skoC3C6 (/ 9. 10.))) (and (not (<= skoC2C6 (/ 4. 5.))) (and (not (<= skoC1C6 (/ (- 1.) 10.))) (and (not (<= 1. skoC3C6)) (and (not (<= 1. skoC2C6)) (not (<= (/ 1. 10.) skoC1C6)))))))))))
-----[end problem]-----

