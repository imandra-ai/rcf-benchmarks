-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoC2C7,skoC1C7,skoXC7,skoYC7,skoC3C7,skoTC7}, ForAll[{}, And[skoYC7*skoC1C7*-5>skoXC7*skoC2C7*-5,skoTC7>20,skoC3C7>(9/10),skoC2C7>(4/5),skoC1C7>(-1/10),1>skoC3C7,1>skoC2C7,(1/10)>skoC1C7]]], Reals]]

% In QepcadB format:
(E skoC2C7) (E skoC1C7) (E skoXC7) (E skoYC7) (E skoC3C7) (E skoTC7) [[(skoXC7 skoC2C7 (-5))<(skoYC7 skoC1C7 (-5))]/\[[20<skoTC7]/\[[9/10<skoC3C7]/\[[4/5<skoC2C7]/\[[-1/10<skoC1C7]/\[[skoC3C7<1]/\[[skoC2C7<1]/\[skoC1C7<1/10]]]]]]]].

% In SMTLib2 format:
(declare-fun skoC2C7 () Real) (declare-fun skoC1C7 () Real) (declare-fun skoXC7 () Real) (declare-fun skoYC7 () Real) (declare-fun skoC3C7 () Real) (declare-fun skoTC7 () Real) (assert (and (not (<= (* skoYC7 (* skoC1C7 (- 5.))) (* skoXC7 (* skoC2C7 (- 5.))))) (and (not (<= skoTC7 20.)) (and (not (<= skoC3C7 (/ 9. 10.))) (and (not (<= skoC2C7 (/ 4. 5.))) (and (not (<= skoC1C7 (/ (- 1.) 10.))) (and (not (<= 1. skoC3C7)) (and (not (<= 1. skoC2C7)) (not (<= (/ 1. 10.) skoC1C7))))))))))
-----[end problem]-----

