-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoX2C1,skoX1C1}, ForAll[{}, And[0<=skoX2C1,skoX2C1!=0,Or[skoX2C1*(-2+skoX2C1*skoX2C1)>0,skoX2C1*(2+skoX2C1*skoX2C1*-1)>0],0>skoX2C1,3>skoX1C1,skoX1C1>-3,skoX1C1>0,skoX2C1>-5,(1/10)>skoX1C1]]], Reals]]

% In QepcadB format:
(E skoX2C1) (E skoX1C1) [[0<=skoX2C1]/\[[skoX2C1 /=0]/\[[[0<(skoX2C1 (-2+(skoX2C1 skoX2C1)))]\/[0<(skoX2C1 (2+(skoX2C1 skoX2C1 (-1))))]]/\[[skoX2C1<0]/\[[skoX1C1<3]/\[[-3<skoX1C1]/\[[0<skoX1C1]/\[[-5<skoX2C1]/\[skoX1C1<1/10]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoX2C1 () Real) (declare-fun skoX1C1 () Real) (assert (and (<= 0. skoX2C1) (and (not (= skoX2C1 0.)) (and (or (not (<= (* skoX2C1 (+ (- 2.) (* skoX2C1 skoX2C1))) 0.)) (not (<= (* skoX2C1 (+ 2. (* skoX2C1 (* skoX2C1 (- 1.))))) 0.))) (and (not (<= 0. skoX2C1)) (and (not (<= 3. skoX1C1)) (and (not (<= skoX1C1 (- 3.))) (and (not (<= skoX1C1 0.)) (and (not (<= skoX2C1 (- 5.))) (not (<= (/ 1. 10.) skoX1C1)))))))))))
-----[end problem]-----

