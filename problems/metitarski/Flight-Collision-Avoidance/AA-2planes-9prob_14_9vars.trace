-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoX10C1,skoY10C1,skoDX0C1,skoDY0C1,skoEX0C1,skoEY0C1,skoTC1,skoX20C1,skoY20C1}, ForAll[{}, And[11>skoY20C1,11>skoX20C1,10>skoTC1,(23/200)>skoEY0C1,(23/200)>skoEX0C1,(23/200)>skoDY0C1,(23/200)>skoDX0C1,-1>skoY10C1,-12>skoX10C1]]], Reals]]

% In QepcadB format:
(E skoX10C1) (E skoY10C1) (E skoDX0C1) (E skoDY0C1) (E skoEX0C1) (E skoEY0C1) (E skoTC1) (E skoX20C1) (E skoY20C1) [[skoY20C1<11]/\[[skoX20C1<11]/\[[skoTC1<10]/\[[skoEY0C1<23/200]/\[[skoEX0C1<23/200]/\[[skoDY0C1<23/200]/\[[skoDX0C1<23/200]/\[[skoY10C1<-1]/\[skoX10C1<-12]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoX10C1 () Real) (declare-fun skoY10C1 () Real) (declare-fun skoDX0C1 () Real) (declare-fun skoDY0C1 () Real) (declare-fun skoEX0C1 () Real) (declare-fun skoEY0C1 () Real) (declare-fun skoTC1 () Real) (declare-fun skoX20C1 () Real) (declare-fun skoY20C1 () Real) (assert (and (not (<= 11. skoY20C1)) (and (not (<= 11. skoX20C1)) (and (not (<= 10. skoTC1)) (and (not (<= (/ 23. 200.) skoEY0C1)) (and (not (<= (/ 23. 200.) skoEX0C1)) (and (not (<= (/ 23. 200.) skoDY0C1)) (and (not (<= (/ 23. 200.) skoDX0C1)) (and (not (<= (- 1.) skoY10C1)) (not (<= (- 12.) skoX10C1)))))))))))
-----[end problem]-----

