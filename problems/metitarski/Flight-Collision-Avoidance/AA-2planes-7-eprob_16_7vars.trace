-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoDX0C1,skoDY0C1,skoEX0C1,skoX10C1,skoY10C1,skoEY0C1,skoTC1}, ForAll[{}, And[skoEX0C1>(1/10),skoDY0C1>(1/10),skoDX0C1>(1/10),120>skoTC1,(23/200)>skoEY0C1,(23/200)>skoEX0C1,(23/200)>skoDY0C1,(23/200)>skoDX0C1,-1>skoY10C1,-12>skoX10C1]]], Reals]]

% In QepcadB format:
(E skoDX0C1) (E skoDY0C1) (E skoEX0C1) (E skoX10C1) (E skoY10C1) (E skoEY0C1) (E skoTC1) [[1/10<skoEX0C1]/\[[1/10<skoDY0C1]/\[[1/10<skoDX0C1]/\[[skoTC1<120]/\[[skoEY0C1<23/200]/\[[skoEX0C1<23/200]/\[[skoDY0C1<23/200]/\[[skoDX0C1<23/200]/\[[skoY10C1<-1]/\[skoX10C1<-12]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoDX0C1 () Real) (declare-fun skoDY0C1 () Real) (declare-fun skoEX0C1 () Real) (declare-fun skoX10C1 () Real) (declare-fun skoY10C1 () Real) (declare-fun skoEY0C1 () Real) (declare-fun skoTC1 () Real) (assert (and (not (<= skoEX0C1 (/ 1. 10.))) (and (not (<= skoDY0C1 (/ 1. 10.))) (and (not (<= skoDX0C1 (/ 1. 10.))) (and (not (<= 120. skoTC1)) (and (not (<= (/ 23. 200.) skoEY0C1)) (and (not (<= (/ 23. 200.) skoEX0C1)) (and (not (<= (/ 23. 200.) skoDY0C1)) (and (not (<= (/ 23. 200.) skoDX0C1)) (and (not (<= (- 1.) skoY10C1)) (not (<= (- 12.) skoX10C1))))))))))))
-----[end problem]-----

