-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoDY0C1,skoDX0C1,skoY10C1,skoX10C1}, ForAll[{}, And[-12>skoX10C1,-1>skoY10C1,(23/200)>skoDX0C1,(23/200)>skoDY0C1,85>skoTC1,skoDX0C1>(1/10),skoDY0C1>(1/10),skoTC1>80,skoX10C1>-13,skoY10C1>-2]]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoDY0C1) (E skoDX0C1) (E skoY10C1) (E skoX10C1) [[skoX10C1<-12]/\[[skoY10C1<-1]/\[[skoDX0C1<23/200]/\[[skoDY0C1<23/200]/\[[skoTC1<85]/\[[1/10<skoDX0C1]/\[[1/10<skoDY0C1]/\[[80<skoTC1]/\[[-13<skoX10C1]/\[-2<skoY10C1]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoDY0C1 () Real) (declare-fun skoDX0C1 () Real) (declare-fun skoY10C1 () Real) (declare-fun skoX10C1 () Real) (assert (and (not (<= (- 12.) skoX10C1)) (and (not (<= (- 1.) skoY10C1)) (and (not (<= (/ 23. 200.) skoDX0C1)) (and (not (<= (/ 23. 200.) skoDY0C1)) (and (not (<= 85. skoTC1)) (and (not (<= skoDX0C1 (/ 1. 10.))) (and (not (<= skoDY0C1 (/ 1. 10.))) (and (not (<= skoTC1 80.)) (and (not (<= skoX10C1 (- 13.))) (not (<= skoY10C1 (- 2.)))))))))))))
-----[end problem]-----

