-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoX2C1,skoX1C1}, ForAll[{}, And[skoX2C1*(-2+skoX2C1*skoX2C1)<=0,skoX2C1*(2+skoX2C1*skoX2C1*-1)>0,skoX1C1>(1/10),2>skoX1C1,skoX2C1>0,skoX2C1>-5,skoX1C1>0,skoX1C1>-3,5>skoX2C1,3>skoX1C1]]], Reals]]

% In QepcadB format:
(E skoX2C1) (E skoX1C1) [[(skoX2C1 (-2+(skoX2C1 skoX2C1)))<=0]/\[[0<(skoX2C1 (2+(skoX2C1 skoX2C1 (-1))))]/\[[1/10<skoX1C1]/\[[skoX1C1<2]/\[[0<skoX2C1]/\[[-5<skoX2C1]/\[[0<skoX1C1]/\[[-3<skoX1C1]/\[[skoX2C1<5]/\[skoX1C1<3]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoX2C1 () Real) (declare-fun skoX1C1 () Real) (assert (and (<= (* skoX2C1 (+ (- 2.) (* skoX2C1 skoX2C1))) 0.) (and (not (<= (* skoX2C1 (+ 2. (* skoX2C1 (* skoX2C1 (- 1.))))) 0.)) (and (not (<= skoX1C1 (/ 1. 10.))) (and (not (<= 2. skoX1C1)) (and (not (<= skoX2C1 0.)) (and (not (<= skoX2C1 (- 5.))) (and (not (<= skoX1C1 0.)) (and (not (<= skoX1C1 (- 3.))) (and (not (<= 5. skoX2C1)) (not (<= 3. skoX1C1))))))))))))
-----[end problem]-----

