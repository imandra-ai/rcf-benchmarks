-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[skoYC1*(skoXC1*skoXC1*skoXC1*skoXC1*skoXC1*skoXC1*(-1/8)+skoYC1*(skoXC1*skoXC1*skoXC1*skoXC1*skoXC1*(-1/8)+skoYC1*skoXC1*skoXC1*skoXC1*skoXC1*(-1/24)))<=skoXC1*skoXC1*skoXC1*skoXC1*skoXC1*skoXC1*skoXC1*(1/24),skoYC1*(skoXC1*skoXC1*skoXC1*skoXC1*skoXC1*skoXC1*(1/8)+skoYC1*(skoXC1*skoXC1*skoXC1*skoXC1*skoXC1*(1/8)+skoYC1*skoXC1*skoXC1*skoXC1*skoXC1*(1/24)))<=skoXC1*skoXC1*skoXC1*skoXC1*skoXC1*skoXC1*skoXC1*(-1/24),skoYC1*(skoXC1*skoXC1*((-3/1000)+skoXC1*((-1/36)+skoXC1*skoXC1*(-1/4)))+skoYC1*(skoXC1*((-3/1000)+skoXC1*((-1/24)+skoXC1*skoXC1*(-11/8)))+skoYC1*((-1/1000)+skoXC1*((-1/36)+skoXC1*skoXC1*(-53/24))+skoYC1*((-1/144)+skoXC1*skoXC1*(-3/2)+skoYC1*skoXC1*(-3/8)))))>skoXC1*skoXC1*skoXC1*((1/1000)+skoXC1*((1/144)+skoXC1*skoXC1*(-1/24))),1+skoXC1*-1>skoYC1,skoYC1>0,skoXC1>0]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[(skoYC1 ((skoXC1 skoXC1 skoXC1 skoXC1 skoXC1 skoXC1 (-1/8))+(skoYC1 ((skoXC1 skoXC1 skoXC1 skoXC1 skoXC1 (-1/8))+(skoYC1 skoXC1 skoXC1 skoXC1 skoXC1 (-1/24))))))<=(skoXC1 skoXC1 skoXC1 skoXC1 skoXC1 skoXC1 skoXC1 (1/24))]/\[[(skoYC1 ((skoXC1 skoXC1 skoXC1 skoXC1 skoXC1 skoXC1 (1/8))+(skoYC1 ((skoXC1 skoXC1 skoXC1 skoXC1 skoXC1 (1/8))+(skoYC1 skoXC1 skoXC1 skoXC1 skoXC1 (1/24))))))<=(skoXC1 skoXC1 skoXC1 skoXC1 skoXC1 skoXC1 skoXC1 (-1/24))]/\[[(skoXC1 skoXC1 skoXC1 (1/1000+(skoXC1 (1/144+(skoXC1 skoXC1 (-1/24))))))<(skoYC1 ((skoXC1 skoXC1 (-3/1000+(skoXC1 (-1/36+(skoXC1 skoXC1 (-1/4))))))+(skoYC1 ((skoXC1 (-3/1000+(skoXC1 (-1/24+(skoXC1 skoXC1 (-11/8))))))+(skoYC1 ((-1/1000+(skoXC1 (-1/36+(skoXC1 skoXC1 (-53/24)))))+(skoYC1 ((-1/144+(skoXC1 skoXC1 (-3/2)))+(skoYC1 skoXC1 (-3/8))))))))))]/\[[skoYC1<(1+(skoXC1 (-1)))]/\[[0<skoYC1]/\[0<skoXC1]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (<= (* skoYC1 (+ (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 1.) 8.))))))) (* skoYC1 (+ (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))) (* skoYC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 1.) 24.)))))))))) (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ 1. 24.))))))))) (and (<= (* skoYC1 (+ (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ 1. 8.))))))) (* skoYC1 (+ (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ 1. 8.)))))) (* skoYC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ 1. 24.)))))))))) (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 1.) 24.))))))))) (and (not (<= (* skoYC1 (+ (* skoXC1 (* skoXC1 (+ (/ (- 3.) 1000.) (* skoXC1 (+ (/ (- 1.) 36.) (* skoXC1 (* skoXC1 (/ (- 1.) 4.)))))))) (* skoYC1 (+ (* skoXC1 (+ (/ (- 3.) 1000.) (* skoXC1 (+ (/ (- 1.) 24.) (* skoXC1 (* skoXC1 (/ (- 11.) 8.))))))) (* skoYC1 (+ (+ (/ (- 1.) 1000.) (* skoXC1 (+ (/ (- 1.) 36.) (* skoXC1 (* skoXC1 (/ (- 53.) 24.)))))) (* skoYC1 (+ (+ (/ (- 1.) 144.) (* skoXC1 (* skoXC1 (/ (- 3.) 2.)))) (* skoYC1 (* skoXC1 (/ (- 3.) 8.))))))))))) (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 1. 1000.) (* skoXC1 (+ (/ 1. 144.) (* skoXC1 (* skoXC1 (/ (- 1.) 24.))))))))))) (and (not (<= (+ 1. (* skoXC1 (- 1.))) skoYC1)) (and (not (<= skoYC1 0.)) (not (<= skoXC1 0.))))))))
-----[end problem]-----

