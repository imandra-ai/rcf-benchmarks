-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1}, ForAll[{}, And[skoAC1*-1<=skoTC1,skoTC1*(-1+skoAC1*skoAC1*(1/2)+skoTC1*(skoAC1*(1/2)+skoTC1*(1/6)))<=skoAC1*(1+skoAC1*skoAC1*(-1/6)),skoTC1*(1+skoAC1*skoAC1*(-1/2)+skoTC1*(skoAC1*(-1/2)+skoTC1*(-1/6)))>skoAC1*(-1+skoAC1*skoAC1*(1/6)),(7/5)>skoAC1,(7/5)>skoTC1,skoAC1>(1/10),skoTC1>0]]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) [[(skoAC1 (-1))<=skoTC1]/\[[(skoTC1 ((-1+(skoAC1 skoAC1 (1/2)))+(skoTC1 ((skoAC1 (1/2))+(skoTC1 (1/6))))))<=(skoAC1 (1+(skoAC1 skoAC1 (-1/6))))]/\[[(skoAC1 (-1+(skoAC1 skoAC1 (1/6))))<(skoTC1 ((1+(skoAC1 skoAC1 (-1/2)))+(skoTC1 ((skoAC1 (-1/2))+(skoTC1 (-1/6))))))]/\[[skoAC1<7/5]/\[[skoTC1<7/5]/\[[1/10<skoAC1]/\[0<skoTC1]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoAC1 (- 1.)) skoTC1) (and (<= (* skoTC1 (+ (+ (- 1.) (* skoAC1 (* skoAC1 (/ 1. 2.)))) (* skoTC1 (+ (* skoAC1 (/ 1. 2.)) (* skoTC1 (/ 1. 6.)))))) (* skoAC1 (+ 1. (* skoAC1 (* skoAC1 (/ (- 1.) 6.)))))) (and (not (<= (* skoTC1 (+ (+ 1. (* skoAC1 (* skoAC1 (/ (- 1.) 2.)))) (* skoTC1 (+ (* skoAC1 (/ (- 1.) 2.)) (* skoTC1 (/ (- 1.) 6.)))))) (* skoAC1 (+ (- 1.) (* skoAC1 (* skoAC1 (/ 1. 6.))))))) (and (not (<= (/ 7. 5.) skoAC1)) (and (not (<= (/ 7. 5.) skoTC1)) (and (not (<= skoAC1 (/ 1. 10.))) (not (<= skoTC1 0.)))))))))
-----[end problem]-----

