-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoX1USCORE0C1,skoX2USCORE0C1,skoX1C1,skoX2C1,skoAC1,skoOMEGAC1}, ForAll[{}, And[skoOMEGAC1!=(9/10),skoX2C1*(skoX1C1*-1+skoX2C1*-4)>skoAC1*-1+skoX1C1*skoX1C1,skoX2USCORE0C1*(skoX1USCORE0C1+skoX2USCORE0C1*4)<=(69929971/100000000)+skoX1USCORE0C1*skoX1USCORE0C1*-1,skoAC1>0]]], Reals]]

% In QepcadB format:
(E skoX1USCORE0C1) (E skoX2USCORE0C1) (E skoX1C1) (E skoX2C1) (E skoAC1) (E skoOMEGAC1) [[skoOMEGAC1 /=9/10]/\[[((skoAC1 (-1))+(skoX1C1 skoX1C1))<(skoX2C1 ((skoX1C1 (-1))+(skoX2C1 (-4))))]/\[[(skoX2USCORE0C1 (skoX1USCORE0C1+(skoX2USCORE0C1 (4))))<=(69929971/100000000+(skoX1USCORE0C1 skoX1USCORE0C1 (-1)))]/\[0<skoAC1]]]].

% In SMTLib2 format:
(declare-fun skoX1USCORE0C1 () Real) (declare-fun skoX2USCORE0C1 () Real) (declare-fun skoX1C1 () Real) (declare-fun skoX2C1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoOMEGAC1 () Real) (assert (and (not (= skoOMEGAC1 (/ 9. 10.))) (and (not (<= (* skoX2C1 (+ (* skoX1C1 (- 1.)) (* skoX2C1 (- 4.)))) (+ (* skoAC1 (- 1.)) (* skoX1C1 skoX1C1)))) (and (<= (* skoX2USCORE0C1 (+ skoX1USCORE0C1 (* skoX2USCORE0C1 4.))) (+ (/ 69929971. 100000000.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (- 1.))))) (not (<= skoAC1 0.))))))
-----[end problem]-----

