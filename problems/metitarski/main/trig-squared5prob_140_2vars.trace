-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,skoXC1}, ForAll[{}, And[skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(1/24))<=-1,skoYC1*(skoXC1*skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(-1/24))+skoYC1*(1+skoXC1*skoXC1*((1/4)+skoXC1*skoXC1*(-1/48))+skoYC1*(skoXC1*((1/6)+skoXC1*skoXC1*(1/12))+skoYC1*((-7/24)+skoXC1*skoXC1*(-1/48)+skoYC1*(skoXC1*(-1/24)+skoYC1*(1/48))))))>(8/5)+skoXC1*skoXC1*(-1+skoXC1*skoXC1*((7/24)+skoXC1*skoXC1*(-1/48))),skoYC1*(skoXC1+skoYC1*(1/2))>1+skoXC1*skoXC1*(-1/2),1>skoXC1,1>skoYC1,skoXC1>-1,skoYC1>-1,Or[skoYC1>0,0<=skoYC1*(1+skoYC1*skoYC1*(-1/6))]]]], Reals]]

% In QepcadB format:
(E skoYC1) (E skoXC1) [[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (1/24))))<=-1]/\[[(8/5+(skoXC1 skoXC1 (-1+(skoXC1 skoXC1 (7/24+(skoXC1 skoXC1 (-1/48)))))))<(skoYC1 ((skoXC1 skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (-1/24))))+(skoYC1 ((1+(skoXC1 skoXC1 (1/4+(skoXC1 skoXC1 (-1/48)))))+(skoYC1 ((skoXC1 (1/6+(skoXC1 skoXC1 (1/12))))+(skoYC1 ((-7/24+(skoXC1 skoXC1 (-1/48)))+(skoYC1 ((skoXC1 (-1/24))+(skoYC1 (1/48))))))))))))]/\[[(1+(skoXC1 skoXC1 (-1/2)))<(skoYC1 (skoXC1+(skoYC1 (1/2))))]/\[[skoXC1<1]/\[[skoYC1<1]/\[[-1<skoXC1]/\[[-1<skoYC1]/\[[0<skoYC1]\/[0<=(skoYC1 (1+(skoYC1 skoYC1 (-1/6))))]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ 1. 24.)))))) (- 1.)) (and (not (<= (* skoYC1 (+ (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ (- 1.) 24.))))))) (* skoYC1 (+ (+ 1. (* skoXC1 (* skoXC1 (+ (/ 1. 4.) (* skoXC1 (* skoXC1 (/ (- 1.) 48.))))))) (* skoYC1 (+ (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 1. 12.))))) (* skoYC1 (+ (+ (/ (- 7.) 24.) (* skoXC1 (* skoXC1 (/ (- 1.) 48.)))) (* skoYC1 (+ (* skoXC1 (/ (- 1.) 24.)) (* skoYC1 (/ 1. 48.)))))))))))) (+ (/ 8. 5.) (* skoXC1 (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 7. 24.) (* skoXC1 (* skoXC1 (/ (- 1.) 48.)))))))))))) (and (not (<= (* skoYC1 (+ skoXC1 (* skoYC1 (/ 1. 2.)))) (+ 1. (* skoXC1 (* skoXC1 (/ (- 1.) 2.)))))) (and (not (<= 1. skoXC1)) (and (not (<= 1. skoYC1)) (and (not (<= skoXC1 (- 1.))) (and (not (<= skoYC1 (- 1.))) (or (not (<= skoYC1 0.)) (<= 0. (* skoYC1 (+ 1. (* skoYC1 (* skoYC1 (/ (- 1.) 6.)))))))))))))))
-----[end problem]-----

