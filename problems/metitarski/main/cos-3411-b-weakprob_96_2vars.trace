-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoAC1,skoTC1}, ForAll[{}, And[skoTC1*(-1+skoAC1*skoAC1*(1/2)+skoTC1*(skoAC1*(1/2)+skoTC1*(1/6)))>skoAC1*(1+skoAC1*skoAC1*(-1/6)),skoTC1*(1+skoAC1*skoAC1*(-1/2)+skoTC1*(skoAC1*(-1/2)+skoTC1*(-1/6)))>skoAC1*(-1+skoAC1*skoAC1*(1/6)),skoTC1>0,skoAC1>(1/10),(7/5)>skoTC1,(7/5)>skoAC1]]], Reals]]

% In QepcadB format:
(E skoAC1) (E skoTC1) [[(skoAC1 (1+(skoAC1 skoAC1 (-1/6))))<(skoTC1 ((-1+(skoAC1 skoAC1 (1/2)))+(skoTC1 ((skoAC1 (1/2))+(skoTC1 (1/6))))))]/\[[(skoAC1 (-1+(skoAC1 skoAC1 (1/6))))<(skoTC1 ((1+(skoAC1 skoAC1 (-1/2)))+(skoTC1 ((skoAC1 (-1/2))+(skoTC1 (-1/6))))))]/\[[0<skoTC1]/\[[1/10<skoAC1]/\[[skoTC1<7/5]/\[skoAC1<7/5]]]]]].

% In SMTLib2 format:
(declare-fun skoAC1 () Real) (declare-fun skoTC1 () Real) (assert (and (not (<= (* skoTC1 (+ (+ (- 1.) (* skoAC1 (* skoAC1 (/ 1. 2.)))) (* skoTC1 (+ (* skoAC1 (/ 1. 2.)) (* skoTC1 (/ 1. 6.)))))) (* skoAC1 (+ 1. (* skoAC1 (* skoAC1 (/ (- 1.) 6.))))))) (and (not (<= (* skoTC1 (+ (+ 1. (* skoAC1 (* skoAC1 (/ (- 1.) 2.)))) (* skoTC1 (+ (* skoAC1 (/ (- 1.) 2.)) (* skoTC1 (/ (- 1.) 6.)))))) (* skoAC1 (+ (- 1.) (* skoAC1 (* skoAC1 (/ 1. 6.))))))) (and (not (<= skoTC1 0.)) (and (not (<= skoAC1 (/ 1. 10.))) (and (not (<= (/ 7. 5.) skoTC1)) (not (<= (/ 7. 5.) skoAC1))))))))
-----[end problem]-----

