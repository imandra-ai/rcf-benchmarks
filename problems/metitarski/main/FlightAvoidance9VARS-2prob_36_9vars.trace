-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoD20C1,skoE10C1,skoD10C1,skoE20C1,skoY10C1,skoX20C1,skoX10C1,skoY20C1,skoTC1}, ForAll[{}, And[skoE20C1*skoD10C1*-40000<=skoE10C1*skoD20C1*-40000,skoE20C1*skoD10C1*40000<=skoE10C1*skoD20C1*40000,skoE20C1*(skoD20C1*-20000+skoE20C1*10000)<=skoD10C1*skoD10C1*-10000+skoD20C1*skoD20C1*-10000+skoE10C1*(skoD10C1*20000+skoE10C1*-10000),skoY20C1*(skoD20C1*200+skoE20C1*-200)>skoE10C1*skoD20C1*40000+skoE20C1*skoD10C1*-40000+skoX10C1*(skoD10C1*200+skoE10C1*-200)+skoX20C1*(skoD20C1*200+skoE20C1*-200)+skoY10C1*(skoD10C1*-200+skoE10C1*200),skoY20C1>10,skoY10C1>10,skoTC1>0,skoE20C1>(1/10),skoE10C1>(1/10),skoD20C1>(1/10),skoD10C1>(1/10),10>skoTC1,(3/20)>skoE20C1,(3/20)>skoE10C1,(3/20)>skoD20C1,(3/20)>skoD10C1,-1>skoX20C1,-9>skoX10C1]]], Reals]]

% In QepcadB format:
(E skoD20C1) (E skoE10C1) (E skoD10C1) (E skoE20C1) (E skoY10C1) (E skoX20C1) (E skoX10C1) (E skoY20C1) (E skoTC1) [[(skoE20C1 skoD10C1 (-40000))<=(skoE10C1 skoD20C1 (-40000))]/\[[(skoE20C1 skoD10C1 (40000))<=(skoE10C1 skoD20C1 (40000))]/\[[(skoE20C1 ((skoD20C1 (-20000))+(skoE20C1 (10000))))<=(((skoD10C1 skoD10C1 (-10000))+(skoD20C1 skoD20C1 (-10000)))+(skoE10C1 ((skoD10C1 (20000))+(skoE10C1 (-10000)))))]/\[[(((((skoE10C1 skoD20C1 (40000))+(skoE20C1 skoD10C1 (-40000)))+(skoX10C1 ((skoD10C1 (200))+(skoE10C1 (-200)))))+(skoX20C1 ((skoD20C1 (200))+(skoE20C1 (-200)))))+(skoY10C1 ((skoD10C1 (-200))+(skoE10C1 (200)))))<(skoY20C1 ((skoD20C1 (200))+(skoE20C1 (-200))))]/\[[10<skoY20C1]/\[[10<skoY10C1]/\[[0<skoTC1]/\[[1/10<skoE20C1]/\[[1/10<skoE10C1]/\[[1/10<skoD20C1]/\[[1/10<skoD10C1]/\[[skoTC1<10]/\[[skoE20C1<3/20]/\[[skoE10C1<3/20]/\[[skoD20C1<3/20]/\[[skoD10C1<3/20]/\[[skoX20C1<-1]/\[skoX10C1<-9]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoD20C1 () Real) (declare-fun skoE10C1 () Real) (declare-fun skoD10C1 () Real) (declare-fun skoE20C1 () Real) (declare-fun skoY10C1 () Real) (declare-fun skoX20C1 () Real) (declare-fun skoX10C1 () Real) (declare-fun skoY20C1 () Real) (declare-fun skoTC1 () Real) (assert (and (<= (* skoE20C1 (* skoD10C1 (- 40000.))) (* skoE10C1 (* skoD20C1 (- 40000.)))) (and (<= (* skoE20C1 (* skoD10C1 40000.)) (* skoE10C1 (* skoD20C1 40000.))) (and (<= (* skoE20C1 (+ (* skoD20C1 (- 20000.)) (* skoE20C1 10000.))) (+ (+ (* skoD10C1 (* skoD10C1 (- 10000.))) (* skoD20C1 (* skoD20C1 (- 10000.)))) (* skoE10C1 (+ (* skoD10C1 20000.) (* skoE10C1 (- 10000.)))))) (and (not (<= (* skoY20C1 (+ (* skoD20C1 200.) (* skoE20C1 (- 200.)))) (+ (+ (+ (+ (* skoE10C1 (* skoD20C1 40000.)) (* skoE20C1 (* skoD10C1 (- 40000.)))) (* skoX10C1 (+ (* skoD10C1 200.) (* skoE10C1 (- 200.))))) (* skoX20C1 (+ (* skoD20C1 200.) (* skoE20C1 (- 200.))))) (* skoY10C1 (+ (* skoD10C1 (- 200.)) (* skoE10C1 200.)))))) (and (not (<= skoY20C1 10.)) (and (not (<= skoY10C1 10.)) (and (not (<= skoTC1 0.)) (and (not (<= skoE20C1 (/ 1. 10.))) (and (not (<= skoE10C1 (/ 1. 10.))) (and (not (<= skoD20C1 (/ 1. 10.))) (and (not (<= skoD10C1 (/ 1. 10.))) (and (not (<= 10. skoTC1)) (and (not (<= (/ 3. 20.) skoE20C1)) (and (not (<= (/ 3. 20.) skoE10C1)) (and (not (<= (/ 3. 20.) skoD20C1)) (and (not (<= (/ 3. 20.) skoD10C1)) (and (not (<= (- 1.) skoX20C1)) (not (<= (- 9.) skoX10C1))))))))))))))))))))
-----[end problem]-----

