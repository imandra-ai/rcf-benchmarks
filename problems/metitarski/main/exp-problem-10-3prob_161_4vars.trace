-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoCM1C1,skoCP1C1,skoXC1,skoCC1}, ForAll[{}, And[skoCP1C1*(-12+skoCM1C1*(72+skoCM1C1*-144)+skoCP1C1*(24+skoCM1C1*(-144+skoCM1C1*288)))>-2+skoCM1C1*(12+skoCM1C1*-24),skoXC1>2,skoCP1C1>0,skoCM1C1>0,skoCC1>0,10>skoXC1]]], Reals]]

% In QepcadB format:
(E skoCM1C1) (E skoCP1C1) (E skoXC1) (E skoCC1) [[(-2+(skoCM1C1 (12+(skoCM1C1 (-24)))))<(skoCP1C1 ((-12+(skoCM1C1 (72+(skoCM1C1 (-144)))))+(skoCP1C1 (24+(skoCM1C1 (-144+(skoCM1C1 (288))))))))]/\[[2<skoXC1]/\[[0<skoCP1C1]/\[[0<skoCM1C1]/\[[0<skoCC1]/\[skoXC1<10]]]]]].

% In SMTLib2 format:
(declare-fun skoCM1C1 () Real) (declare-fun skoCP1C1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoCC1 () Real) (assert (and (not (<= (* skoCP1C1 (+ (+ (- 12.) (* skoCM1C1 (+ 72. (* skoCM1C1 (- 144.))))) (* skoCP1C1 (+ 24. (* skoCM1C1 (+ (- 144.) (* skoCM1C1 288.))))))) (+ (- 2.) (* skoCM1C1 (+ 12. (* skoCM1C1 (- 24.))))))) (and (not (<= skoXC1 2.)) (and (not (<= skoCP1C1 0.)) (and (not (<= skoCM1C1 0.)) (and (not (<= skoCC1 0.)) (not (<= 10. skoXC1))))))))
-----[end problem]-----

