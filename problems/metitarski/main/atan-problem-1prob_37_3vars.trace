-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoS3C1,skoXC1,skoSXC1}, ForAll[{}, And[skoXC1*(skoS3C1*(471237/100000)+skoSXC1*(157079/100000)+skoXC1*skoS3C1*-8)>skoS3C1*3+skoSXC1,skoXC1*skoXC1*-80==75+skoSXC1*skoSXC1*-1,skoS3C1*skoS3C1==3,skoXC1>0,skoSXC1>0,skoS3C1>0]]], Reals]]

% In QepcadB format:
(E skoS3C1) (E skoXC1) (E skoSXC1) [[((skoS3C1 (3))+skoSXC1)<(skoXC1 (((skoS3C1 (471237/100000))+(skoSXC1 (157079/100000)))+(skoXC1 skoS3C1 (-8))))]/\[[(skoXC1 skoXC1 (-80))=(75+(skoSXC1 skoSXC1 (-1)))]/\[[(skoS3C1 skoS3C1)=3]/\[[0<skoXC1]/\[[0<skoSXC1]/\[0<skoS3C1]]]]]].

% In SMTLib2 format:
(declare-fun skoS3C1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoSXC1 () Real) (assert (and (not (<= (* skoXC1 (+ (+ (* skoS3C1 (/ 471237. 100000.)) (* skoSXC1 (/ 157079. 100000.))) (* skoXC1 (* skoS3C1 (- 8.))))) (+ (* skoS3C1 3.) skoSXC1))) (and (= (* skoXC1 (* skoXC1 (- 80.))) (+ 75. (* skoSXC1 (* skoSXC1 (- 1.))))) (and (= (* skoS3C1 skoS3C1) 3.) (and (not (<= skoXC1 0.)) (and (not (<= skoSXC1 0.)) (not (<= skoS3C1 0.))))))))
-----[end problem]-----

