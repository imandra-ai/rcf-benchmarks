-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoAC1,pi}, ForAll[{}, And[skoXC1*skoXC1*skoXC1*skoAC1*(1/6)<=skoAC1*skoAC1*(1/2000),skoXC1<=skoAC1*(1/2000),Or[skoAC1*(1/2000)>skoXC1,skoXC1>skoAC1*(1/2000)],skoAC1>skoXC1,skoXC1>0,Pi*(1/2)>skoAC1,(31415927/10000000)>Pi,Pi>(15707963/5000000)]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoAC1) (E pi) [[(skoXC1 skoXC1 skoXC1 skoAC1 (1/6))<=(skoAC1 skoAC1 (1/2000))]/\[[skoXC1<=(skoAC1 (1/2000))]/\[[[skoXC1<(skoAC1 (1/2000))]\/[(skoAC1 (1/2000))<skoXC1]]/\[[skoXC1<skoAC1]/\[[0<skoXC1]/\[[skoAC1<(pi (1/2))]/\[[pi<31415927/10000000]/\[15707963/5000000<pi]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoAC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoAC1 (/ 1. 6.))))) (* skoAC1 (* skoAC1 (/ 1. 2000.)))) (and (<= skoXC1 (* skoAC1 (/ 1. 2000.))) (and (or (not (<= (* skoAC1 (/ 1. 2000.)) skoXC1)) (not (<= skoXC1 (* skoAC1 (/ 1. 2000.))))) (and (not (<= skoAC1 skoXC1)) (and (not (<= skoXC1 0.)) (and (not (<= (* metit_our_pi (/ 1. 2.)) skoAC1)) (and (not (<= (/ 31415927. 10000000.) metit_our_pi)) (not (<= metit_our_pi (/ 15707963. 5000000.)))))))))))
-----[end problem]-----

