-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[0<=skoYC1,skoYC1*(-2+skoYC1*skoYC1*(1/3))<=0,Or[0>skoYC1,skoYC1>0],-1<=skoXC1,-1<=skoYC1,skoYC1<=2+skoXC1*-1,Or[0>skoXC1,skoXC1>0],skoXC1*(-1+skoXC1*skoXC1*(1/6))>0]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[0<=skoYC1]/\[[(skoYC1 (-2+(skoYC1 skoYC1 (1/3))))<=0]/\[[[skoYC1<0]\/[0<skoYC1]]/\[[-1<=skoXC1]/\[[-1<=skoYC1]/\[[skoYC1<=(2+(skoXC1 (-1)))]/\[[[skoXC1<0]\/[0<skoXC1]]/\[0<(skoXC1 (-1+(skoXC1 skoXC1 (1/6))))]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (<= 0. skoYC1) (and (<= (* skoYC1 (+ (- 2.) (* skoYC1 (* skoYC1 (/ 1. 3.))))) 0.) (and (or (not (<= 0. skoYC1)) (not (<= skoYC1 0.))) (and (<= (- 1.) skoXC1) (and (<= (- 1.) skoYC1) (and (<= skoYC1 (+ 2. (* skoXC1 (- 1.)))) (and (or (not (<= 0. skoXC1)) (not (<= skoXC1 0.))) (not (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 6.))))) 0.))))))))))
-----[end problem]-----

