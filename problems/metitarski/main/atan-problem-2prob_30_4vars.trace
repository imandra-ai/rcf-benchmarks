-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1,skoSC1}, ForAll[{}, And[skoSC1==0,0>skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1*-1+skoBC1*skoBC1*-1+skoTC1*skoTC1*-1)==skoBC1*skoBC1*skoAC1*skoAC1+skoSC1*skoSC1*-1,0<=skoSC1,skoTC1!=0,skoAC1>0,2>skoBC1,skoBC1>skoAC1]]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) (E skoSC1) [[skoSC1=0]/\[[skoTC1<0]/\[[(skoTC1 skoTC1 (((skoAC1 skoAC1 (-1))+(skoBC1 skoBC1 (-1)))+(skoTC1 skoTC1 (-1))))=((skoBC1 skoBC1 skoAC1 skoAC1)+(skoSC1 skoSC1 (-1)))]/\[[0<=skoSC1]/\[[skoTC1 /=0]/\[[0<skoAC1]/\[[skoBC1<2]/\[skoAC1<skoBC1]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoSC1 () Real) (assert (and (= skoSC1 0.) (and (not (<= 0. skoTC1)) (and (= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (+ (* skoBC1 (* skoBC1 (* skoAC1 skoAC1))) (* skoSC1 (* skoSC1 (- 1.))))) (and (<= 0. skoSC1) (and (not (= skoTC1 0.)) (and (not (<= skoAC1 0.)) (and (not (<= 2. skoBC1)) (not (<= skoBC1 skoAC1))))))))))
-----[end problem]-----

