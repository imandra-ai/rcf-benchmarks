-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoSC1}, ForAll[{}, And[skoXC1*skoXC1*(-70+skoXC1*skoXC1*-15)<=63,skoXC1>(1/2),skoXC1*(-3+skoSC1*3+skoXC1*(skoSC1*(1/25000)+skoXC1*(-4+skoSC1*-4)))<=skoSC1*(-3/100000),skoXC1*skoXC1*(-5+skoXC1*skoXC1*-4)==1+skoSC1*skoSC1*-1,0<=skoSC1,skoXC1>0]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoSC1) [[(skoXC1 skoXC1 (-70+(skoXC1 skoXC1 (-15))))<=63]/\[[1/2<skoXC1]/\[[(skoXC1 ((-3+(skoSC1 (3)))+(skoXC1 ((skoSC1 (1/25000))+(skoXC1 (-4+(skoSC1 (-4))))))))<=(skoSC1 (-3/100000))]/\[[(skoXC1 skoXC1 (-5+(skoXC1 skoXC1 (-4))))=(1+(skoSC1 skoSC1 (-1)))]/\[[0<=skoSC1]/\[0<skoXC1]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (- 70.) (* skoXC1 (* skoXC1 (- 15.)))))) 63.) (and (not (<= skoXC1 (/ 1. 2.))) (and (<= (* skoXC1 (+ (+ (- 3.) (* skoSC1 3.)) (* skoXC1 (+ (* skoSC1 (/ 1. 25000.)) (* skoXC1 (+ (- 4.) (* skoSC1 (- 4.)))))))) (* skoSC1 (/ (- 3.) 100000.))) (and (= (* skoXC1 (* skoXC1 (+ (- 5.) (* skoXC1 (* skoXC1 (- 4.)))))) (+ 1. (* skoSC1 (* skoSC1 (- 1.))))) (and (<= 0. skoSC1) (not (<= skoXC1 0.))))))))
-----[end problem]-----

