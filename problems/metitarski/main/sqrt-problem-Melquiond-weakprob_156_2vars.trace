-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[skoYC1*(6+skoXC1*(52+skoXC1*(48+skoXC1*10))+skoYC1*(19+skoXC1*(32+skoXC1*10)+skoYC1*(6+skoXC1*4+skoYC1*(1/2))))>(-1/2)+skoXC1*(-8+skoXC1*(-34+skoXC1*(-22+skoXC1*(-7/2)))),skoYC1>1,skoXC1>(3/2),2>skoXC1,(33/32)>skoYC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[(-1/2+(skoXC1 (-8+(skoXC1 (-34+(skoXC1 (-22+(skoXC1 (-7/2)))))))))<(skoYC1 ((6+(skoXC1 (52+(skoXC1 (48+(skoXC1 (10)))))))+(skoYC1 ((19+(skoXC1 (32+(skoXC1 (10)))))+(skoYC1 ((6+(skoXC1 (4)))+(skoYC1 (1/2))))))))]/\[[1<skoYC1]/\[[3/2<skoXC1]/\[[skoXC1<2]/\[skoYC1<33/32]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (not (<= (* skoYC1 (+ (+ 6. (* skoXC1 (+ 52. (* skoXC1 (+ 48. (* skoXC1 10.)))))) (* skoYC1 (+ (+ 19. (* skoXC1 (+ 32. (* skoXC1 10.)))) (* skoYC1 (+ (+ 6. (* skoXC1 4.)) (* skoYC1 (/ 1. 2.)))))))) (+ (/ (- 1.) 2.) (* skoXC1 (+ (- 8.) (* skoXC1 (+ (- 34.) (* skoXC1 (+ (- 22.) (* skoXC1 (/ (- 7.) 2.))))))))))) (and (not (<= skoYC1 1.)) (and (not (<= skoXC1 (/ 3. 2.))) (and (not (<= 2. skoXC1)) (not (<= (/ 33. 32.) skoYC1)))))))
-----[end problem]-----

