-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[skoYC1*(skoXC1*skoXC1*skoXC1*skoXC1*((-1/720)+skoXC1*((-1/1000)+skoXC1*((-1/144)+skoXC1*skoXC1*(1/24))))+skoYC1*(skoXC1*skoXC1*skoXC1*((-1/480)+skoXC1*((-1/200)+skoXC1*((-5/144)+skoXC1*skoXC1*(-1/6))))+skoYC1*(skoXC1*skoXC1*((-1/720)+skoXC1*((-1/100)+skoXC1*((-5/72)+skoXC1*skoXC1*(-11/6))))+skoYC1*(skoXC1*((-1/2880)+skoXC1*((-1/100)+skoXC1*((-5/72)+skoXC1*skoXC1*(-125/24))))+skoYC1*(skoXC1*((-1/200)+skoXC1*((-5/144)+skoXC1*skoXC1*(-175/24)))+skoYC1*((-1/1000)+skoXC1*((-1/144)+skoXC1*skoXC1*(-67/12))+skoYC1*(skoXC1*skoXC1*(-9/4)+skoYC1*skoXC1*(-3/8))))))))>skoXC1*skoXC1*skoXC1*skoXC1*skoXC1*(1/2880),skoYC1*(skoXC1*skoXC1*skoXC1*((-1/1000)+skoXC1*((1/72)+skoXC1*skoXC1*(-3/8)))+skoYC1*(skoXC1*skoXC1*skoXC1*((1/144)+skoXC1*skoXC1*(-3/4))+skoYC1*skoXC1*skoXC1*skoXC1*skoXC1*(-3/8)))>skoXC1*skoXC1*skoXC1*skoXC1*((1/1000)+skoXC1*(-1/144)),1+skoXC1*-1>skoYC1,skoYC1>0,skoXC1>0]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 skoXC1 (1/2880))<(skoYC1 ((skoXC1 skoXC1 skoXC1 skoXC1 (-1/720+(skoXC1 (-1/1000+(skoXC1 (-1/144+(skoXC1 skoXC1 (1/24))))))))+(skoYC1 ((skoXC1 skoXC1 skoXC1 (-1/480+(skoXC1 (-1/200+(skoXC1 (-5/144+(skoXC1 skoXC1 (-1/6))))))))+(skoYC1 ((skoXC1 skoXC1 (-1/720+(skoXC1 (-1/100+(skoXC1 (-5/72+(skoXC1 skoXC1 (-11/6))))))))+(skoYC1 ((skoXC1 (-1/2880+(skoXC1 (-1/100+(skoXC1 (-5/72+(skoXC1 skoXC1 (-125/24))))))))+(skoYC1 ((skoXC1 (-1/200+(skoXC1 (-5/144+(skoXC1 skoXC1 (-175/24))))))+(skoYC1 ((-1/1000+(skoXC1 (-1/144+(skoXC1 skoXC1 (-67/12)))))+(skoYC1 ((skoXC1 skoXC1 (-9/4))+(skoYC1 skoXC1 (-3/8))))))))))))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (1/1000+(skoXC1 (-1/144))))<(skoYC1 ((skoXC1 skoXC1 skoXC1 (-1/1000+(skoXC1 (1/72+(skoXC1 skoXC1 (-3/8))))))+(skoYC1 ((skoXC1 skoXC1 skoXC1 (1/144+(skoXC1 skoXC1 (-3/4))))+(skoYC1 skoXC1 skoXC1 skoXC1 skoXC1 (-3/8))))))]/\[[skoYC1<(1+(skoXC1 (-1)))]/\[[0<skoYC1]/\[0<skoXC1]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (not (<= (* skoYC1 (+ (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 1.) 720.) (* skoXC1 (+ (/ (- 1.) 1000.) (* skoXC1 (+ (/ (- 1.) 144.) (* skoXC1 (* skoXC1 (/ 1. 24.)))))))))))) (* skoYC1 (+ (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 1.) 480.) (* skoXC1 (+ (/ (- 1.) 200.) (* skoXC1 (+ (/ (- 5.) 144.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))))))))) (* skoYC1 (+ (* skoXC1 (* skoXC1 (+ (/ (- 1.) 720.) (* skoXC1 (+ (/ (- 1.) 100.) (* skoXC1 (+ (/ (- 5.) 72.) (* skoXC1 (* skoXC1 (/ (- 11.) 6.)))))))))) (* skoYC1 (+ (* skoXC1 (+ (/ (- 1.) 2880.) (* skoXC1 (+ (/ (- 1.) 100.) (* skoXC1 (+ (/ (- 5.) 72.) (* skoXC1 (* skoXC1 (/ (- 125.) 24.))))))))) (* skoYC1 (+ (* skoXC1 (+ (/ (- 1.) 200.) (* skoXC1 (+ (/ (- 5.) 144.) (* skoXC1 (* skoXC1 (/ (- 175.) 24.))))))) (* skoYC1 (+ (+ (/ (- 1.) 1000.) (* skoXC1 (+ (/ (- 1.) 144.) (* skoXC1 (* skoXC1 (/ (- 67.) 12.)))))) (* skoYC1 (+ (* skoXC1 (* skoXC1 (/ (- 9.) 4.))) (* skoYC1 (* skoXC1 (/ (- 3.) 8.))))))))))))))))) (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ 1. 2880.)))))))) (and (not (<= (* skoYC1 (+ (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 1.) 1000.) (* skoXC1 (+ (/ 1. 72.) (* skoXC1 (* skoXC1 (/ (- 3.) 8.))))))))) (* skoYC1 (+ (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 1. 144.) (* skoXC1 (* skoXC1 (/ (- 3.) 4.))))))) (* skoYC1 (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 3.) 8.)))))))))) (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 1. 1000.) (* skoXC1 (/ (- 1.) 144.))))))))) (and (not (<= (+ 1. (* skoXC1 (- 1.))) skoYC1)) (and (not (<= skoYC1 0.)) (not (<= skoXC1 0.)))))))
-----[end problem]-----

