-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[skoYC1*((-3/2)+skoXC1*(3+skoXC1*(-3/2)))>skoXC1*((7/2)+skoXC1*skoXC1*(-1/2)),skoXC1>(-1/2),skoYC1*((-3/2)+skoXC1*(3+skoXC1*(-3/2)))>skoXC1*((7/2)+skoXC1*skoXC1*(-1/2)),skoXC1*(-2+skoXC1)>0,skoYC1*skoYC1*skoYC1==skoXC1,skoXC1!=1,skoXC1>0,176>skoXC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[(skoXC1 (7/2+(skoXC1 skoXC1 (-1/2))))<(skoYC1 (-3/2+(skoXC1 (3+(skoXC1 (-3/2))))))]/\[[-1/2<skoXC1]/\[[(skoXC1 (7/2+(skoXC1 skoXC1 (-1/2))))<(skoYC1 (-3/2+(skoXC1 (3+(skoXC1 (-3/2))))))]/\[[0<(skoXC1 (-2+skoXC1))]/\[[(skoYC1 skoYC1 skoYC1)=skoXC1]/\[[skoXC1 /=1]/\[[0<skoXC1]/\[skoXC1<176]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (not (<= (* skoYC1 (+ (/ (- 3.) 2.) (* skoXC1 (+ 3. (* skoXC1 (/ (- 3.) 2.)))))) (* skoXC1 (+ (/ 7. 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 2.))))))) (and (not (<= skoXC1 (/ (- 1.) 2.))) (and (not (<= (* skoYC1 (+ (/ (- 3.) 2.) (* skoXC1 (+ 3. (* skoXC1 (/ (- 3.) 2.)))))) (* skoXC1 (+ (/ 7. 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 2.))))))) (and (not (<= (* skoXC1 (+ (- 2.) skoXC1)) 0.)) (and (= (* skoYC1 (* skoYC1 skoYC1)) skoXC1) (and (not (= skoXC1 1.)) (and (not (<= skoXC1 0.)) (not (<= 176. skoXC1))))))))))
-----[end problem]-----

