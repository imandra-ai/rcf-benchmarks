-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoX1USCORE0C1,skoX2USCORE0C1,skoX1C1,skoX2C1,skoAC1}, ForAll[{}, And[skoX2USCORE0C1*skoX1USCORE0C1*(-162/25)>skoX1USCORE0C1*skoX1USCORE0C1*(81/100),skoX2USCORE0C1*(skoX1USCORE0C1*((7/25)+skoX1USCORE0C1*skoX1USCORE0C1*(-81/25))+skoX2USCORE0C1*(-3/5))>skoX1USCORE0C1*skoX1USCORE0C1*((19/100)+skoX1USCORE0C1*skoX1USCORE0C1*(81/200)),Or[0>skoX1USCORE0C1,skoX2USCORE0C1*skoX1USCORE0C1*(-162/25)>skoX1USCORE0C1*skoX1USCORE0C1*(81/100)],Or[skoX1USCORE0C1*(-1/8)>skoX2USCORE0C1,skoX2USCORE0C1>skoX1USCORE0C1*(-1/8)],skoX2C1*(skoX1C1*-1+skoX2C1*-4)>skoAC1*-1+skoX1C1*skoX1C1,skoX2USCORE0C1*(skoX1USCORE0C1+skoX2USCORE0C1*4)<=(69929971/100000000)+skoX1USCORE0C1*skoX1USCORE0C1*-1,skoAC1>0,skoX2USCORE0C1<=skoX1USCORE0C1*(-1/8)]]], Reals]]

% In QepcadB format:
(E skoX1USCORE0C1) (E skoX2USCORE0C1) (E skoX1C1) (E skoX2C1) (E skoAC1) [[(skoX1USCORE0C1 skoX1USCORE0C1 (81/100))<(skoX2USCORE0C1 skoX1USCORE0C1 (-162/25))]/\[[(skoX1USCORE0C1 skoX1USCORE0C1 (19/100+(skoX1USCORE0C1 skoX1USCORE0C1 (81/200))))<(skoX2USCORE0C1 ((skoX1USCORE0C1 (7/25+(skoX1USCORE0C1 skoX1USCORE0C1 (-81/25))))+(skoX2USCORE0C1 (-3/5))))]/\[[[skoX1USCORE0C1<0]\/[(skoX1USCORE0C1 skoX1USCORE0C1 (81/100))<(skoX2USCORE0C1 skoX1USCORE0C1 (-162/25))]]/\[[[skoX2USCORE0C1<(skoX1USCORE0C1 (-1/8))]\/[(skoX1USCORE0C1 (-1/8))<skoX2USCORE0C1]]/\[[((skoAC1 (-1))+(skoX1C1 skoX1C1))<(skoX2C1 ((skoX1C1 (-1))+(skoX2C1 (-4))))]/\[[(skoX2USCORE0C1 (skoX1USCORE0C1+(skoX2USCORE0C1 (4))))<=(69929971/100000000+(skoX1USCORE0C1 skoX1USCORE0C1 (-1)))]/\[[0<skoAC1]/\[skoX2USCORE0C1<=(skoX1USCORE0C1 (-1/8))]]]]]]]].

% In SMTLib2 format:
(declare-fun skoX1USCORE0C1 () Real) (declare-fun skoX2USCORE0C1 () Real) (declare-fun skoX1C1 () Real) (declare-fun skoX2C1 () Real) (declare-fun skoAC1 () Real) (assert (and (not (<= (* skoX2USCORE0C1 (* skoX1USCORE0C1 (/ (- 162.) 25.))) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (/ 81. 100.))))) (and (not (<= (* skoX2USCORE0C1 (+ (* skoX1USCORE0C1 (+ (/ 7. 25.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (/ (- 81.) 25.))))) (* skoX2USCORE0C1 (/ (- 3.) 5.)))) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (+ (/ 19. 100.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (/ 81. 200.)))))))) (and (or (not (<= 0. skoX1USCORE0C1)) (not (<= (* skoX2USCORE0C1 (* skoX1USCORE0C1 (/ (- 162.) 25.))) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (/ 81. 100.)))))) (and (or (not (<= (* skoX1USCORE0C1 (/ (- 1.) 8.)) skoX2USCORE0C1)) (not (<= skoX2USCORE0C1 (* skoX1USCORE0C1 (/ (- 1.) 8.))))) (and (not (<= (* skoX2C1 (+ (* skoX1C1 (- 1.)) (* skoX2C1 (- 4.)))) (+ (* skoAC1 (- 1.)) (* skoX1C1 skoX1C1)))) (and (<= (* skoX2USCORE0C1 (+ skoX1USCORE0C1 (* skoX2USCORE0C1 4.))) (+ (/ 69929971. 100000000.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (- 1.))))) (and (not (<= skoAC1 0.)) (<= skoX2USCORE0C1 (* skoX1USCORE0C1 (/ (- 1.) 8.)))))))))))
-----[end problem]-----

