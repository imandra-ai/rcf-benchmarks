-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoRC1}, ForAll[{}, And[skoXC1*(-28+skoXC1*(-70+skoXC1*(-28+skoXC1*-1)))>1,skoXC1*(8+skoRC1*(-224/9)+skoXC1*(56+skoRC1*(-560/9)+skoXC1*(56+skoRC1*(-224/9)+skoXC1*(8+skoRC1*(-8/9)))))>skoRC1*(8/9),skoXC1*(-2+skoRC1*(8/9))>skoRC1*(-8/9)]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoRC1) [[1<(skoXC1 (-28+(skoXC1 (-70+(skoXC1 (-28+(skoXC1 (-1))))))))]/\[[(skoRC1 (8/9))<(skoXC1 ((8+(skoRC1 (-224/9)))+(skoXC1 ((56+(skoRC1 (-560/9)))+(skoXC1 ((56+(skoRC1 (-224/9)))+(skoXC1 (8+(skoRC1 (-8/9))))))))))]/\[(skoRC1 (-8/9))<(skoXC1 (-2+(skoRC1 (8/9))))]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoRC1 () Real) (assert (and (not (<= (* skoXC1 (+ (- 28.) (* skoXC1 (+ (- 70.) (* skoXC1 (+ (- 28.) (* skoXC1 (- 1.)))))))) 1.)) (and (not (<= (* skoXC1 (+ (+ 8. (* skoRC1 (/ (- 224.) 9.))) (* skoXC1 (+ (+ 56. (* skoRC1 (/ (- 560.) 9.))) (* skoXC1 (+ (+ 56. (* skoRC1 (/ (- 224.) 9.))) (* skoXC1 (+ 8. (* skoRC1 (/ (- 8.) 9.)))))))))) (* skoRC1 (/ 8. 9.)))) (not (<= (* skoXC1 (+ (- 2.) (* skoRC1 (/ 8. 9.)))) (* skoRC1 (/ (- 8.) 9.)))))))
-----[end problem]-----

