-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[skoYC1*(2+skoYC1)<=0,skoYC1!=0,Or[0>skoXC1,skoYC1*skoXC1*(12+skoXC1*(-6+skoXC1))>(3/2)+skoXC1*((45/4)+skoXC1*(1/8))],Or[-1>skoXC1,skoYC1*skoXC1>(1/8)+skoXC1],skoYC1*skoXC1>(-7/8),skoYC1<=5,skoYC1>0]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[(skoYC1 (2+skoYC1))<=0]/\[[skoYC1 /=0]/\[[[skoXC1<0]\/[(3/2+(skoXC1 (45/4+(skoXC1 (1/8)))))<(skoYC1 skoXC1 (12+(skoXC1 (-6+skoXC1))))]]/\[[[skoXC1<-1]\/[(1/8+skoXC1)<(skoYC1 skoXC1)]]/\[[-7/8<(skoYC1 skoXC1)]/\[[skoYC1<=5]/\[0<skoYC1]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (<= (* skoYC1 (+ 2. skoYC1)) 0.) (and (not (= skoYC1 0.)) (and (or (not (<= 0. skoXC1)) (not (<= (* skoYC1 (* skoXC1 (+ 12. (* skoXC1 (+ (- 6.) skoXC1))))) (+ (/ 3. 2.) (* skoXC1 (+ (/ 45. 4.) (* skoXC1 (/ 1. 8.)))))))) (and (or (not (<= (- 1.) skoXC1)) (not (<= (* skoYC1 skoXC1) (+ (/ 1. 8.) skoXC1)))) (and (not (<= (* skoYC1 skoXC1) (/ (- 7.) 8.))) (and (<= skoYC1 5.) (not (<= skoYC1 0.)))))))))
-----[end problem]-----

