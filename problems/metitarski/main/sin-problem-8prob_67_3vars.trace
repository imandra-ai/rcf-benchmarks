-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1,pi}, ForAll[{}, And[skoYC1*skoYC1*skoXC1*Pi*(1/12)<=skoXC1*(-1+Pi*(1/2)+skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((-1/120)+skoXC1*skoXC1*((1/5040)+skoXC1*skoXC1*(-1/362880))))),skoYC1*(1+Pi*(-1/2)+skoYC1*skoYC1*Pi*(1/12))>0,Pi>(15707963/5000000),(31415927/10000000)>Pi,Pi*(1/2)>skoYC1,skoXC1>0,skoYC1>skoXC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) (E pi) [[(skoYC1 skoYC1 skoXC1 pi (1/12))<=(skoXC1 ((-1+(pi (1/2)))+(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (-1/120+(skoXC1 skoXC1 (1/5040+(skoXC1 skoXC1 (-1/362880))))))))))]/\[[0<(skoYC1 ((1+(pi (-1/2)))+(skoYC1 skoYC1 pi (1/12))))]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[skoYC1<(pi (1/2))]/\[[0<skoXC1]/\[skoXC1<skoYC1]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (<= (* skoYC1 (* skoYC1 (* skoXC1 (* metit_our_pi (/ 1. 12.))))) (* skoXC1 (+ (+ (- 1.) (* metit_our_pi (/ 1. 2.))) (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 120.) (* skoXC1 (* skoXC1 (+ (/ 1. 5040.) (* skoXC1 (* skoXC1 (/ (- 1.) 362880.))))))))))))))) (and (not (<= (* skoYC1 (+ (+ 1. (* metit_our_pi (/ (- 1.) 2.))) (* skoYC1 (* skoYC1 (* metit_our_pi (/ 1. 12.)))))) 0.)) (and (not (<= metit_our_pi (/ 15707963. 5000000.))) (and (not (<= (/ 31415927. 10000000.) metit_our_pi)) (and (not (<= (* metit_our_pi (/ 1. 2.)) skoYC1)) (and (not (<= skoXC1 0.)) (not (<= skoYC1 skoXC1)))))))))
-----[end problem]-----

