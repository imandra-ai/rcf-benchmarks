-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,skoXC1}, ForAll[{}, And[skoXC1*skoXC1*(1/2)>1,skoYC1*skoYC1*(1+skoYC1*skoYC1*((-1/3)+skoYC1*skoYC1*((1/24)+skoYC1*skoYC1*(-1/576))))>(-1/4)+skoXC1*skoXC1*(1+skoXC1*skoXC1*(-1/4)),1>skoXC1,1>skoYC1,skoXC1>-1,skoYC1>-1]]], Reals]]

% In QepcadB format:
(E skoYC1) (E skoXC1) [[1<(skoXC1 skoXC1 (1/2))]/\[[(-1/4+(skoXC1 skoXC1 (1+(skoXC1 skoXC1 (-1/4)))))<(skoYC1 skoYC1 (1+(skoYC1 skoYC1 (-1/3+(skoYC1 skoYC1 (1/24+(skoYC1 skoYC1 (-1/576))))))))]/\[[skoXC1<1]/\[[skoYC1<1]/\[[-1<skoXC1]/\[-1<skoYC1]]]]]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (assert (and (not (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 1.)) (and (not (<= (* skoYC1 (* skoYC1 (+ 1. (* skoYC1 (* skoYC1 (+ (/ (- 1.) 3.) (* skoYC1 (* skoYC1 (+ (/ 1. 24.) (* skoYC1 (* skoYC1 (/ (- 1.) 576.)))))))))))) (+ (/ (- 1.) 4.) (* skoXC1 (* skoXC1 (+ 1. (* skoXC1 (* skoXC1 (/ (- 1.) 4.))))))))) (and (not (<= 1. skoXC1)) (and (not (<= 1. skoYC1)) (and (not (<= skoXC1 (- 1.))) (not (<= skoYC1 (- 1.)))))))))
-----[end problem]-----

