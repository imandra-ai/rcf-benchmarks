-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[1>skoXC1,skoYC1*((-35/12)+skoXC1*(-5+skoXC1*(15+skoXC1*((-10/3)+skoXC1*(-15/4)))))>-1+skoXC1*((-85/12)+skoXC1*(10+skoXC1*(5+skoXC1*((-20/3)+skoXC1*(-1/4))))),skoYC1*((-7/3)+skoXC1*(2+skoXC1*(3+skoXC1*(-8/3))))>-1+skoXC1*((-5/3)+skoXC1*(6+skoXC1*(-3+skoXC1*(-1/3)))),skoYC1*skoYC1*skoYC1==skoXC1,skoXC1!=1,skoXC1>(57/10000),(8837/50)>skoXC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[skoXC1<1]/\[[(-1+(skoXC1 (-85/12+(skoXC1 (10+(skoXC1 (5+(skoXC1 (-20/3+(skoXC1 (-1/4)))))))))))<(skoYC1 (-35/12+(skoXC1 (-5+(skoXC1 (15+(skoXC1 (-10/3+(skoXC1 (-15/4))))))))))]/\[[(-1+(skoXC1 (-5/3+(skoXC1 (6+(skoXC1 (-3+(skoXC1 (-1/3)))))))))<(skoYC1 (-7/3+(skoXC1 (2+(skoXC1 (3+(skoXC1 (-8/3))))))))]/\[[(skoYC1 skoYC1 skoYC1)=skoXC1]/\[[skoXC1 /=1]/\[[57/10000<skoXC1]/\[skoXC1<8837/50]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (not (<= 1. skoXC1)) (and (not (<= (* skoYC1 (+ (/ (- 35.) 12.) (* skoXC1 (+ (- 5.) (* skoXC1 (+ 15. (* skoXC1 (+ (/ (- 10.) 3.) (* skoXC1 (/ (- 15.) 4.)))))))))) (+ (- 1.) (* skoXC1 (+ (/ (- 85.) 12.) (* skoXC1 (+ 10. (* skoXC1 (+ 5. (* skoXC1 (+ (/ (- 20.) 3.) (* skoXC1 (/ (- 1.) 4.))))))))))))) (and (not (<= (* skoYC1 (+ (/ (- 7.) 3.) (* skoXC1 (+ 2. (* skoXC1 (+ 3. (* skoXC1 (/ (- 8.) 3.)))))))) (+ (- 1.) (* skoXC1 (+ (/ (- 5.) 3.) (* skoXC1 (+ 6. (* skoXC1 (+ (- 3.) (* skoXC1 (/ (- 1.) 3.))))))))))) (and (= (* skoYC1 (* skoYC1 skoYC1)) skoXC1) (and (not (= skoXC1 1.)) (and (not (<= skoXC1 (/ 57. 10000.))) (not (<= (/ 8837. 50.) skoXC1)))))))))
-----[end problem]-----

