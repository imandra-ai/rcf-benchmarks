-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,pi}, ForAll[{}, And[skoXC1*skoXC1*4<=Pi*Pi,skoXC1*skoXC1*Pi*Pi*(1/2)>Pi*Pi,skoXC1*skoXC1*((1/2)+skoXC1*skoXC1*((-1/24)+skoXC1*skoXC1*((1/720)+skoXC1*skoXC1*((-1/40320)+skoXC1*skoXC1*(1/3628800)))))>1,skoXC1*skoXC1*(1/2)>1,(-1/1000000000000)+Pi*(1/2)>skoXC1,Pi>(15707963/5000000),(31415927/10000000)>Pi,skoXC1>0]]], Reals]]

% In QepcadB format:
(E skoXC1) (E pi) [[(skoXC1 skoXC1 (4))<=(pi pi)]/\[[(pi pi)<(skoXC1 skoXC1 pi pi (1/2))]/\[[1<(skoXC1 skoXC1 (1/2+(skoXC1 skoXC1 (-1/24+(skoXC1 skoXC1 (1/720+(skoXC1 skoXC1 (-1/40320+(skoXC1 skoXC1 (1/3628800))))))))))]/\[[1<(skoXC1 skoXC1 (1/2))]/\[[skoXC1<(-1/1000000000000+(pi (1/2)))]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[0<skoXC1]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (<= (* skoXC1 (* skoXC1 4.)) (* metit_our_pi metit_our_pi)) (and (not (<= (* skoXC1 (* skoXC1 (* metit_our_pi (* metit_our_pi (/ 1. 2.))))) (* metit_our_pi metit_our_pi))) (and (not (<= (* skoXC1 (* skoXC1 (+ (/ 1. 2.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 24.) (* skoXC1 (* skoXC1 (+ (/ 1. 720.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 40320.) (* skoXC1 (* skoXC1 (/ 1. 3628800.))))))))))))))) 1.)) (and (not (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 1.)) (and (not (<= (+ (/ (- 1.) 1000000000000.) (* metit_our_pi (/ 1. 2.))) skoXC1)) (and (not (<= metit_our_pi (/ 15707963. 5000000.))) (and (not (<= (/ 31415927. 10000000.) metit_our_pi)) (not (<= skoXC1 0.))))))))))
-----[end problem]-----

