-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,skoZC1,skoXC1}, ForAll[{}, And[skoZC1*skoYC1*4>0,skoZC1*((1/4)+skoXC1*(1/4)+skoYC1*((1/4)+skoXC1*((-29/4)+skoXC1*(1/2))+skoYC1*skoXC1*((1/2)+skoXC1*(1/2)))+skoZC1*skoYC1*(skoXC1*((1/2)+skoXC1*(1/2))+skoYC1*skoXC1*((1/2)+skoXC1*(1/2))))>(-1/4)+skoXC1*(-1/4)+skoYC1*((-1/4)+skoXC1*(-1/4))]]], Reals]]

% In QepcadB format:
(E skoYC1) (E skoZC1) (E skoXC1) [[0<(skoZC1 skoYC1 (4))]/\[((-1/4+(skoXC1 (-1/4)))+(skoYC1 (-1/4+(skoXC1 (-1/4)))))<(skoZC1 (((1/4+(skoXC1 (1/4)))+(skoYC1 ((1/4+(skoXC1 (-29/4+(skoXC1 (1/2)))))+(skoYC1 skoXC1 (1/2+(skoXC1 (1/2)))))))+(skoZC1 skoYC1 ((skoXC1 (1/2+(skoXC1 (1/2))))+(skoYC1 skoXC1 (1/2+(skoXC1 (1/2))))))))]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun skoZC1 () Real) (declare-fun skoXC1 () Real) (assert (and (not (<= (* skoZC1 (* skoYC1 4.)) 0.)) (not (<= (* skoZC1 (+ (+ (+ (/ 1. 4.) (* skoXC1 (/ 1. 4.))) (* skoYC1 (+ (+ (/ 1. 4.) (* skoXC1 (+ (/ (- 29.) 4.) (* skoXC1 (/ 1. 2.))))) (* skoYC1 (* skoXC1 (+ (/ 1. 2.) (* skoXC1 (/ 1. 2.)))))))) (* skoZC1 (* skoYC1 (+ (* skoXC1 (+ (/ 1. 2.) (* skoXC1 (/ 1. 2.)))) (* skoYC1 (* skoXC1 (+ (/ 1. 2.) (* skoXC1 (/ 1. 2.)))))))))) (+ (+ (/ (- 1.) 4.) (* skoXC1 (/ (- 1.) 4.))) (* skoYC1 (+ (/ (- 1.) 4.) (* skoXC1 (/ (- 1.) 4.)))))))))
-----[end problem]-----

