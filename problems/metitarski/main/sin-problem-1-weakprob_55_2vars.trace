-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,pi}, ForAll[{}, And[0>Pi,0>skoXC1,skoXC1*(2+Pi*-1+skoXC1*skoXC1*(Pi*(1/6)+skoXC1*skoXC1*(Pi*(-1/120)+skoXC1*skoXC1*Pi*(1/5040))))>0,skoXC1>(1/1000000000000000)+Pi*(-1/2),(-1/1000000000000000)+Pi*(1/2)>skoXC1,Pi>(15707963/5000000),(31415927/10000000)>Pi,skoXC1!=0]]], Reals]]

% In QepcadB format:
(E skoXC1) (E pi) [[pi<0]/\[[skoXC1<0]/\[[0<(skoXC1 ((2+(pi (-1)))+(skoXC1 skoXC1 ((pi (1/6))+(skoXC1 skoXC1 ((pi (-1/120))+(skoXC1 skoXC1 pi (1/5040))))))))]/\[[(1/1000000000000000+(pi (-1/2)))<skoXC1]/\[[skoXC1<(-1/1000000000000000+(pi (1/2)))]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[skoXC1 /=0]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (not (<= 0. metit_our_pi)) (and (not (<= 0. skoXC1)) (and (not (<= (* skoXC1 (+ (+ 2. (* metit_our_pi (- 1.))) (* skoXC1 (* skoXC1 (+ (* metit_our_pi (/ 1. 6.)) (* skoXC1 (* skoXC1 (+ (* metit_our_pi (/ (- 1.) 120.)) (* skoXC1 (* skoXC1 (* metit_our_pi (/ 1. 5040.)))))))))))) 0.)) (and (not (<= skoXC1 (+ (/ 1. 1000000000000000.) (* metit_our_pi (/ (- 1.) 2.))))) (and (not (<= (+ (/ (- 1.) 1000000000000000.) (* metit_our_pi (/ 1. 2.))) skoXC1)) (and (not (<= metit_our_pi (/ 15707963. 5000000.))) (and (not (<= (/ 31415927. 10000000.) metit_our_pi)) (not (= skoXC1 0.))))))))))
-----[end problem]-----

