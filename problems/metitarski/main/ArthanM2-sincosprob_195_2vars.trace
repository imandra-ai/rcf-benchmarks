-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, ForAll[{}, And[0>skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))>skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0]]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoMC1<0]/\[[(skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))]/\[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (not (<= 0. skoMC1)) (and (not (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (not (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.)))))
-----[end problem]-----

