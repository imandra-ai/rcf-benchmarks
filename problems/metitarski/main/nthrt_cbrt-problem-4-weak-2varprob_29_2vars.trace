-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[skoXC1*(672+skoXC1*(840+skoXC1*80))<=-28,skoYC1*(-14+skoXC1*(-336+skoXC1*(-420+skoXC1*-40)))>skoXC1*(-360+skoXC1*(-1008+skoXC1*-252)),1>skoXC1,skoYC1*(-2+skoXC1*(-20+skoXC1*-5))<=skoXC1*(-30+skoXC1*-24),skoYC1*((-1/2)+skoXC1*-1)<=skoXC1*-3,skoYC1*skoYC1*skoYC1==skoXC1*2,0<=skoYC1,skoXC1>(1/200),360>skoXC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[(skoXC1 (672+(skoXC1 (840+(skoXC1 (80))))))<=-28]/\[[(skoXC1 (-360+(skoXC1 (-1008+(skoXC1 (-252))))))<(skoYC1 (-14+(skoXC1 (-336+(skoXC1 (-420+(skoXC1 (-40))))))))]/\[[skoXC1<1]/\[[(skoYC1 (-2+(skoXC1 (-20+(skoXC1 (-5))))))<=(skoXC1 (-30+(skoXC1 (-24))))]/\[[(skoYC1 (-1/2+(skoXC1 (-1))))<=(skoXC1 (-3))]/\[[(skoYC1 skoYC1 skoYC1)=(skoXC1 (2))]/\[[0<=skoYC1]/\[[1/200<skoXC1]/\[skoXC1<360]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (<= (* skoXC1 (+ 672. (* skoXC1 (+ 840. (* skoXC1 80.))))) (- 28.)) (and (not (<= (* skoYC1 (+ (- 14.) (* skoXC1 (+ (- 336.) (* skoXC1 (+ (- 420.) (* skoXC1 (- 40.)))))))) (* skoXC1 (+ (- 360.) (* skoXC1 (+ (- 1008.) (* skoXC1 (- 252.)))))))) (and (not (<= 1. skoXC1)) (and (<= (* skoYC1 (+ (- 2.) (* skoXC1 (+ (- 20.) (* skoXC1 (- 5.)))))) (* skoXC1 (+ (- 30.) (* skoXC1 (- 24.))))) (and (<= (* skoYC1 (+ (/ (- 1.) 2.) (* skoXC1 (- 1.)))) (* skoXC1 (- 3.))) (and (= (* skoYC1 (* skoYC1 skoYC1)) (* skoXC1 2.)) (and (<= 0. skoYC1) (and (not (<= skoXC1 (/ 1. 200.))) (not (<= 360. skoXC1)))))))))))
-----[end problem]-----

