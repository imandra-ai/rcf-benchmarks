-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,V000040,V000070}, ForAll[{}, And[-5<=V000070,(-5/2)<=V000040,0<=V000070,0>V000040,Or[V000065>(5/2),0>V000065,skoYC1*(-1440+V000065*V000065*(96+V000065*V000065*(-6+V000065*-1)))<=-1440+V000065*V000065*(-624+V000065*V000065*-18)],Or[(-5/2)>V000046,0<=V000046,skoYC1*(-24+V000046*V000046*(4+V000046))<=-24+V000046*V000046*-8]]]], Reals]]

% In QepcadB format:
(E skoYC1) (E V000040) (E V000070) [[-5<=V000070]/\[[-5/2<=V000040]/\[[0<=V000070]/\[[V000040<0]/\[[[5/2<V000065]\/[[V000065<0]\/[(skoYC1 (-1440+(V000065 V000065 (96+(V000065 V000065 (-6+(V000065 (-1))))))))<=(-1440+(V000065 V000065 (-624+(V000065 V000065 (-18)))))]]]/\[[V000046<-5/2]\/[[0<=V000046]\/[(skoYC1 (-24+(V000046 V000046 (4+V000046))))<=(-24+(V000046 V000046 (-8)))]]]]]]]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun V000040 () Real) (declare-fun V000070 () Real) (assert (and (<= (- 5.) V000070) (and (<= (/ (- 5.) 2.) V000040) (and (<= 0. V000070) (and (not (<= 0. V000040)) (and (or (not (<= V000065 (/ 5. 2.))) (or (not (<= 0. V000065)) (<= (* skoYC1 (+ (- 1440.) (* V000065 (* V000065 (+ 96. (* V000065 (* V000065 (+ (- 6.) (* V000065 (- 1.)))))))))) (+ (- 1440.) (* V000065 (* V000065 (+ (- 624.) (* V000065 (* V000065 (- 18.)))))))))) (or (not (<= (/ (- 5.) 2.) V000046)) (or (<= 0. V000046) (<= (* skoYC1 (+ (- 24.) (* V000046 (* V000046 (+ 4. V000046))))) (+ (- 24.) (* V000046 (* V000046 (- 8.)))))))))))))
-----[end problem]-----

