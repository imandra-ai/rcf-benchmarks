-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoDC1,skoYC1,skoS1C1,skoS2C1,skoXC1}, ForAll[{}, And[skoYC1*(2+skoDC1*2+skoYC1*-1)==1+skoDC1*(2+skoDC1)+skoS2C1*skoS2C1*-1+skoXC1*skoXC1,skoYC1*(2+skoYC1*-1)==1+skoS1C1*skoS1C1*-1+skoXC1*skoXC1,skoS2C1>1+skoDC1,skoS1C1<=1,0<=skoS2C1,0<=skoS1C1,0<=skoDC1]]], Reals]]

% In QepcadB format:
(E skoDC1) (E skoYC1) (E skoS1C1) (E skoS2C1) (E skoXC1) [[(skoYC1 ((2+(skoDC1 (2)))+(skoYC1 (-1))))=(((1+(skoDC1 (2+skoDC1)))+(skoS2C1 skoS2C1 (-1)))+(skoXC1 skoXC1))]/\[[(skoYC1 (2+(skoYC1 (-1))))=((1+(skoS1C1 skoS1C1 (-1)))+(skoXC1 skoXC1))]/\[[(1+skoDC1)<skoS2C1]/\[[skoS1C1<=1]/\[[0<=skoS2C1]/\[[0<=skoS1C1]/\[0<=skoDC1]]]]]]].

% In SMTLib2 format:
(declare-fun skoDC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoS1C1 () Real) (declare-fun skoS2C1 () Real) (declare-fun skoXC1 () Real) (assert (and (= (* skoYC1 (+ (+ 2. (* skoDC1 2.)) (* skoYC1 (- 1.)))) (+ (+ (+ 1. (* skoDC1 (+ 2. skoDC1))) (* skoS2C1 (* skoS2C1 (- 1.)))) (* skoXC1 skoXC1))) (and (= (* skoYC1 (+ 2. (* skoYC1 (- 1.)))) (+ (+ 1. (* skoS1C1 (* skoS1C1 (- 1.)))) (* skoXC1 skoXC1))) (and (not (<= skoS2C1 (+ 1. skoDC1))) (and (<= skoS1C1 1.) (and (<= 0. skoS2C1) (and (<= 0. skoS1C1) (<= 0. skoDC1))))))))
-----[end problem]-----

