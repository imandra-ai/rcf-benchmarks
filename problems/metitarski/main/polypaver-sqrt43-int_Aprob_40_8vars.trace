-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoRC1,skoE1C1,skoE2C1,skoXC1,skoEA3C1,skoE3C1,skoEA2C1,skoEA1C1}, ForAll[{}, And[skoXC1*((1/2)+skoE1C1*(1/2)+skoE2C1*((1/2)+skoE1C1*(1/2))+skoE3C1*((1/2)+skoE1C1*(1/2)+skoE2C1*((1/2)+skoE1C1*(1/2))))>skoRC1*(skoEA1C1*-1+skoEA2C1*((-1/2)+skoE1C1*(-1/2))+skoEA3C1*((-1/2)+skoE1C1*(-1/2)+skoE2C1*((-1/2)+skoE1C1*(-1/2)))+skoRC1*((1/2)+skoE1C1*(-1/2)+skoE2C1*((-1/2)+skoE1C1*(-1/2)))),skoRC1>0]]], Reals]]

% In QepcadB format:
(E skoRC1) (E skoE1C1) (E skoE2C1) (E skoXC1) (E skoEA3C1) (E skoE3C1) (E skoEA2C1) (E skoEA1C1) [[(skoRC1 ((((skoEA1C1 (-1))+(skoEA2C1 (-1/2+(skoE1C1 (-1/2)))))+(skoEA3C1 ((-1/2+(skoE1C1 (-1/2)))+(skoE2C1 (-1/2+(skoE1C1 (-1/2)))))))+(skoRC1 ((1/2+(skoE1C1 (-1/2)))+(skoE2C1 (-1/2+(skoE1C1 (-1/2))))))))<(skoXC1 (((1/2+(skoE1C1 (1/2)))+(skoE2C1 (1/2+(skoE1C1 (1/2)))))+(skoE3C1 ((1/2+(skoE1C1 (1/2)))+(skoE2C1 (1/2+(skoE1C1 (1/2))))))))]/\[0<skoRC1]].

% In SMTLib2 format:
(declare-fun skoRC1 () Real) (declare-fun skoE1C1 () Real) (declare-fun skoE2C1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoEA3C1 () Real) (declare-fun skoE3C1 () Real) (declare-fun skoEA2C1 () Real) (declare-fun skoEA1C1 () Real) (assert (and (not (<= (* skoXC1 (+ (+ (+ (/ 1. 2.) (* skoE1C1 (/ 1. 2.))) (* skoE2C1 (+ (/ 1. 2.) (* skoE1C1 (/ 1. 2.))))) (* skoE3C1 (+ (+ (/ 1. 2.) (* skoE1C1 (/ 1. 2.))) (* skoE2C1 (+ (/ 1. 2.) (* skoE1C1 (/ 1. 2.)))))))) (* skoRC1 (+ (+ (+ (* skoEA1C1 (- 1.)) (* skoEA2C1 (+ (/ (- 1.) 2.) (* skoE1C1 (/ (- 1.) 2.))))) (* skoEA3C1 (+ (+ (/ (- 1.) 2.) (* skoE1C1 (/ (- 1.) 2.))) (* skoE2C1 (+ (/ (- 1.) 2.) (* skoE1C1 (/ (- 1.) 2.))))))) (* skoRC1 (+ (+ (/ 1. 2.) (* skoE1C1 (/ (- 1.) 2.))) (* skoE2C1 (+ (/ (- 1.) 2.) (* skoE1C1 (/ (- 1.) 2.)))))))))) (not (<= skoRC1 0.))))
-----[end problem]-----

