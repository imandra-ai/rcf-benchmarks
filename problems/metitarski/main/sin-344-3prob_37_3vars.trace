-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,skoXC1,skoZC1}, ForAll[{}, And[skoZC1*(-1+skoXC1*skoXC1*((1/2)+skoXC1*skoXC1*(-1/24))+skoYC1*(skoXC1*(1+skoXC1*skoXC1*(-1/6))+skoYC1*((1/2)+skoXC1*skoXC1*(-1/4)+skoYC1*(skoXC1*(-1/6)+skoYC1*(-1/24))))+skoZC1*(skoXC1*((1/2)+skoXC1*skoXC1*(-1/12))+skoYC1*((1/2)+skoXC1*skoXC1*(-1/4)+skoYC1*(skoXC1*(-1/4)+skoYC1*(-1/12)))+skoZC1*((1/6)+skoXC1*skoXC1*(-1/12)+skoYC1*(skoXC1*(-1/6)+skoYC1*(-1/12))+skoZC1*(skoXC1*(-1/24)+skoYC1*(-1/24)+skoZC1*(-1/120)))))>skoXC1*(1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(1/120)))+skoYC1*(1+skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(1/24))+skoYC1*(skoXC1*((-1/2)+skoXC1*skoXC1*(1/12))+skoYC1*((-1/6)+skoXC1*skoXC1*(1/12)+skoYC1*(skoXC1*(1/24)+skoYC1*(1/120))))),3>skoXC1,3>skoYC1,3>skoZC1,skoXC1>(1/10),skoYC1>(1/10),skoZC1>(1/10)]]], Reals]]

% In QepcadB format:
(E skoYC1) (E skoXC1) (E skoZC1) [[((skoXC1 (1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (1/120))))))+(skoYC1 ((1+(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (1/24)))))+(skoYC1 ((skoXC1 (-1/2+(skoXC1 skoXC1 (1/12))))+(skoYC1 ((-1/6+(skoXC1 skoXC1 (1/12)))+(skoYC1 ((skoXC1 (1/24))+(skoYC1 (1/120)))))))))))<(skoZC1 (((-1+(skoXC1 skoXC1 (1/2+(skoXC1 skoXC1 (-1/24)))))+(skoYC1 ((skoXC1 (1+(skoXC1 skoXC1 (-1/6))))+(skoYC1 ((1/2+(skoXC1 skoXC1 (-1/4)))+(skoYC1 ((skoXC1 (-1/6))+(skoYC1 (-1/24)))))))))+(skoZC1 (((skoXC1 (1/2+(skoXC1 skoXC1 (-1/12))))+(skoYC1 ((1/2+(skoXC1 skoXC1 (-1/4)))+(skoYC1 ((skoXC1 (-1/4))+(skoYC1 (-1/12)))))))+(skoZC1 (((1/6+(skoXC1 skoXC1 (-1/12)))+(skoYC1 ((skoXC1 (-1/6))+(skoYC1 (-1/12)))))+(skoZC1 (((skoXC1 (-1/24))+(skoYC1 (-1/24)))+(skoZC1 (-1/120))))))))))]/\[[skoXC1<3]/\[[skoYC1<3]/\[[skoZC1<3]/\[[1/10<skoXC1]/\[[1/10<skoYC1]/\[1/10<skoZC1]]]]]]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoZC1 () Real) (assert (and (not (<= (* skoZC1 (+ (+ (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 24.))))))) (* skoYC1 (+ (* skoXC1 (+ 1. (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) (* skoYC1 (+ (+ (/ 1. 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 4.)))) (* skoYC1 (+ (* skoXC1 (/ (- 1.) 6.)) (* skoYC1 (/ (- 1.) 24.))))))))) (* skoZC1 (+ (+ (* skoXC1 (+ (/ 1. 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 12.))))) (* skoYC1 (+ (+ (/ 1. 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 4.)))) (* skoYC1 (+ (* skoXC1 (/ (- 1.) 4.)) (* skoYC1 (/ (- 1.) 12.))))))) (* skoZC1 (+ (+ (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ (- 1.) 12.)))) (* skoYC1 (+ (* skoXC1 (/ (- 1.) 6.)) (* skoYC1 (/ (- 1.) 12.))))) (* skoZC1 (+ (+ (* skoXC1 (/ (- 1.) 24.)) (* skoYC1 (/ (- 1.) 24.))) (* skoZC1 (/ (- 1.) 120.)))))))))) (+ (* skoXC1 (+ 1. (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ 1. 120.)))))))) (* skoYC1 (+ (+ 1. (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ 1. 24.))))))) (* skoYC1 (+ (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ 1. 12.))))) (* skoYC1 (+ (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ 1. 12.)))) (* skoYC1 (+ (* skoXC1 (/ 1. 24.)) (* skoYC1 (/ 1. 120.))))))))))))) (and (not (<= 3. skoXC1)) (and (not (<= 3. skoYC1)) (and (not (<= 3. skoZC1)) (and (not (<= skoXC1 (/ 1. 10.))) (and (not (<= skoYC1 (/ 1. 10.))) (not (<= skoZC1 (/ 1. 10.))))))))))
-----[end problem]-----

