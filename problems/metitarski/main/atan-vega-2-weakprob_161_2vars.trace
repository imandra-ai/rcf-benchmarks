-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[0<=skoYC1,0>skoXC1,Or[0>skoYC1,skoYC1*(skoXC1*((33/50)+skoXC1*(-3+skoXC1*(11/50)))+skoYC1*skoXC1*(-3+skoXC1*skoXC1*-1))>(33/50)+skoXC1*skoXC1*((11/50)+skoXC1),skoXC1*-1<=skoYC1],skoYC1*((-179079/100000)+skoXC1+skoYC1)>-1+skoXC1*((179079/100000)+skoXC1*-1),skoXC1>-1,1>skoYC1,skoYC1>skoXC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[0<=skoYC1]/\[[skoXC1<0]/\[[[skoYC1<0]\/[[(33/50+(skoXC1 skoXC1 (11/50+skoXC1)))<(skoYC1 ((skoXC1 (33/50+(skoXC1 (-3+(skoXC1 (11/50))))))+(skoYC1 skoXC1 (-3+(skoXC1 skoXC1 (-1))))))]\/[(skoXC1 (-1))<=skoYC1]]]/\[[(-1+(skoXC1 (179079/100000+(skoXC1 (-1)))))<(skoYC1 ((-179079/100000+skoXC1)+skoYC1))]/\[[-1<skoXC1]/\[[skoYC1<1]/\[skoXC1<skoYC1]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (<= 0. skoYC1) (and (not (<= 0. skoXC1)) (and (or (not (<= 0. skoYC1)) (or (not (<= (* skoYC1 (+ (* skoXC1 (+ (/ 33. 50.) (* skoXC1 (+ (- 3.) (* skoXC1 (/ 11. 50.)))))) (* skoYC1 (* skoXC1 (+ (- 3.) (* skoXC1 (* skoXC1 (- 1.)))))))) (+ (/ 33. 50.) (* skoXC1 (* skoXC1 (+ (/ 11. 50.) skoXC1)))))) (<= (* skoXC1 (- 1.)) skoYC1))) (and (not (<= (* skoYC1 (+ (+ (/ (- 179079.) 100000.) skoXC1) skoYC1)) (+ (- 1.) (* skoXC1 (+ (/ 179079. 100000.) (* skoXC1 (- 1.))))))) (and (not (<= skoXC1 (- 1.))) (and (not (<= 1. skoYC1)) (not (<= skoYC1 skoXC1)))))))))
-----[end problem]-----

