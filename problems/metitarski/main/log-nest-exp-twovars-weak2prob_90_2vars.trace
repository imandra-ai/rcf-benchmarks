-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,skoXC1}, ForAll[{}, And[-1>skoXC1,2>skoYC1,skoXC1>0,skoYC1>-2,skoYC1*skoXC1>-1+skoXC1,skoYC1*((1/10)+skoXC1+skoYC1)>(1/10)+skoXC1,Or[(-1/10)>skoYC1,skoYC1*((61/100)+skoXC1*(1721/100)+skoYC1*((31/5)+skoXC1*(-34/5)+skoYC1*(1+skoXC1)))>(6/5)+skoXC1*(1141/100)]]]], Reals]]

% In QepcadB format:
(E skoYC1) (E skoXC1) [[skoXC1<-1]/\[[skoYC1<2]/\[[0<skoXC1]/\[[-2<skoYC1]/\[[(-1+skoXC1)<(skoYC1 skoXC1)]/\[[(1/10+skoXC1)<(skoYC1 ((1/10+skoXC1)+skoYC1))]/\[[skoYC1<-1/10]\/[(6/5+(skoXC1 (1141/100)))<(skoYC1 ((61/100+(skoXC1 (1721/100)))+(skoYC1 ((31/5+(skoXC1 (-34/5)))+(skoYC1 (1+skoXC1))))))]]]]]]]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (assert (and (not (<= (- 1.) skoXC1)) (and (not (<= 2. skoYC1)) (and (not (<= skoXC1 0.)) (and (not (<= skoYC1 (- 2.))) (and (not (<= (* skoYC1 skoXC1) (+ (- 1.) skoXC1))) (and (not (<= (* skoYC1 (+ (+ (/ 1. 10.) skoXC1) skoYC1)) (+ (/ 1. 10.) skoXC1))) (or (not (<= (/ (- 1.) 10.) skoYC1)) (not (<= (* skoYC1 (+ (+ (/ 61. 100.) (* skoXC1 (/ 1721. 100.))) (* skoYC1 (+ (+ (/ 31. 5.) (* skoXC1 (/ (- 34.) 5.))) (* skoYC1 (+ 1. skoXC1)))))) (+ (/ 6. 5.) (* skoXC1 (/ 1141. 100.)))))))))))))
-----[end problem]-----

