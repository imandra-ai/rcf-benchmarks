-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoAC1}, ForAll[{}, And[skoXC1*skoXC1*(108+skoAC1*(297+skoAC1*((569/2)+skoAC1*(110+skoAC1*(29/2))))+skoXC1*skoXC1*(-99+skoAC1*((-1105/4)+skoAC1*((-6485/24)+skoAC1*((-323/3)+skoAC1*(-353/24))))+skoXC1*skoXC1*((433/10)+skoAC1*((14609/120)+skoAC1*((86669/720)+skoAC1*((877/18)+skoAC1*(4889/720)))))))>50+skoAC1*(120+skoAC1*(100+skoAC1*(34+skoAC1*4))),skoXC1>(-3/2),skoAC1>-1,(3/2)>skoXC1,1>skoAC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoAC1) [[(50+(skoAC1 (120+(skoAC1 (100+(skoAC1 (34+(skoAC1 (4)))))))))<(skoXC1 skoXC1 ((108+(skoAC1 (297+(skoAC1 (569/2+(skoAC1 (110+(skoAC1 (29/2)))))))))+(skoXC1 skoXC1 ((-99+(skoAC1 (-1105/4+(skoAC1 (-6485/24+(skoAC1 (-323/3+(skoAC1 (-353/24)))))))))+(skoXC1 skoXC1 (433/10+(skoAC1 (14609/120+(skoAC1 (86669/720+(skoAC1 (877/18+(skoAC1 (4889/720))))))))))))))]/\[[-3/2<skoXC1]/\[[-1<skoAC1]/\[[skoXC1<3/2]/\[skoAC1<1]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoAC1 () Real) (assert (and (not (<= (* skoXC1 (* skoXC1 (+ (+ 108. (* skoAC1 (+ 297. (* skoAC1 (+ (/ 569. 2.) (* skoAC1 (+ 110. (* skoAC1 (/ 29. 2.))))))))) (* skoXC1 (* skoXC1 (+ (+ (- 99.) (* skoAC1 (+ (/ (- 1105.) 4.) (* skoAC1 (+ (/ (- 6485.) 24.) (* skoAC1 (+ (/ (- 323.) 3.) (* skoAC1 (/ (- 353.) 24.))))))))) (* skoXC1 (* skoXC1 (+ (/ 433. 10.) (* skoAC1 (+ (/ 14609. 120.) (* skoAC1 (+ (/ 86669. 720.) (* skoAC1 (+ (/ 877. 18.) (* skoAC1 (/ 4889. 720.))))))))))))))))) (+ 50. (* skoAC1 (+ 120. (* skoAC1 (+ 100. (* skoAC1 (+ 34. (* skoAC1 4.)))))))))) (and (not (<= skoXC1 (/ (- 3.) 2.))) (and (not (<= skoAC1 (- 1.))) (and (not (<= (/ 3. 2.) skoXC1)) (not (<= 1. skoAC1)))))))
-----[end problem]-----

