-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[skoXC1*skoXC1*((1/2)+skoXC1*skoXC1*((-1/24)+skoXC1*skoXC1*((1/720)+skoXC1*skoXC1*((-1/40320)+skoXC1*skoXC1*(1/3628800)))))>1,Or[skoXC1*-1>skoYC1,skoYC1>skoXC1*-1],skoYC1>-1,skoXC1>-1,1>skoYC1,1>skoXC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[1<(skoXC1 skoXC1 (1/2+(skoXC1 skoXC1 (-1/24+(skoXC1 skoXC1 (1/720+(skoXC1 skoXC1 (-1/40320+(skoXC1 skoXC1 (1/3628800))))))))))]/\[[[skoYC1<(skoXC1 (-1))]\/[(skoXC1 (-1))<skoYC1]]/\[[-1<skoYC1]/\[[-1<skoXC1]/\[[skoYC1<1]/\[skoXC1<1]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (not (<= (* skoXC1 (* skoXC1 (+ (/ 1. 2.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 24.) (* skoXC1 (* skoXC1 (+ (/ 1. 720.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 40320.) (* skoXC1 (* skoXC1 (/ 1. 3628800.))))))))))))))) 1.)) (and (or (not (<= (* skoXC1 (- 1.)) skoYC1)) (not (<= skoYC1 (* skoXC1 (- 1.))))) (and (not (<= skoYC1 (- 1.))) (and (not (<= skoXC1 (- 1.))) (and (not (<= 1. skoYC1)) (not (<= 1. skoXC1))))))))
-----[end problem]-----

