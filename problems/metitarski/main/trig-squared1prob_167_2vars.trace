-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,skoXC1}, ForAll[{}, And[skoYC1*(1+skoYC1*skoYC1*(-1/6))>0,skoXC1>skoYC1,skoYC1>-1,skoXC1>-1,1>skoYC1,1>skoXC1,Or[0>skoXC1,skoXC1>0],Or[0>skoYC1,skoYC1>0],Or[skoXC1*-1>skoYC1,skoYC1>skoXC1*-1]]]], Reals]]

% In QepcadB format:
(E skoYC1) (E skoXC1) [[0<(skoYC1 (1+(skoYC1 skoYC1 (-1/6))))]/\[[skoYC1<skoXC1]/\[[-1<skoYC1]/\[[-1<skoXC1]/\[[skoYC1<1]/\[[skoXC1<1]/\[[[skoXC1<0]\/[0<skoXC1]]/\[[[skoYC1<0]\/[0<skoYC1]]/\[[skoYC1<(skoXC1 (-1))]\/[(skoXC1 (-1))<skoYC1]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (assert (and (not (<= (* skoYC1 (+ 1. (* skoYC1 (* skoYC1 (/ (- 1.) 6.))))) 0.)) (and (not (<= skoXC1 skoYC1)) (and (not (<= skoYC1 (- 1.))) (and (not (<= skoXC1 (- 1.))) (and (not (<= 1. skoYC1)) (and (not (<= 1. skoXC1)) (and (or (not (<= 0. skoXC1)) (not (<= skoXC1 0.))) (and (or (not (<= 0. skoYC1)) (not (<= skoYC1 0.))) (or (not (<= (* skoXC1 (- 1.)) skoYC1)) (not (<= skoYC1 (* skoXC1 (- 1.))))))))))))))
-----[end problem]-----

