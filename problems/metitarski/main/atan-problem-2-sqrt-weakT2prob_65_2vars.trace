-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoBC1,skoAC1}, ForAll[{}, And[skoBC1*skoBC1*(-16+skoAC1*skoAC1*-4+skoBC1*skoBC1*(-1+skoAC1*skoAC1*(-1/4)))<=48+skoAC1*skoAC1*12,skoBC1*skoBC1*(16+skoAC1*skoAC1*4+skoBC1*skoBC1*(1+skoAC1*skoAC1*(1/4)))<=-48+skoAC1*skoAC1*-12,skoBC1*(27+skoAC1*skoAC1*6+skoBC1*(-16+skoAC1*((-65/4)+skoAC1*(-4+skoAC1*-4))+skoBC1*((41/4)+skoAC1*skoAC1*(5/2)+skoBC1*(-1+skoAC1*(-1+skoAC1*((-1/4)+skoAC1*(-1/4)))+skoBC1*(1+skoAC1*skoAC1*(1/4))))))>48+skoAC1*(51+skoAC1*(12+skoAC1*12)),skoAC1>0,2>skoBC1,skoBC1>skoAC1]]], Reals]]

% In QepcadB format:
(E skoBC1) (E skoAC1) [[(skoBC1 skoBC1 ((-16+(skoAC1 skoAC1 (-4)))+(skoBC1 skoBC1 (-1+(skoAC1 skoAC1 (-1/4))))))<=(48+(skoAC1 skoAC1 (12)))]/\[[(skoBC1 skoBC1 ((16+(skoAC1 skoAC1 (4)))+(skoBC1 skoBC1 (1+(skoAC1 skoAC1 (1/4))))))<=(-48+(skoAC1 skoAC1 (-12)))]/\[[(48+(skoAC1 (51+(skoAC1 (12+(skoAC1 (12)))))))<(skoBC1 ((27+(skoAC1 skoAC1 (6)))+(skoBC1 ((-16+(skoAC1 (-65/4+(skoAC1 (-4+(skoAC1 (-4)))))))+(skoBC1 ((41/4+(skoAC1 skoAC1 (5/2)))+(skoBC1 ((-1+(skoAC1 (-1+(skoAC1 (-1/4+(skoAC1 (-1/4)))))))+(skoBC1 (1+(skoAC1 skoAC1 (1/4))))))))))))]/\[[0<skoAC1]/\[[skoBC1<2]/\[skoAC1<skoBC1]]]]]].

% In SMTLib2 format:
(declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoBC1 (* skoBC1 (+ (+ (- 16.) (* skoAC1 (* skoAC1 (- 4.)))) (* skoBC1 (* skoBC1 (+ (- 1.) (* skoAC1 (* skoAC1 (/ (- 1.) 4.))))))))) (+ 48. (* skoAC1 (* skoAC1 12.)))) (and (<= (* skoBC1 (* skoBC1 (+ (+ 16. (* skoAC1 (* skoAC1 4.))) (* skoBC1 (* skoBC1 (+ 1. (* skoAC1 (* skoAC1 (/ 1. 4.))))))))) (+ (- 48.) (* skoAC1 (* skoAC1 (- 12.))))) (and (not (<= (* skoBC1 (+ (+ 27. (* skoAC1 (* skoAC1 6.))) (* skoBC1 (+ (+ (- 16.) (* skoAC1 (+ (/ (- 65.) 4.) (* skoAC1 (+ (- 4.) (* skoAC1 (- 4.))))))) (* skoBC1 (+ (+ (/ 41. 4.) (* skoAC1 (* skoAC1 (/ 5. 2.)))) (* skoBC1 (+ (+ (- 1.) (* skoAC1 (+ (- 1.) (* skoAC1 (+ (/ (- 1.) 4.) (* skoAC1 (/ (- 1.) 4.))))))) (* skoBC1 (+ 1. (* skoAC1 (* skoAC1 (/ 1. 4.))))))))))))) (+ 48. (* skoAC1 (+ 51. (* skoAC1 (+ 12. (* skoAC1 12.)))))))) (and (not (<= skoAC1 0.)) (and (not (<= 2. skoBC1)) (not (<= skoBC1 skoAC1))))))))
-----[end problem]-----

