-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoX1USCORE0C1,skoX2USCORE0C1,skoX1C1,skoX2C1,skoAC1}, ForAll[{}, And[skoX1USCORE0C1*(-1/8)<=skoX2USCORE0C1,skoX2USCORE0C1*((-38/25)+skoX1USCORE0C1*skoX1USCORE0C1*((-81/25)+skoX1USCORE0C1*skoX1USCORE0C1*((27/100)+skoX1USCORE0C1*skoX1USCORE0C1*((-9/1000)+skoX1USCORE0C1*skoX1USCORE0C1*((9/56000)+skoX1USCORE0C1*skoX1USCORE0C1*(-1/560000))))))<=skoX1USCORE0C1*((19/100)+skoX1USCORE0C1*skoX1USCORE0C1*((81/200)+skoX1USCORE0C1*skoX1USCORE0C1*((-27/800)+skoX1USCORE0C1*skoX1USCORE0C1*((9/8000)+skoX1USCORE0C1*skoX1USCORE0C1*((-9/448000)+skoX1USCORE0C1*skoX1USCORE0C1*(1/4480000)))))),skoX2USCORE0C1<=skoX1USCORE0C1*(-1/8),skoAC1>0,skoX2USCORE0C1*(skoX1USCORE0C1+skoX2USCORE0C1*4)<=(69929971/100000000)+skoX1USCORE0C1*skoX1USCORE0C1*-1,skoX2C1*(skoX1C1*-1+skoX2C1*-4)>skoAC1*-1+skoX1C1*skoX1C1,Or[skoX1USCORE0C1*(-1/8)>skoX2USCORE0C1,skoX2USCORE0C1>skoX1USCORE0C1*(-1/8)]]]], Reals]]

% In QepcadB format:
(E skoX1USCORE0C1) (E skoX2USCORE0C1) (E skoX1C1) (E skoX2C1) (E skoAC1) [[(skoX1USCORE0C1 (-1/8))<=skoX2USCORE0C1]/\[[(skoX2USCORE0C1 (-38/25+(skoX1USCORE0C1 skoX1USCORE0C1 (-81/25+(skoX1USCORE0C1 skoX1USCORE0C1 (27/100+(skoX1USCORE0C1 skoX1USCORE0C1 (-9/1000+(skoX1USCORE0C1 skoX1USCORE0C1 (9/56000+(skoX1USCORE0C1 skoX1USCORE0C1 (-1/560000))))))))))))<=(skoX1USCORE0C1 (19/100+(skoX1USCORE0C1 skoX1USCORE0C1 (81/200+(skoX1USCORE0C1 skoX1USCORE0C1 (-27/800+(skoX1USCORE0C1 skoX1USCORE0C1 (9/8000+(skoX1USCORE0C1 skoX1USCORE0C1 (-9/448000+(skoX1USCORE0C1 skoX1USCORE0C1 (1/4480000))))))))))))]/\[[skoX2USCORE0C1<=(skoX1USCORE0C1 (-1/8))]/\[[0<skoAC1]/\[[(skoX2USCORE0C1 (skoX1USCORE0C1+(skoX2USCORE0C1 (4))))<=(69929971/100000000+(skoX1USCORE0C1 skoX1USCORE0C1 (-1)))]/\[[((skoAC1 (-1))+(skoX1C1 skoX1C1))<(skoX2C1 ((skoX1C1 (-1))+(skoX2C1 (-4))))]/\[[skoX2USCORE0C1<(skoX1USCORE0C1 (-1/8))]\/[(skoX1USCORE0C1 (-1/8))<skoX2USCORE0C1]]]]]]]].

% In SMTLib2 format:
(declare-fun skoX1USCORE0C1 () Real) (declare-fun skoX2USCORE0C1 () Real) (declare-fun skoX1C1 () Real) (declare-fun skoX2C1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoX1USCORE0C1 (/ (- 1.) 8.)) skoX2USCORE0C1) (and (<= (* skoX2USCORE0C1 (+ (/ (- 38.) 25.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (+ (/ (- 81.) 25.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (+ (/ 27. 100.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (+ (/ (- 9.) 1000.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (+ (/ 9. 56000.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (/ (- 1.) 560000.))))))))))))))))) (* skoX1USCORE0C1 (+ (/ 19. 100.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (+ (/ 81. 200.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (+ (/ (- 27.) 800.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (+ (/ 9. 8000.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (+ (/ (- 9.) 448000.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (/ 1. 4480000.)))))))))))))))))) (and (<= skoX2USCORE0C1 (* skoX1USCORE0C1 (/ (- 1.) 8.))) (and (not (<= skoAC1 0.)) (and (<= (* skoX2USCORE0C1 (+ skoX1USCORE0C1 (* skoX2USCORE0C1 4.))) (+ (/ 69929971. 100000000.) (* skoX1USCORE0C1 (* skoX1USCORE0C1 (- 1.))))) (and (not (<= (* skoX2C1 (+ (* skoX1C1 (- 1.)) (* skoX2C1 (- 4.)))) (+ (* skoAC1 (- 1.)) (* skoX1C1 skoX1C1)))) (or (not (<= (* skoX1USCORE0C1 (/ (- 1.) 8.)) skoX2USCORE0C1)) (not (<= skoX2USCORE0C1 (* skoX1USCORE0C1 (/ (- 1.) 8.))))))))))))
-----[end problem]-----

