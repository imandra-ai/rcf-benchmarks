-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoAC1}, ForAll[{}, And[skoXC1*skoXC1*(120+skoAC1*(322+skoAC1*(302+skoAC1*(115+skoAC1*15)))+skoXC1*skoXC1*(-100+skoAC1*((-835/3)+skoAC1*((-815/3)+skoAC1*((-1297/12)+skoAC1*(-59/4))))+skoXC1*skoXC1*((130/3)+skoAC1*((10963/90)+skoAC1*((5419/45)+skoAC1*((3509/72)+skoAC1*(163/24))))+skoXC1*skoXC1*((-1/1680)+skoAC1*((-5/4032)+skoAC1*((-1/1152)+skoAC1*((-1/4032)+skoAC1*(-1/40320))))+skoXC1*skoXC1*((1/151200)+skoAC1*((1/72576)+skoAC1*((1/103680)+skoAC1*((1/362880)+skoAC1*(1/3628800))))+skoXC1*skoXC1*((-1/19958400)+skoAC1*((-1/9580032)+skoAC1*((-1/13685760)+skoAC1*((-1/47900160)+skoAC1*(-1/479001600))))+skoXC1*skoXC1*((1/3632428800)+skoAC1*((1/1743565824)+skoAC1*((1/2490808320)+skoAC1*((1/8717829120)+skoAC1*(1/87178291200)))))))))))<=74+skoAC1*(170+skoAC1*(135+skoAC1*(44+skoAC1*5))),skoXC1>(-3/2),skoAC1>-1,(3/2)>skoXC1,1>skoAC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoAC1) [[(skoXC1 skoXC1 ((120+(skoAC1 (322+(skoAC1 (302+(skoAC1 (115+(skoAC1 (15)))))))))+(skoXC1 skoXC1 ((-100+(skoAC1 (-835/3+(skoAC1 (-815/3+(skoAC1 (-1297/12+(skoAC1 (-59/4)))))))))+(skoXC1 skoXC1 ((130/3+(skoAC1 (10963/90+(skoAC1 (5419/45+(skoAC1 (3509/72+(skoAC1 (163/24)))))))))+(skoXC1 skoXC1 ((-1/1680+(skoAC1 (-5/4032+(skoAC1 (-1/1152+(skoAC1 (-1/4032+(skoAC1 (-1/40320)))))))))+(skoXC1 skoXC1 ((1/151200+(skoAC1 (1/72576+(skoAC1 (1/103680+(skoAC1 (1/362880+(skoAC1 (1/3628800)))))))))+(skoXC1 skoXC1 ((-1/19958400+(skoAC1 (-1/9580032+(skoAC1 (-1/13685760+(skoAC1 (-1/47900160+(skoAC1 (-1/479001600)))))))))+(skoXC1 skoXC1 (1/3632428800+(skoAC1 (1/1743565824+(skoAC1 (1/2490808320+(skoAC1 (1/8717829120+(skoAC1 (1/87178291200))))))))))))))))))))))<=(74+(skoAC1 (170+(skoAC1 (135+(skoAC1 (44+(skoAC1 (5)))))))))]/\[[-3/2<skoXC1]/\[[-1<skoAC1]/\[[skoXC1<3/2]/\[skoAC1<1]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (+ 120. (* skoAC1 (+ 322. (* skoAC1 (+ 302. (* skoAC1 (+ 115. (* skoAC1 15.)))))))) (* skoXC1 (* skoXC1 (+ (+ (- 100.) (* skoAC1 (+ (/ (- 835.) 3.) (* skoAC1 (+ (/ (- 815.) 3.) (* skoAC1 (+ (/ (- 1297.) 12.) (* skoAC1 (/ (- 59.) 4.))))))))) (* skoXC1 (* skoXC1 (+ (+ (/ 130. 3.) (* skoAC1 (+ (/ 10963. 90.) (* skoAC1 (+ (/ 5419. 45.) (* skoAC1 (+ (/ 3509. 72.) (* skoAC1 (/ 163. 24.))))))))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 1.) 1680.) (* skoAC1 (+ (/ (- 5.) 4032.) (* skoAC1 (+ (/ (- 1.) 1152.) (* skoAC1 (+ (/ (- 1.) 4032.) (* skoAC1 (/ (- 1.) 40320.))))))))) (* skoXC1 (* skoXC1 (+ (+ (/ 1. 151200.) (* skoAC1 (+ (/ 1. 72576.) (* skoAC1 (+ (/ 1. 103680.) (* skoAC1 (+ (/ 1. 362880.) (* skoAC1 (/ 1. 3628800.))))))))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 1.) 19958400.) (* skoAC1 (+ (/ (- 1.) 9580032.) (* skoAC1 (+ (/ (- 1.) 13685760.) (* skoAC1 (+ (/ (- 1.) 47900160.) (* skoAC1 (/ (- 1.) 479001600.))))))))) (* skoXC1 (* skoXC1 (+ (/ 1. 3632428800.) (* skoAC1 (+ (/ 1. 1743565824.) (* skoAC1 (+ (/ 1. 2490808320.) (* skoAC1 (+ (/ 1. 8717829120.) (* skoAC1 (/ 1. 87178291200.))))))))))))))))))))))))))))) (+ 74. (* skoAC1 (+ 170. (* skoAC1 (+ 135. (* skoAC1 (+ 44. (* skoAC1 5.))))))))) (and (not (<= skoXC1 (/ (- 3.) 2.))) (and (not (<= skoAC1 (- 1.))) (and (not (<= (/ 3. 2.) skoXC1)) (not (<= 1. skoAC1)))))))
-----[end problem]-----

