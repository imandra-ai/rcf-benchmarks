-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[skoYC1*((1/4)+skoXC1*((20/3)+skoXC1*(-5+skoXC1*(-10+skoXC1*((85/12)+skoXC1)))))>skoXC1*((15/4)+skoXC1*((10/3)+skoXC1*(-15+skoXC1*(5+skoXC1*(35/12))))),skoYC1>skoXC1*-1,skoYC1*((1/4)+skoXC1*((20/3)+skoXC1*(-5+skoXC1*(-10+skoXC1*((85/12)+skoXC1)))))>skoXC1*((15/4)+skoXC1*((10/3)+skoXC1*(-15+skoXC1*(5+skoXC1*(35/12))))),skoYC1*((1/3)+skoXC1*(3+skoXC1*(-6+skoXC1*((5/3)+skoXC1))))>skoXC1*((8/3)+skoXC1*(-3+skoXC1*(-2+skoXC1*(7/3)))),skoYC1*(1+skoXC1*(-2+skoXC1))>0,skoYC1*skoYC1*skoYC1==skoXC1,skoXC1<=1,skoXC1>0]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[(skoXC1 (15/4+(skoXC1 (10/3+(skoXC1 (-15+(skoXC1 (5+(skoXC1 (35/12))))))))))<(skoYC1 (1/4+(skoXC1 (20/3+(skoXC1 (-5+(skoXC1 (-10+(skoXC1 (85/12+skoXC1))))))))))]/\[[(skoXC1 (-1))<skoYC1]/\[[(skoXC1 (15/4+(skoXC1 (10/3+(skoXC1 (-15+(skoXC1 (5+(skoXC1 (35/12))))))))))<(skoYC1 (1/4+(skoXC1 (20/3+(skoXC1 (-5+(skoXC1 (-10+(skoXC1 (85/12+skoXC1))))))))))]/\[[(skoXC1 (8/3+(skoXC1 (-3+(skoXC1 (-2+(skoXC1 (7/3))))))))<(skoYC1 (1/3+(skoXC1 (3+(skoXC1 (-6+(skoXC1 (5/3+skoXC1))))))))]/\[[0<(skoYC1 (1+(skoXC1 (-2+skoXC1))))]/\[[(skoYC1 skoYC1 skoYC1)=skoXC1]/\[[skoXC1<=1]/\[0<skoXC1]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (not (<= (* skoYC1 (+ (/ 1. 4.) (* skoXC1 (+ (/ 20. 3.) (* skoXC1 (+ (- 5.) (* skoXC1 (+ (- 10.) (* skoXC1 (+ (/ 85. 12.) skoXC1)))))))))) (* skoXC1 (+ (/ 15. 4.) (* skoXC1 (+ (/ 10. 3.) (* skoXC1 (+ (- 15.) (* skoXC1 (+ 5. (* skoXC1 (/ 35. 12.)))))))))))) (and (not (<= skoYC1 (* skoXC1 (- 1.)))) (and (not (<= (* skoYC1 (+ (/ 1. 4.) (* skoXC1 (+ (/ 20. 3.) (* skoXC1 (+ (- 5.) (* skoXC1 (+ (- 10.) (* skoXC1 (+ (/ 85. 12.) skoXC1)))))))))) (* skoXC1 (+ (/ 15. 4.) (* skoXC1 (+ (/ 10. 3.) (* skoXC1 (+ (- 15.) (* skoXC1 (+ 5. (* skoXC1 (/ 35. 12.)))))))))))) (and (not (<= (* skoYC1 (+ (/ 1. 3.) (* skoXC1 (+ 3. (* skoXC1 (+ (- 6.) (* skoXC1 (+ (/ 5. 3.) skoXC1)))))))) (* skoXC1 (+ (/ 8. 3.) (* skoXC1 (+ (- 3.) (* skoXC1 (+ (- 2.) (* skoXC1 (/ 7. 3.)))))))))) (and (not (<= (* skoYC1 (+ 1. (* skoXC1 (+ (- 2.) skoXC1)))) 0.)) (and (= (* skoYC1 (* skoYC1 skoYC1)) skoXC1) (and (<= skoXC1 1.) (not (<= skoXC1 0.))))))))))
-----[end problem]-----

