-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((1/24)+skoXC1*skoXC1*((-1/720)+skoXC1*skoXC1*((1/40320)+skoXC1*skoXC1*(-1/3628800)))))>-1,skoYC1*skoYC1*skoYC1*skoYC1*((1/3)+skoYC1*skoYC1*((-1/24)+skoYC1*skoYC1*(1/576)))>(1/4)+skoXC1*skoXC1*skoXC1*skoXC1*((7/24)+skoXC1*skoXC1*((-1/45)+skoXC1*skoXC1*((29/40320)+skoXC1*skoXC1*((-23/1814400)+skoXC1*skoXC1*(1/7257600))))),skoXC1>skoYC1,Or[skoXC1*-1>skoYC1,skoYC1>skoXC1*-1],Or[skoXC1>skoYC1,skoYC1>skoXC1],1>skoXC1,1>skoYC1,skoXC1>-1,skoYC1>-1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[-1<(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (1/24+(skoXC1 skoXC1 (-1/720+(skoXC1 skoXC1 (1/40320+(skoXC1 skoXC1 (-1/3628800))))))))))]/\[[(1/4+(skoXC1 skoXC1 skoXC1 skoXC1 (7/24+(skoXC1 skoXC1 (-1/45+(skoXC1 skoXC1 (29/40320+(skoXC1 skoXC1 (-23/1814400+(skoXC1 skoXC1 (1/7257600)))))))))))<(skoYC1 skoYC1 skoYC1 skoYC1 (1/3+(skoYC1 skoYC1 (-1/24+(skoYC1 skoYC1 (1/576))))))]/\[[skoYC1<skoXC1]/\[[[skoYC1<(skoXC1 (-1))]\/[(skoXC1 (-1))<skoYC1]]/\[[[skoYC1<skoXC1]\/[skoXC1<skoYC1]]/\[[skoXC1<1]/\[[skoYC1<1]/\[[-1<skoXC1]/\[-1<skoYC1]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (not (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 1. 24.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 720.) (* skoXC1 (* skoXC1 (+ (/ 1. 40320.) (* skoXC1 (* skoXC1 (/ (- 1.) 3628800.))))))))))))))) (- 1.))) (and (not (<= (* skoYC1 (* skoYC1 (* skoYC1 (* skoYC1 (+ (/ 1. 3.) (* skoYC1 (* skoYC1 (+ (/ (- 1.) 24.) (* skoYC1 (* skoYC1 (/ 1. 576.))))))))))) (+ (/ 1. 4.) (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 7. 24.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 45.) (* skoXC1 (* skoXC1 (+ (/ 29. 40320.) (* skoXC1 (* skoXC1 (+ (/ (- 23.) 1814400.) (* skoXC1 (* skoXC1 (/ 1. 7257600.)))))))))))))))))))) (and (not (<= skoXC1 skoYC1)) (and (or (not (<= (* skoXC1 (- 1.)) skoYC1)) (not (<= skoYC1 (* skoXC1 (- 1.))))) (and (or (not (<= skoXC1 skoYC1)) (not (<= skoYC1 skoXC1))) (and (not (<= 1. skoXC1)) (and (not (<= 1. skoYC1)) (and (not (<= skoXC1 (- 1.))) (not (<= skoYC1 (- 1.))))))))))))
-----[end problem]-----

