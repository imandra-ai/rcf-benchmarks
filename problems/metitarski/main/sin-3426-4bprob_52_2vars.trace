-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{pi,skoXC1}, ForAll[{}, And[skoXC1*(Pi*-2+skoXC1)!=Pi*Pi*-1,skoXC1*(Pi*2+skoXC1)!=Pi*Pi*-1,skoXC1*(Pi*4+skoXC1)!=Pi*Pi*-4,skoXC1*(Pi*6+skoXC1)!=Pi*Pi*-9,skoXC1*(Pi*8+skoXC1)!=Pi*Pi*-16,skoXC1*skoXC1!=0,skoXC1>Pi*(-1/2),Pi*(1/2)>skoXC1,Pi>(15707963/5000000),(31415927/10000000)>Pi,skoXC1!=0]]], Reals]]

% In QepcadB format:
(E pi) (E skoXC1) [[(skoXC1 ((pi (-2))+skoXC1)) /=(pi pi (-1))]/\[[(skoXC1 ((pi (2))+skoXC1)) /=(pi pi (-1))]/\[[(skoXC1 ((pi (4))+skoXC1)) /=(pi pi (-4))]/\[[(skoXC1 ((pi (6))+skoXC1)) /=(pi pi (-9))]/\[[(skoXC1 ((pi (8))+skoXC1)) /=(pi pi (-16))]/\[[(skoXC1 skoXC1) /=0]/\[[(pi (-1/2))<skoXC1]/\[[skoXC1<(pi (1/2))]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[skoXC1 /=0]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun metit_our_pi () Real) (declare-fun skoXC1 () Real) (assert (and (not (= (* skoXC1 (+ (* metit_our_pi (- 2.)) skoXC1)) (* metit_our_pi (* metit_our_pi (- 1.))))) (and (not (= (* skoXC1 (+ (* metit_our_pi 2.) skoXC1)) (* metit_our_pi (* metit_our_pi (- 1.))))) (and (not (= (* skoXC1 (+ (* metit_our_pi 4.) skoXC1)) (* metit_our_pi (* metit_our_pi (- 4.))))) (and (not (= (* skoXC1 (+ (* metit_our_pi 6.) skoXC1)) (* metit_our_pi (* metit_our_pi (- 9.))))) (and (not (= (* skoXC1 (+ (* metit_our_pi 8.) skoXC1)) (* metit_our_pi (* metit_our_pi (- 16.))))) (and (not (= (* skoXC1 skoXC1) 0.)) (and (not (<= skoXC1 (* metit_our_pi (/ (- 1.) 2.)))) (and (not (<= (* metit_our_pi (/ 1. 2.)) skoXC1)) (and (not (<= metit_our_pi (/ 15707963. 5000000.))) (and (not (<= (/ 31415927. 10000000.) metit_our_pi)) (not (= skoXC1 0.)))))))))))))
-----[end problem]-----

