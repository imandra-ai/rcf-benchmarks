-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,pi}, ForAll[{}, And[0>skoXC1,Pi>0,Or[0>skoXC1,skoXC1*(-1+skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((-1/120)+skoXC1*skoXC1*(1/5040))))>0],Or[0>skoXC1,skoXC1*(-2+skoXC1*skoXC1*((4/3)+skoXC1*skoXC1*((-4/15)+skoXC1*skoXC1*(8/315))))>0],Or[skoXC1*(Pi*-4+skoXC1*skoXC1*(Pi*(5/3)+skoXC1*skoXC1*Pi*(-17/60)))>9,skoXC1>0],Or[skoXC1*(-2+skoXC1*skoXC1*((4/3)+skoXC1*skoXC1*(-4/15)))>0,skoXC1>0],Pi>(15707963/5000000),(31415927/10000000)>Pi,skoXC1>Pi*-1,Pi>skoXC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E pi) [[skoXC1<0]/\[[0<pi]/\[[[skoXC1<0]\/[0<(skoXC1 (-1+(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (-1/120+(skoXC1 skoXC1 (1/5040))))))))]]/\[[[skoXC1<0]\/[0<(skoXC1 (-2+(skoXC1 skoXC1 (4/3+(skoXC1 skoXC1 (-4/15+(skoXC1 skoXC1 (8/315))))))))]]/\[[[9<(skoXC1 ((pi (-4))+(skoXC1 skoXC1 ((pi (5/3))+(skoXC1 skoXC1 pi (-17/60))))))]\/[0<skoXC1]]/\[[[0<(skoXC1 (-2+(skoXC1 skoXC1 (4/3+(skoXC1 skoXC1 (-4/15))))))]\/[0<skoXC1]]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[(pi (-1))<skoXC1]/\[skoXC1<pi]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (not (<= 0. skoXC1)) (and (not (<= metit_our_pi 0.)) (and (or (not (<= 0. skoXC1)) (not (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 120.) (* skoXC1 (* skoXC1 (/ 1. 5040.))))))))))) 0.))) (and (or (not (<= 0. skoXC1)) (not (<= (* skoXC1 (+ (- 2.) (* skoXC1 (* skoXC1 (+ (/ 4. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 4.) 15.) (* skoXC1 (* skoXC1 (/ 8. 315.))))))))))) 0.))) (and (or (not (<= (* skoXC1 (+ (* metit_our_pi (- 4.)) (* skoXC1 (* skoXC1 (+ (* metit_our_pi (/ 5. 3.)) (* skoXC1 (* skoXC1 (* metit_our_pi (/ (- 17.) 60.))))))))) 9.)) (not (<= skoXC1 0.))) (and (or (not (<= (* skoXC1 (+ (- 2.) (* skoXC1 (* skoXC1 (+ (/ 4. 3.) (* skoXC1 (* skoXC1 (/ (- 4.) 15.)))))))) 0.)) (not (<= skoXC1 0.))) (and (not (<= metit_our_pi (/ 15707963. 5000000.))) (and (not (<= (/ 31415927. 10000000.) metit_our_pi)) (and (not (<= skoXC1 (* metit_our_pi (- 1.)))) (not (<= metit_our_pi skoXC1))))))))))))
-----[end problem]-----

