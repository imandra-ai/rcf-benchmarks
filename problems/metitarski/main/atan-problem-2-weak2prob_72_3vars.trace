-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, ForAll[{}, And[skoTC1*skoTC1*skoBC1>skoBC1*skoBC1*skoBC1*-1,skoTC1*(skoBC1*skoBC1*skoBC1*(-157079/100000)+skoTC1*(skoBC1*skoBC1*(2+skoBC1*(-3/10))+skoTC1*(skoBC1*(-157079/100000)+skoTC1*(1+skoBC1*(-3/10)))))>skoBC1*skoBC1*skoBC1*skoAC1*-1,Or[0>skoAC1,skoTC1*(skoBC1*skoBC1*skoBC1*(-157079/100000)+skoTC1*(skoBC1*skoBC1*(2+skoBC1*(-3/10))+skoTC1*(skoBC1*(-157079/100000)+skoTC1*(1+skoBC1*(-3/10)))))>skoBC1*skoBC1*skoBC1*skoAC1*-1,skoBC1<=skoTC1],skoBC1>skoAC1*-1,skoTC1>1,skoBC1>skoAC1]]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoBC1 skoBC1 skoBC1 (-1))<(skoTC1 skoTC1 skoBC1)]/\[[(skoBC1 skoBC1 skoBC1 skoAC1 (-1))<(skoTC1 ((skoBC1 skoBC1 skoBC1 (-157079/100000))+(skoTC1 ((skoBC1 skoBC1 (2+(skoBC1 (-3/10))))+(skoTC1 ((skoBC1 (-157079/100000))+(skoTC1 (1+(skoBC1 (-3/10))))))))))]/\[[[skoAC1<0]\/[[(skoBC1 skoBC1 skoBC1 skoAC1 (-1))<(skoTC1 ((skoBC1 skoBC1 skoBC1 (-157079/100000))+(skoTC1 ((skoBC1 skoBC1 (2+(skoBC1 (-3/10))))+(skoTC1 ((skoBC1 (-157079/100000))+(skoTC1 (1+(skoBC1 (-3/10))))))))))]\/[skoBC1<=skoTC1]]]/\[[(skoAC1 (-1))<skoBC1]/\[[1<skoTC1]/\[skoAC1<skoBC1]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (not (<= (* skoTC1 (* skoTC1 skoBC1)) (* skoBC1 (* skoBC1 (* skoBC1 (- 1.)))))) (and (not (<= (* skoTC1 (+ (* skoBC1 (* skoBC1 (* skoBC1 (/ (- 157079.) 100000.)))) (* skoTC1 (+ (* skoBC1 (* skoBC1 (+ 2. (* skoBC1 (/ (- 3.) 10.))))) (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (/ (- 3.) 10.)))))))))) (* skoBC1 (* skoBC1 (* skoBC1 (* skoAC1 (- 1.))))))) (and (or (not (<= 0. skoAC1)) (or (not (<= (* skoTC1 (+ (* skoBC1 (* skoBC1 (* skoBC1 (/ (- 157079.) 100000.)))) (* skoTC1 (+ (* skoBC1 (* skoBC1 (+ 2. (* skoBC1 (/ (- 3.) 10.))))) (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (/ (- 3.) 10.)))))))))) (* skoBC1 (* skoBC1 (* skoBC1 (* skoAC1 (- 1.))))))) (<= skoBC1 skoTC1))) (and (not (<= skoBC1 (* skoAC1 (- 1.)))) (and (not (<= skoTC1 1.)) (not (<= skoBC1 skoAC1))))))))
-----[end problem]-----

