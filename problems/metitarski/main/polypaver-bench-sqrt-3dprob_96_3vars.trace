-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoZC1,skoXC1,skoYC1}, ForAll[{}, And[skoZC1*(skoYC1*skoXC1*(5/4)+skoZC1*(skoYC1*(skoXC1*(5/4)+skoYC1*skoXC1*skoXC1*(1/4))+skoZC1*skoYC1*skoYC1*skoXC1*skoXC1*(1/4)))>0,skoZC1<=2,skoYC1<=2,skoXC1<=2,1<=skoZC1,1<=skoYC1,1<=skoXC1]]], Reals]]

% In QepcadB format:
(E skoZC1) (E skoXC1) (E skoYC1) [[0<(skoZC1 ((skoYC1 skoXC1 (5/4))+(skoZC1 ((skoYC1 ((skoXC1 (5/4))+(skoYC1 skoXC1 skoXC1 (1/4))))+(skoZC1 skoYC1 skoYC1 skoXC1 skoXC1 (1/4))))))]/\[[skoZC1<=2]/\[[skoYC1<=2]/\[[skoXC1<=2]/\[[1<=skoZC1]/\[[1<=skoYC1]/\[1<=skoXC1]]]]]]].

% In SMTLib2 format:
(declare-fun skoZC1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (not (<= (* skoZC1 (+ (* skoYC1 (* skoXC1 (/ 5. 4.))) (* skoZC1 (+ (* skoYC1 (+ (* skoXC1 (/ 5. 4.)) (* skoYC1 (* skoXC1 (* skoXC1 (/ 1. 4.)))))) (* skoZC1 (* skoYC1 (* skoYC1 (* skoXC1 (* skoXC1 (/ 1. 4.)))))))))) 0.)) (and (<= skoZC1 2.) (and (<= skoYC1 2.) (and (<= skoXC1 2.) (and (<= 1. skoZC1) (and (<= 1. skoYC1) (<= 1. skoXC1))))))))
-----[end problem]-----

