-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoSMC1}, ForAll[{}, And[skoXC1*(1+skoXC1*(1529041/250000))<=(1529041/250000),skoXC1*(-1+skoXC1*(-1529041/250000))>(-1529041/250000),skoXC1*((329041/125000)+skoSMC1*(-1979041/250000)+skoXC1*((-2379041/125000)+skoSMC1*(1354041/125000)+skoXC1*((-1579041/125000)+skoSMC1*(1479041/250000))))<=(-1629041/125000)+skoSMC1*(1479041/125000),skoXC1==1+skoSMC1*skoSMC1*-1,0<=skoSMC1,skoXC1>0,1>skoXC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoSMC1) [[(skoXC1 (1+(skoXC1 (1529041/250000))))<=1529041/250000]/\[[-1529041/250000<(skoXC1 (-1+(skoXC1 (-1529041/250000))))]/\[[(skoXC1 ((329041/125000+(skoSMC1 (-1979041/250000)))+(skoXC1 ((-2379041/125000+(skoSMC1 (1354041/125000)))+(skoXC1 (-1579041/125000+(skoSMC1 (1479041/250000))))))))<=(-1629041/125000+(skoSMC1 (1479041/125000)))]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[0<=skoSMC1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoSMC1 () Real) (assert (and (<= (* skoXC1 (+ 1. (* skoXC1 (/ 1529041. 250000.)))) (/ 1529041. 250000.)) (and (not (<= (* skoXC1 (+ (- 1.) (* skoXC1 (/ (- 1529041.) 250000.)))) (/ (- 1529041.) 250000.))) (and (<= (* skoXC1 (+ (+ (/ 329041. 125000.) (* skoSMC1 (/ (- 1979041.) 250000.))) (* skoXC1 (+ (+ (/ (- 2379041.) 125000.) (* skoSMC1 (/ 1354041. 125000.))) (* skoXC1 (+ (/ (- 1579041.) 125000.) (* skoSMC1 (/ 1479041. 250000.)))))))) (+ (/ (- 1629041.) 125000.) (* skoSMC1 (/ 1479041. 125000.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (<= 0. skoSMC1) (and (not (<= skoXC1 0.)) (not (<= 1. skoXC1)))))))))
-----[end problem]-----

