-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoBC1,skoAC1}, ForAll[{}, And[skoBC1*((24999/100000)+skoAC1*(3+skoAC1*(74997/100000)))<=1+skoAC1*skoAC1*3,skoBC1*((24999/100000)+skoAC1*(3+skoAC1*(74997/100000)))<=1+skoAC1*skoAC1*3,skoBC1*(3+skoBC1*((1/4)+skoAC1*-1))<=(-3/4)+skoAC1*3,Or[skoBC1*((182079/100000)+skoAC1*-1)<=1,skoBC1<=1],skoAC1>0,2>skoBC1,skoBC1>skoAC1]]], Reals]]

% In QepcadB format:
(E skoBC1) (E skoAC1) [[(skoBC1 (24999/100000+(skoAC1 (3+(skoAC1 (74997/100000))))))<=(1+(skoAC1 skoAC1 (3)))]/\[[(skoBC1 (24999/100000+(skoAC1 (3+(skoAC1 (74997/100000))))))<=(1+(skoAC1 skoAC1 (3)))]/\[[(skoBC1 (3+(skoBC1 (1/4+(skoAC1 (-1))))))<=(-3/4+(skoAC1 (3)))]/\[[[(skoBC1 (182079/100000+(skoAC1 (-1))))<=1]\/[skoBC1<=1]]/\[[0<skoAC1]/\[[skoBC1<2]/\[skoAC1<skoBC1]]]]]]].

% In SMTLib2 format:
(declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoBC1 (+ (/ 24999. 100000.) (* skoAC1 (+ 3. (* skoAC1 (/ 74997. 100000.)))))) (+ 1. (* skoAC1 (* skoAC1 3.)))) (and (<= (* skoBC1 (+ (/ 24999. 100000.) (* skoAC1 (+ 3. (* skoAC1 (/ 74997. 100000.)))))) (+ 1. (* skoAC1 (* skoAC1 3.)))) (and (<= (* skoBC1 (+ 3. (* skoBC1 (+ (/ 1. 4.) (* skoAC1 (- 1.)))))) (+ (/ (- 3.) 4.) (* skoAC1 3.))) (and (or (<= (* skoBC1 (+ (/ 182079. 100000.) (* skoAC1 (- 1.)))) 1.) (<= skoBC1 1.)) (and (not (<= skoAC1 0.)) (and (not (<= 2. skoBC1)) (not (<= skoBC1 skoAC1)))))))))
-----[end problem]-----

