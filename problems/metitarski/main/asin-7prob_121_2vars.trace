-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,pi}, ForAll[{}, And[skoXC1*((688/125)+Pi*(-17519/10000))>0,(99999/100000)>skoXC1,skoXC1>0,(31415927/10000000)>Pi,Pi>(15707963/5000000),skoXC1*skoXC1*(-1+Pi)>-3+Pi,skoXC1*skoXC1*(-4+Pi*2)>-6+Pi*2,skoXC1*skoXC1*(-832+Pi*320+skoXC1*skoXC1*(592+Pi*-272+skoXC1*skoXC1*(-152+Pi*88+skoXC1*skoXC1*(10+Pi*-8))))>-384+Pi*128]]], Reals]]

% In QepcadB format:
(E skoXC1) (E pi) [[0<(skoXC1 (688/125+(pi (-17519/10000))))]/\[[skoXC1<99999/100000]/\[[0<skoXC1]/\[[pi<31415927/10000000]/\[[15707963/5000000<pi]/\[[(-3+pi)<(skoXC1 skoXC1 (-1+pi))]/\[[(-6+(pi (2)))<(skoXC1 skoXC1 (-4+(pi (2))))]/\[(-384+(pi (128)))<(skoXC1 skoXC1 ((-832+(pi (320)))+(skoXC1 skoXC1 ((592+(pi (-272)))+(skoXC1 skoXC1 ((-152+(pi (88)))+(skoXC1 skoXC1 (10+(pi (-8))))))))))]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (not (<= (* skoXC1 (+ (/ 688. 125.) (* metit_our_pi (/ (- 17519.) 10000.)))) 0.)) (and (not (<= (/ 99999. 100000.) skoXC1)) (and (not (<= skoXC1 0.)) (and (not (<= (/ 31415927. 10000000.) metit_our_pi)) (and (not (<= metit_our_pi (/ 15707963. 5000000.))) (and (not (<= (* skoXC1 (* skoXC1 (+ (- 1.) metit_our_pi))) (+ (- 3.) metit_our_pi))) (and (not (<= (* skoXC1 (* skoXC1 (+ (- 4.) (* metit_our_pi 2.)))) (+ (- 6.) (* metit_our_pi 2.)))) (not (<= (* skoXC1 (* skoXC1 (+ (+ (- 832.) (* metit_our_pi 320.)) (* skoXC1 (* skoXC1 (+ (+ 592. (* metit_our_pi (- 272.))) (* skoXC1 (* skoXC1 (+ (+ (- 152.) (* metit_our_pi 88.)) (* skoXC1 (* skoXC1 (+ 10. (* metit_our_pi (- 8.)))))))))))))) (+ (- 384.) (* metit_our_pi 128.))))))))))))
-----[end problem]-----

