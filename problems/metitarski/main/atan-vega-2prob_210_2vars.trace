-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,skoXC1}, ForAll[{}, And[skoYC1*(skoXC1*-12+skoYC1*(6+skoXC1*skoXC1*10+skoYC1*(skoXC1*-4+skoYC1*(1+skoXC1*skoXC1*3))))<=-9+skoXC1*skoXC1*-3,skoYC1*(skoXC1*skoXC1*-12+skoYC1*(skoXC1*6+skoYC1*(skoXC1*skoXC1*-12+skoYC1*skoXC1*-3)))<=skoXC1*-9,0>skoYC1,skoXC1>-1,1>skoYC1,skoYC1>skoXC1]]], Reals]]

% In QepcadB format:
(E skoYC1) (E skoXC1) [[(skoYC1 ((skoXC1 (-12))+(skoYC1 ((6+(skoXC1 skoXC1 (10)))+(skoYC1 ((skoXC1 (-4))+(skoYC1 (1+(skoXC1 skoXC1 (3))))))))))<=(-9+(skoXC1 skoXC1 (-3)))]/\[[(skoYC1 ((skoXC1 skoXC1 (-12))+(skoYC1 ((skoXC1 (6))+(skoYC1 ((skoXC1 skoXC1 (-12))+(skoYC1 skoXC1 (-3))))))))<=(skoXC1 (-9))]/\[[skoYC1<0]/\[[-1<skoXC1]/\[[skoYC1<1]/\[skoXC1<skoYC1]]]]]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (assert (and (<= (* skoYC1 (+ (* skoXC1 (- 12.)) (* skoYC1 (+ (+ 6. (* skoXC1 (* skoXC1 10.))) (* skoYC1 (+ (* skoXC1 (- 4.)) (* skoYC1 (+ 1. (* skoXC1 (* skoXC1 3.)))))))))) (+ (- 9.) (* skoXC1 (* skoXC1 (- 3.))))) (and (<= (* skoYC1 (+ (* skoXC1 (* skoXC1 (- 12.))) (* skoYC1 (+ (* skoXC1 6.) (* skoYC1 (+ (* skoXC1 (* skoXC1 (- 12.))) (* skoYC1 (* skoXC1 (- 3.))))))))) (* skoXC1 (- 9.))) (and (not (<= 0. skoYC1)) (and (not (<= skoXC1 (- 1.))) (and (not (<= 1. skoYC1)) (not (<= skoYC1 skoXC1))))))))
-----[end problem]-----

