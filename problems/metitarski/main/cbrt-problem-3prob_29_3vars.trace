-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,skoXC1,skoZC1}, ForAll[{}, And[skoZC1*((4/3)+skoXC1*(8+skoXC1*(-4/3))+skoYC1*(8+skoXC1*((80/3)+skoXC1*(-8/3))+skoYC1*((-4/3)+skoXC1*(-8/3)))+skoZC1*((-2/3)+skoXC1*(-4/3)+skoYC1*((-4/3)+skoXC1*(-8/3))))<=(2/3)+skoXC1*((-4/3)+skoXC1*(2/3))+skoYC1*((-4/3)+skoXC1*(-8+skoXC1*(4/3))+skoYC1*((2/3)+skoXC1*(4/3))),skoZC1>0,skoYC1>0,skoXC1>0]]], Reals]]

% In QepcadB format:
(E skoYC1) (E skoXC1) (E skoZC1) [[(skoZC1 (((4/3+(skoXC1 (8+(skoXC1 (-4/3)))))+(skoYC1 ((8+(skoXC1 (80/3+(skoXC1 (-8/3)))))+(skoYC1 (-4/3+(skoXC1 (-8/3)))))))+(skoZC1 ((-2/3+(skoXC1 (-4/3)))+(skoYC1 (-4/3+(skoXC1 (-8/3))))))))<=((2/3+(skoXC1 (-4/3+(skoXC1 (2/3)))))+(skoYC1 ((-4/3+(skoXC1 (-8+(skoXC1 (4/3)))))+(skoYC1 (2/3+(skoXC1 (4/3)))))))]/\[[0<skoZC1]/\[[0<skoYC1]/\[0<skoXC1]]]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoZC1 () Real) (assert (and (<= (* skoZC1 (+ (+ (+ (/ 4. 3.) (* skoXC1 (+ 8. (* skoXC1 (/ (- 4.) 3.))))) (* skoYC1 (+ (+ 8. (* skoXC1 (+ (/ 80. 3.) (* skoXC1 (/ (- 8.) 3.))))) (* skoYC1 (+ (/ (- 4.) 3.) (* skoXC1 (/ (- 8.) 3.))))))) (* skoZC1 (+ (+ (/ (- 2.) 3.) (* skoXC1 (/ (- 4.) 3.))) (* skoYC1 (+ (/ (- 4.) 3.) (* skoXC1 (/ (- 8.) 3.)))))))) (+ (+ (/ 2. 3.) (* skoXC1 (+ (/ (- 4.) 3.) (* skoXC1 (/ 2. 3.))))) (* skoYC1 (+ (+ (/ (- 4.) 3.) (* skoXC1 (+ (- 8.) (* skoXC1 (/ 4. 3.))))) (* skoYC1 (+ (/ 2. 3.) (* skoXC1 (/ 4. 3.)))))))) (and (not (<= skoZC1 0.)) (and (not (<= skoYC1 0.)) (not (<= skoXC1 0.))))))
-----[end problem]-----

