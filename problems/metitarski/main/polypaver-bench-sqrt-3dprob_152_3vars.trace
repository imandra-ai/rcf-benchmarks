-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1,skoZC1}, ForAll[{}, And[skoXC1*(-6+skoXC1*-1)>1,skoZC1*((-1/4)+skoXC1*((-3/2)+skoXC1*(-1/4))+skoYC1*((-1/4)+skoXC1*(14+skoXC1*((51/4)+skoXC1*(-1/2)))+skoYC1*skoXC1*((-1/2)+skoXC1*(-3+skoXC1*(-1/2))))+skoZC1*skoYC1*(skoXC1*((-1/2)+skoXC1*(-3+skoXC1*(-1/2)))+skoYC1*skoXC1*((-1/2)+skoXC1*(-3+skoXC1*(-1/2)))))>(1/4)+skoXC1*((3/2)+skoXC1*(1/4))+skoYC1*((1/4)+skoXC1*((3/2)+skoXC1*(1/4))),1<=skoXC1,1<=skoYC1,1<=skoZC1,skoXC1<=2,skoYC1<=2,skoZC1<=2]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) (E skoZC1) [[1<(skoXC1 (-6+(skoXC1 (-1))))]/\[[((1/4+(skoXC1 (3/2+(skoXC1 (1/4)))))+(skoYC1 (1/4+(skoXC1 (3/2+(skoXC1 (1/4)))))))<(skoZC1 (((-1/4+(skoXC1 (-3/2+(skoXC1 (-1/4)))))+(skoYC1 ((-1/4+(skoXC1 (14+(skoXC1 (51/4+(skoXC1 (-1/2)))))))+(skoYC1 skoXC1 (-1/2+(skoXC1 (-3+(skoXC1 (-1/2)))))))))+(skoZC1 skoYC1 ((skoXC1 (-1/2+(skoXC1 (-3+(skoXC1 (-1/2))))))+(skoYC1 skoXC1 (-1/2+(skoXC1 (-3+(skoXC1 (-1/2))))))))))]/\[[1<=skoXC1]/\[[1<=skoYC1]/\[[1<=skoZC1]/\[[skoXC1<=2]/\[[skoYC1<=2]/\[skoZC1<=2]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoZC1 () Real) (assert (and (not (<= (* skoXC1 (+ (- 6.) (* skoXC1 (- 1.)))) 1.)) (and (not (<= (* skoZC1 (+ (+ (+ (/ (- 1.) 4.) (* skoXC1 (+ (/ (- 3.) 2.) (* skoXC1 (/ (- 1.) 4.))))) (* skoYC1 (+ (+ (/ (- 1.) 4.) (* skoXC1 (+ 14. (* skoXC1 (+ (/ 51. 4.) (* skoXC1 (/ (- 1.) 2.))))))) (* skoYC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (+ (- 3.) (* skoXC1 (/ (- 1.) 2.)))))))))) (* skoZC1 (* skoYC1 (+ (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (+ (- 3.) (* skoXC1 (/ (- 1.) 2.)))))) (* skoYC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (+ (- 3.) (* skoXC1 (/ (- 1.) 2.)))))))))))) (+ (+ (/ 1. 4.) (* skoXC1 (+ (/ 3. 2.) (* skoXC1 (/ 1. 4.))))) (* skoYC1 (+ (/ 1. 4.) (* skoXC1 (+ (/ 3. 2.) (* skoXC1 (/ 1. 4.))))))))) (and (<= 1. skoXC1) (and (<= 1. skoYC1) (and (<= 1. skoZC1) (and (<= skoXC1 2.) (and (<= skoYC1 2.) (<= skoZC1 2.)))))))))
-----[end problem]-----

