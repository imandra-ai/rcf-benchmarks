-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoSC1}, ForAll[{}, And[0<=skoTC1,skoTC1*skoTC1*(-4+skoSC1*(817/250)+skoTC1*skoTC1*(-3+skoSC1*(201/1000)))>skoSC1*4,Or[skoTC1*skoTC1*(-4+skoSC1*(817/250)+skoTC1*skoTC1*(-3+skoSC1*(201/1000)))<=skoSC1*4,skoTC1<=0],Or[(-1/5000)>skoTC1,0<=skoTC1],Or[0>skoTC1,skoTC1>(1/5000)],skoTC1*skoTC1*(-5+skoTC1*skoTC1*-1)==4+skoSC1*skoSC1*-1,0<=skoSC1]]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoSC1) [[0<=skoTC1]/\[[(skoSC1 (4))<(skoTC1 skoTC1 ((-4+(skoSC1 (817/250)))+(skoTC1 skoTC1 (-3+(skoSC1 (201/1000))))))]/\[[[(skoTC1 skoTC1 ((-4+(skoSC1 (817/250)))+(skoTC1 skoTC1 (-3+(skoSC1 (201/1000))))))<=(skoSC1 (4))]\/[skoTC1<=0]]/\[[[skoTC1<-1/5000]\/[0<=skoTC1]]/\[[[skoTC1<0]\/[1/5000<skoTC1]]/\[[(skoTC1 skoTC1 (-5+(skoTC1 skoTC1 (-1))))=(4+(skoSC1 skoSC1 (-1)))]/\[0<=skoSC1]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= 0. skoTC1) (and (not (<= (* skoTC1 (* skoTC1 (+ (+ (- 4.) (* skoSC1 (/ 817. 250.))) (* skoTC1 (* skoTC1 (+ (- 3.) (* skoSC1 (/ 201. 1000.)))))))) (* skoSC1 4.))) (and (or (<= (* skoTC1 (* skoTC1 (+ (+ (- 4.) (* skoSC1 (/ 817. 250.))) (* skoTC1 (* skoTC1 (+ (- 3.) (* skoSC1 (/ 201. 1000.)))))))) (* skoSC1 4.)) (<= skoTC1 0.)) (and (or (not (<= (/ (- 1.) 5000.) skoTC1)) (<= 0. skoTC1)) (and (or (not (<= 0. skoTC1)) (not (<= skoTC1 (/ 1. 5000.)))) (and (= (* skoTC1 (* skoTC1 (+ (- 5.) (* skoTC1 (* skoTC1 (- 1.)))))) (+ 4. (* skoSC1 (* skoSC1 (- 1.))))) (<= 0. skoSC1))))))))
-----[end problem]-----

