-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,skoXC1}, ForAll[{}, And[skoXC1<=0,0>skoYC1,skoYC1*(skoXC1*(1+skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(-1/120)))+skoYC1*((1/2)+skoXC1*skoXC1*((-1/4)+skoXC1*skoXC1*(1/48))+skoYC1*(skoXC1*((1/6)+skoXC1*skoXC1*(-1/36))+skoYC1*((-1/24)+skoXC1*skoXC1*(1/48)+skoYC1*(skoXC1*(-1/120)+skoYC1*(1/720))))))>1+skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((1/24)+skoXC1*skoXC1*(-1/720))),Or[0>skoYC1,skoYC1>0],skoYC1<=(7/5)+skoXC1*-1,(-157/100)+skoXC1*-1<=skoYC1,-1<=skoYC1,-1<=skoXC1,Or[0>skoXC1,skoXC1>0]]]], Reals]]

% In QepcadB format:
(E skoYC1) (E skoXC1) [[skoXC1<=0]/\[[skoYC1<0]/\[[(1+(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (1/24+(skoXC1 skoXC1 (-1/720)))))))<(skoYC1 ((skoXC1 (1+(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (-1/120))))))+(skoYC1 ((1/2+(skoXC1 skoXC1 (-1/4+(skoXC1 skoXC1 (1/48)))))+(skoYC1 ((skoXC1 (1/6+(skoXC1 skoXC1 (-1/36))))+(skoYC1 ((-1/24+(skoXC1 skoXC1 (1/48)))+(skoYC1 ((skoXC1 (-1/120))+(skoYC1 (1/720))))))))))))]/\[[[skoYC1<0]\/[0<skoYC1]]/\[[skoYC1<=(7/5+(skoXC1 (-1)))]/\[[(-157/100+(skoXC1 (-1)))<=skoYC1]/\[[-1<=skoYC1]/\[[-1<=skoXC1]/\[[skoXC1<0]\/[0<skoXC1]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (assert (and (<= skoXC1 0.) (and (not (<= 0. skoYC1)) (and (not (<= (* skoYC1 (+ (* skoXC1 (+ 1. (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ (- 1.) 120.)))))))) (* skoYC1 (+ (+ (/ 1. 2.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 4.) (* skoXC1 (* skoXC1 (/ 1. 48.))))))) (* skoYC1 (+ (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ (- 1.) 36.))))) (* skoYC1 (+ (+ (/ (- 1.) 24.) (* skoXC1 (* skoXC1 (/ 1. 48.)))) (* skoYC1 (+ (* skoXC1 (/ (- 1.) 120.)) (* skoYC1 (/ 1. 720.)))))))))))) (+ 1. (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 1. 24.) (* skoXC1 (* skoXC1 (/ (- 1.) 720.)))))))))))) (and (or (not (<= 0. skoYC1)) (not (<= skoYC1 0.))) (and (<= skoYC1 (+ (/ 7. 5.) (* skoXC1 (- 1.)))) (and (<= (+ (/ (- 157.) 100.) (* skoXC1 (- 1.))) skoYC1) (and (<= (- 1.) skoYC1) (and (<= (- 1.) skoXC1) (or (not (<= 0. skoXC1)) (not (<= skoXC1 0.))))))))))))
-----[end problem]-----

