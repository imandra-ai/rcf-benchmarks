-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoCC1,skoXC1}, ForAll[{}, And[skoCC1*(3/13)<=skoSC1,skoXC1<=0,skoSC1<=skoCC1*(3/13),Or[skoCC1*(3/13)>skoSC1,skoSC1>skoCC1*(3/13)],skoSC1*skoSC1==1+skoCC1*skoCC1*-1,skoXC1<=289,0<=skoXC1]]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoCC1) (E skoXC1) [[(skoCC1 (3/13))<=skoSC1]/\[[skoXC1<=0]/\[[skoSC1<=(skoCC1 (3/13))]/\[[[skoSC1<(skoCC1 (3/13))]\/[(skoCC1 (3/13))<skoSC1]]/\[[(skoSC1 skoSC1)=(1+(skoCC1 skoCC1 (-1)))]/\[[skoXC1<=289]/\[0<=skoXC1]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoCC1 () Real) (declare-fun skoXC1 () Real) (assert (and (<= (* skoCC1 (/ 3. 13.)) skoSC1) (and (<= skoXC1 0.) (and (<= skoSC1 (* skoCC1 (/ 3. 13.))) (and (or (not (<= (* skoCC1 (/ 3. 13.)) skoSC1)) (not (<= skoSC1 (* skoCC1 (/ 3. 13.))))) (and (= (* skoSC1 skoSC1) (+ 1. (* skoCC1 (* skoCC1 (- 1.))))) (and (<= skoXC1 289.) (<= 0. skoXC1))))))))
-----[end problem]-----

