-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoSMC1,skoSPC1,skoS2C1,skoSSC1}, ForAll[{}, And[skoSPC1<=-4+skoSMC1*-1,skoXC1*skoXC1==1+skoSSC1*skoSSC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,0<=skoSSC1,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,(4/5)>skoXC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoSMC1) (E skoSPC1) (E skoS2C1) (E skoSSC1) [[skoSPC1<=(-4+(skoSMC1 (-1)))]/\[[(skoXC1 skoXC1)=(1+(skoSSC1 skoSSC1 (-1)))]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[0<=skoSSC1]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<4/5]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoSMC1 () Real) (declare-fun skoSPC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun skoSSC1 () Real) (assert (and (<= skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= (* skoXC1 skoXC1) (+ 1. (* skoSSC1 (* skoSSC1 (- 1.))))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (<= 0. skoSSC1) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (not (<= skoXC1 0.)) (not (<= (/ 4. 5.) skoXC1)))))))))))))
-----[end problem]-----

