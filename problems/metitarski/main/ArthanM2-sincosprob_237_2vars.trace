-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, ForAll[{}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0]]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))]/\[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (not (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.))))))) (not (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.))))
-----[end problem]-----

