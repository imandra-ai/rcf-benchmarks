-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoS3C1}, ForAll[{}, And[skoS3C1*skoS3C1*skoS3C1*skoS3C1<=0,skoXC1*(skoS3C1*skoS3C1*(-3+skoS3C1*skoS3C1)+skoXC1*skoXC1*(skoS3C1*skoS3C1*((1/2)+skoS3C1*skoS3C1*(-1/6))+skoXC1*skoXC1*(-1/24)))>0,skoS3C1*skoS3C1==3,skoXC1<=6,skoXC1>0,skoS3C1>0]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoS3C1) [[(skoS3C1 skoS3C1 skoS3C1 skoS3C1)<=0]/\[[0<(skoXC1 ((skoS3C1 skoS3C1 (-3+(skoS3C1 skoS3C1)))+(skoXC1 skoXC1 ((skoS3C1 skoS3C1 (1/2+(skoS3C1 skoS3C1 (-1/6))))+(skoXC1 skoXC1 (-1/24))))))]/\[[(skoS3C1 skoS3C1)=3]/\[[skoXC1<=6]/\[[0<skoXC1]/\[0<skoS3C1]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoS3C1 () Real) (assert (and (<= (* skoS3C1 (* skoS3C1 (* skoS3C1 skoS3C1))) 0.) (and (not (<= (* skoXC1 (+ (* skoS3C1 (* skoS3C1 (+ (- 3.) (* skoS3C1 skoS3C1)))) (* skoXC1 (* skoXC1 (+ (* skoS3C1 (* skoS3C1 (+ (/ 1. 2.) (* skoS3C1 (* skoS3C1 (/ (- 1.) 6.)))))) (* skoXC1 (* skoXC1 (/ (- 1.) 24.)))))))) 0.)) (and (= (* skoS3C1 skoS3C1) 3.) (and (<= skoXC1 6.) (and (not (<= skoXC1 0.)) (not (<= skoS3C1 0.))))))))
-----[end problem]-----

