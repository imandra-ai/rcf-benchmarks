-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,pi}, ForAll[{}, And[skoXC1*skoXC1*skoXC1*(Pi*Pi*Pi*Pi*Pi*Pi*(-40+Pi*Pi*(32/15))+skoXC1*skoXC1*(Pi*Pi*Pi*Pi*(-2+Pi*Pi*(8+Pi*Pi*(28/45)))+skoXC1*skoXC1*(Pi*Pi*(10+Pi*Pi*((76/15)+Pi*Pi*((-8/3)+Pi*Pi*(-4/45))))+skoXC1*skoXC1*(-4+Pi*Pi*((-14/3)+Pi*Pi*((221/180)+Pi*Pi*(2/9)))+skoXC1*skoXC1*((22/15)+Pi*Pi*((-1/9)+Pi*Pi*(-11/60))+skoXC1*skoXC1*((-13/180)+Pi*Pi*(1/18)+skoXC1*skoXC1*(-1/180)))))))>0,skoXC1*skoXC1*(Pi*Pi*Pi*Pi*Pi*Pi*Pi*Pi*(8/15)+skoXC1*skoXC1*(Pi*Pi*Pi*Pi*(35+Pi*Pi*(-8+Pi*Pi*(-8/15)))+skoXC1*skoXC1*(Pi*Pi*(-20+Pi*Pi*((23/30)+Pi*Pi*(4/3)))+skoXC1*skoXC1*(5+Pi*Pi*((4/3)+Pi*Pi*(-11/10))+skoXC1*skoXC1*((-19/30)+Pi*Pi*(1/3)+skoXC1*skoXC1*(-1/30))))))>Pi*Pi*Pi*Pi*Pi*Pi*Pi*Pi*-16,skoXC1>0,skoXC1!=0,(31415927/10000000)>Pi,Pi>(15707963/5000000),Pi*(1/2)>skoXC1,skoXC1>Pi*(-1/2)]]], Reals]]

% In QepcadB format:
(E skoXC1) (E pi) [[0<(skoXC1 skoXC1 skoXC1 ((pi pi pi pi pi pi (-40+(pi pi (32/15))))+(skoXC1 skoXC1 ((pi pi pi pi (-2+(pi pi (8+(pi pi (28/45))))))+(skoXC1 skoXC1 ((pi pi (10+(pi pi (76/15+(pi pi (-8/3+(pi pi (-4/45))))))))+(skoXC1 skoXC1 ((-4+(pi pi (-14/3+(pi pi (221/180+(pi pi (2/9)))))))+(skoXC1 skoXC1 ((22/15+(pi pi (-1/9+(pi pi (-11/60)))))+(skoXC1 skoXC1 ((-13/180+(pi pi (1/18)))+(skoXC1 skoXC1 (-1/180))))))))))))))]/\[[(pi pi pi pi pi pi pi pi (-16))<(skoXC1 skoXC1 ((pi pi pi pi pi pi pi pi (8/15))+(skoXC1 skoXC1 ((pi pi pi pi (35+(pi pi (-8+(pi pi (-8/15))))))+(skoXC1 skoXC1 ((pi pi (-20+(pi pi (23/30+(pi pi (4/3))))))+(skoXC1 skoXC1 ((5+(pi pi (4/3+(pi pi (-11/10)))))+(skoXC1 skoXC1 ((-19/30+(pi pi (1/3)))+(skoXC1 skoXC1 (-1/30))))))))))))]/\[[0<skoXC1]/\[[skoXC1 /=0]/\[[pi<31415927/10000000]/\[[15707963/5000000<pi]/\[[skoXC1<(pi (1/2))]/\[(pi (-1/2))<skoXC1]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (not (<= (* skoXC1 (* skoXC1 (* skoXC1 (+ (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (+ (- 40.) (* metit_our_pi (* metit_our_pi (/ 32. 15.)))))))))) (* skoXC1 (* skoXC1 (+ (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (+ (- 2.) (* metit_our_pi (* metit_our_pi (+ 8. (* metit_our_pi (* metit_our_pi (/ 28. 45.))))))))))) (* skoXC1 (* skoXC1 (+ (* metit_our_pi (* metit_our_pi (+ 10. (* metit_our_pi (* metit_our_pi (+ (/ 76. 15.) (* metit_our_pi (* metit_our_pi (+ (/ (- 8.) 3.) (* metit_our_pi (* metit_our_pi (/ (- 4.) 45.)))))))))))) (* skoXC1 (* skoXC1 (+ (+ (- 4.) (* metit_our_pi (* metit_our_pi (+ (/ (- 14.) 3.) (* metit_our_pi (* metit_our_pi (+ (/ 221. 180.) (* metit_our_pi (* metit_our_pi (/ 2. 9.)))))))))) (* skoXC1 (* skoXC1 (+ (+ (/ 22. 15.) (* metit_our_pi (* metit_our_pi (+ (/ (- 1.) 9.) (* metit_our_pi (* metit_our_pi (/ (- 11.) 60.))))))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 13.) 180.) (* metit_our_pi (* metit_our_pi (/ 1. 18.)))) (* skoXC1 (* skoXC1 (/ (- 1.) 180.)))))))))))))))))))))) 0.)) (and (not (<= (* skoXC1 (* skoXC1 (+ (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (/ 8. 15.))))))))) (* skoXC1 (* skoXC1 (+ (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (+ 35. (* metit_our_pi (* metit_our_pi (+ (- 8.) (* metit_our_pi (* metit_our_pi (/ (- 8.) 15.))))))))))) (* skoXC1 (* skoXC1 (+ (* metit_our_pi (* metit_our_pi (+ (- 20.) (* metit_our_pi (* metit_our_pi (+ (/ 23. 30.) (* metit_our_pi (* metit_our_pi (/ 4. 3.))))))))) (* skoXC1 (* skoXC1 (+ (+ 5. (* metit_our_pi (* metit_our_pi (+ (/ 4. 3.) (* metit_our_pi (* metit_our_pi (/ (- 11.) 10.))))))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 19.) 30.) (* metit_our_pi (* metit_our_pi (/ 1. 3.)))) (* skoXC1 (* skoXC1 (/ (- 1.) 30.)))))))))))))))))) (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (- 16.))))))))))) (and (not (<= skoXC1 0.)) (and (not (= skoXC1 0.)) (and (not (<= (/ 31415927. 10000000.) metit_our_pi)) (and (not (<= metit_our_pi (/ 15707963. 5000000.))) (and (not (<= (* metit_our_pi (/ 1. 2.)) skoXC1)) (not (<= skoXC1 (* metit_our_pi (/ (- 1.) 2.))))))))))))
-----[end problem]-----

