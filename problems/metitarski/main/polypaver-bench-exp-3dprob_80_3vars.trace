-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoZC1,skoYC1,skoXC1}, ForAll[{}, And[skoXC1*-1+skoYC1*-1<=skoZC1,skoZC1>7+skoXC1*-1+skoYC1*-1,0<=skoXC1,0<=skoYC1,0<=skoZC1,skoXC1<=1,skoYC1<=1,skoZC1<=1,skoZC1<=2+skoXC1*-1+skoYC1*-1,2+skoXC1*-1+skoYC1*-1<=skoZC1]]], Reals]]

% In QepcadB format:
(E skoZC1) (E skoYC1) (E skoXC1) [[((skoXC1 (-1))+(skoYC1 (-1)))<=skoZC1]/\[[((7+(skoXC1 (-1)))+(skoYC1 (-1)))<skoZC1]/\[[0<=skoXC1]/\[[0<=skoYC1]/\[[0<=skoZC1]/\[[skoXC1<=1]/\[[skoYC1<=1]/\[[skoZC1<=1]/\[[skoZC1<=((2+(skoXC1 (-1)))+(skoYC1 (-1)))]/\[((2+(skoXC1 (-1)))+(skoYC1 (-1)))<=skoZC1]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoZC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (assert (and (<= (+ (* skoXC1 (- 1.)) (* skoYC1 (- 1.))) skoZC1) (and (not (<= skoZC1 (+ (+ 7. (* skoXC1 (- 1.))) (* skoYC1 (- 1.))))) (and (<= 0. skoXC1) (and (<= 0. skoYC1) (and (<= 0. skoZC1) (and (<= skoXC1 1.) (and (<= skoYC1 1.) (and (<= skoZC1 1.) (and (<= skoZC1 (+ (+ 2. (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (<= (+ (+ 2. (* skoXC1 (- 1.))) (* skoYC1 (- 1.))) skoZC1)))))))))))
-----[end problem]-----

