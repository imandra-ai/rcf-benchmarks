-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1,skoZC1}, ForAll[{}, And[skoZC1*skoYC1*4>0,skoZC1*((1/4)+skoXC1*((3/2)+skoXC1*(1/4))+skoYC1*((1/4)+skoXC1*(-14+skoXC1*((-51/4)+skoXC1*(1/2)))+skoYC1*skoXC1*((1/2)+skoXC1*(3+skoXC1*(1/2))))+skoZC1*skoYC1*(skoXC1*((1/2)+skoXC1*(3+skoXC1*(1/2)))+skoYC1*skoXC1*((1/2)+skoXC1*(3+skoXC1*(1/2)))))>(-1/4)+skoXC1*((-3/2)+skoXC1*(-1/4))+skoYC1*((-1/4)+skoXC1*((-3/2)+skoXC1*(-1/4)))]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) (E skoZC1) [[0<(skoZC1 skoYC1 (4))]/\[((-1/4+(skoXC1 (-3/2+(skoXC1 (-1/4)))))+(skoYC1 (-1/4+(skoXC1 (-3/2+(skoXC1 (-1/4)))))))<(skoZC1 (((1/4+(skoXC1 (3/2+(skoXC1 (1/4)))))+(skoYC1 ((1/4+(skoXC1 (-14+(skoXC1 (-51/4+(skoXC1 (1/2)))))))+(skoYC1 skoXC1 (1/2+(skoXC1 (3+(skoXC1 (1/2)))))))))+(skoZC1 skoYC1 ((skoXC1 (1/2+(skoXC1 (3+(skoXC1 (1/2))))))+(skoYC1 skoXC1 (1/2+(skoXC1 (3+(skoXC1 (1/2))))))))))]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoZC1 () Real) (assert (and (not (<= (* skoZC1 (* skoYC1 4.)) 0.)) (not (<= (* skoZC1 (+ (+ (+ (/ 1. 4.) (* skoXC1 (+ (/ 3. 2.) (* skoXC1 (/ 1. 4.))))) (* skoYC1 (+ (+ (/ 1. 4.) (* skoXC1 (+ (- 14.) (* skoXC1 (+ (/ (- 51.) 4.) (* skoXC1 (/ 1. 2.))))))) (* skoYC1 (* skoXC1 (+ (/ 1. 2.) (* skoXC1 (+ 3. (* skoXC1 (/ 1. 2.)))))))))) (* skoZC1 (* skoYC1 (+ (* skoXC1 (+ (/ 1. 2.) (* skoXC1 (+ 3. (* skoXC1 (/ 1. 2.)))))) (* skoYC1 (* skoXC1 (+ (/ 1. 2.) (* skoXC1 (+ 3. (* skoXC1 (/ 1. 2.)))))))))))) (+ (+ (/ (- 1.) 4.) (* skoXC1 (+ (/ (- 3.) 2.) (* skoXC1 (/ (- 1.) 4.))))) (* skoYC1 (+ (/ (- 1.) 4.) (* skoXC1 (+ (/ (- 3.) 2.) (* skoXC1 (/ (- 1.) 4.)))))))))))
-----[end problem]-----

