-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,skoZC1,skoXC1}, ForAll[{}, And[skoZC1*(69+skoXC1*10+skoYC1*(148+skoXC1*20+skoYC1*20)+skoZC1*(10+skoYC1*20))>-32+skoXC1*-5+skoYC1*(-69+skoXC1*-10+skoYC1*-10),skoZC1>(1/20),skoYC1>(1/20),skoXC1>(1/20),15>skoZC1,15>skoYC1,15>skoXC1]]], Reals]]

% In QepcadB format:
(E skoYC1) (E skoZC1) (E skoXC1) [[((-32+(skoXC1 (-5)))+(skoYC1 ((-69+(skoXC1 (-10)))+(skoYC1 (-10)))))<(skoZC1 (((69+(skoXC1 (10)))+(skoYC1 ((148+(skoXC1 (20)))+(skoYC1 (20)))))+(skoZC1 (10+(skoYC1 (20))))))]/\[[1/20<skoZC1]/\[[1/20<skoYC1]/\[[1/20<skoXC1]/\[[skoZC1<15]/\[[skoYC1<15]/\[skoXC1<15]]]]]]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun skoZC1 () Real) (declare-fun skoXC1 () Real) (assert (and (not (<= (* skoZC1 (+ (+ (+ 69. (* skoXC1 10.)) (* skoYC1 (+ (+ 148. (* skoXC1 20.)) (* skoYC1 20.)))) (* skoZC1 (+ 10. (* skoYC1 20.))))) (+ (+ (- 32.) (* skoXC1 (- 5.))) (* skoYC1 (+ (+ (- 69.) (* skoXC1 (- 10.))) (* skoYC1 (- 10.))))))) (and (not (<= skoZC1 (/ 1. 20.))) (and (not (<= skoYC1 (/ 1. 20.))) (and (not (<= skoXC1 (/ 1. 20.))) (and (not (<= 15. skoZC1)) (and (not (<= 15. skoYC1)) (not (<= 15. skoXC1)))))))))
-----[end problem]-----

