-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,skoXC1}, ForAll[{}, And[skoXC1>skoYC1,skoYC1>skoXC1*-1,skoYC1>-1,skoXC1>-1,1>skoYC1,1>skoXC1,Or[0>skoXC1,skoXC1>0],Or[0>skoYC1,skoYC1>0],Or[skoXC1*-1>skoYC1,skoYC1>skoXC1*-1],Or[skoYC1*skoYC1*(-1+skoYC1*skoYC1*((1/3)+skoYC1*skoYC1*(-1/36)))>(1/7)+skoXC1*skoXC1*-1,skoXC1>skoYC1,skoYC1>skoXC1,0<=skoXC1]]]], Reals]]

% In QepcadB format:
(E skoYC1) (E skoXC1) [[skoYC1<skoXC1]/\[[(skoXC1 (-1))<skoYC1]/\[[-1<skoYC1]/\[[-1<skoXC1]/\[[skoYC1<1]/\[[skoXC1<1]/\[[[skoXC1<0]\/[0<skoXC1]]/\[[[skoYC1<0]\/[0<skoYC1]]/\[[[skoYC1<(skoXC1 (-1))]\/[(skoXC1 (-1))<skoYC1]]/\[[(1/7+(skoXC1 skoXC1 (-1)))<(skoYC1 skoYC1 (-1+(skoYC1 skoYC1 (1/3+(skoYC1 skoYC1 (-1/36))))))]\/[[skoYC1<skoXC1]\/[[skoXC1<skoYC1]\/[0<=skoXC1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (assert (and (not (<= skoXC1 skoYC1)) (and (not (<= skoYC1 (* skoXC1 (- 1.)))) (and (not (<= skoYC1 (- 1.))) (and (not (<= skoXC1 (- 1.))) (and (not (<= 1. skoYC1)) (and (not (<= 1. skoXC1)) (and (or (not (<= 0. skoXC1)) (not (<= skoXC1 0.))) (and (or (not (<= 0. skoYC1)) (not (<= skoYC1 0.))) (and (or (not (<= (* skoXC1 (- 1.)) skoYC1)) (not (<= skoYC1 (* skoXC1 (- 1.))))) (or (not (<= (* skoYC1 (* skoYC1 (+ (- 1.) (* skoYC1 (* skoYC1 (+ (/ 1. 3.) (* skoYC1 (* skoYC1 (/ (- 1.) 36.))))))))) (+ (/ 1. 7.) (* skoXC1 (* skoXC1 (- 1.)))))) (or (not (<= skoXC1 skoYC1)) (or (not (<= skoYC1 skoXC1)) (<= 0. skoXC1))))))))))))))
-----[end problem]-----

