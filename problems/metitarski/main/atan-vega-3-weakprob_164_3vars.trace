-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1,skoZC1}, ForAll[{}, And[0<=skoYC1,0>skoXC1,skoZC1*(1+skoYC1*skoXC1*-1)>skoXC1*-1+skoYC1*-1,skoZC1*((-546237/100000)+skoXC1*(3+skoXC1*(-182079/100000))+skoYC1*(3+skoXC1*((546237/100000)+skoXC1*(-2+skoXC1*(182079/100000)))+skoYC1*skoXC1*(-3+skoXC1*skoXC1*-1)))>-3+skoXC1*((546237/100000)+skoXC1*(-4+skoXC1*(182079/100000)))+skoYC1*((546237/100000)+skoXC1*(-3+skoXC1*(182079/100000))+skoYC1*(-3+skoXC1*skoXC1*-1)),Or[0>skoYC1,skoZC1*(-1+skoYC1*skoXC1)<=skoXC1+skoYC1],skoZC1>0,skoXC1>-1,1>skoYC1,skoYC1>skoXC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) (E skoZC1) [[0<=skoYC1]/\[[skoXC1<0]/\[[((skoXC1 (-1))+(skoYC1 (-1)))<(skoZC1 (1+(skoYC1 skoXC1 (-1))))]/\[[((-3+(skoXC1 (546237/100000+(skoXC1 (-4+(skoXC1 (182079/100000)))))))+(skoYC1 ((546237/100000+(skoXC1 (-3+(skoXC1 (182079/100000)))))+(skoYC1 (-3+(skoXC1 skoXC1 (-1)))))))<(skoZC1 ((-546237/100000+(skoXC1 (3+(skoXC1 (-182079/100000)))))+(skoYC1 ((3+(skoXC1 (546237/100000+(skoXC1 (-2+(skoXC1 (182079/100000)))))))+(skoYC1 skoXC1 (-3+(skoXC1 skoXC1 (-1))))))))]/\[[[skoYC1<0]\/[(skoZC1 (-1+(skoYC1 skoXC1)))<=(skoXC1+skoYC1)]]/\[[0<skoZC1]/\[[-1<skoXC1]/\[[skoYC1<1]/\[skoXC1<skoYC1]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoZC1 () Real) (assert (and (<= 0. skoYC1) (and (not (<= 0. skoXC1)) (and (not (<= (* skoZC1 (+ 1. (* skoYC1 (* skoXC1 (- 1.))))) (+ (* skoXC1 (- 1.)) (* skoYC1 (- 1.))))) (and (not (<= (* skoZC1 (+ (+ (/ (- 546237.) 100000.) (* skoXC1 (+ 3. (* skoXC1 (/ (- 182079.) 100000.))))) (* skoYC1 (+ (+ 3. (* skoXC1 (+ (/ 546237. 100000.) (* skoXC1 (+ (- 2.) (* skoXC1 (/ 182079. 100000.))))))) (* skoYC1 (* skoXC1 (+ (- 3.) (* skoXC1 (* skoXC1 (- 1.)))))))))) (+ (+ (- 3.) (* skoXC1 (+ (/ 546237. 100000.) (* skoXC1 (+ (- 4.) (* skoXC1 (/ 182079. 100000.))))))) (* skoYC1 (+ (+ (/ 546237. 100000.) (* skoXC1 (+ (- 3.) (* skoXC1 (/ 182079. 100000.))))) (* skoYC1 (+ (- 3.) (* skoXC1 (* skoXC1 (- 1.)))))))))) (and (or (not (<= 0. skoYC1)) (<= (* skoZC1 (+ (- 1.) (* skoYC1 skoXC1))) (+ skoXC1 skoYC1))) (and (not (<= skoZC1 0.)) (and (not (<= skoXC1 (- 1.))) (and (not (<= 1. skoYC1)) (not (<= skoYC1 skoXC1)))))))))))
-----[end problem]-----

