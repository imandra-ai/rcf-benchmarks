-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoSSC1}, ForAll[{}, And[skoXC1*(-144+skoXC1*(-58+skoXC1*(-4+skoXC1*(3/8))))<=96,skoXC1*(24+skoXC1*(10+skoXC1))>-16,skoXC1*skoXC1==1+skoSSC1*skoSSC1*-1,0<=skoXC1,0<=skoSSC1,1>skoXC1,skoXC1*((-528/125)+skoSSC1*(486/125)+skoXC1*((512/125)+skoSSC1*(-119/125)+skoXC1*(1/2)))>(6/25)+skoSSC1*(3/25)]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoSSC1) [[(skoXC1 (-144+(skoXC1 (-58+(skoXC1 (-4+(skoXC1 (3/8))))))))<=96]/\[[-16<(skoXC1 (24+(skoXC1 (10+skoXC1))))]/\[[(skoXC1 skoXC1)=(1+(skoSSC1 skoSSC1 (-1)))]/\[[0<=skoXC1]/\[[0<=skoSSC1]/\[[skoXC1<1]/\[(6/25+(skoSSC1 (3/25)))<(skoXC1 ((-528/125+(skoSSC1 (486/125)))+(skoXC1 ((512/125+(skoSSC1 (-119/125)))+(skoXC1 (1/2))))))]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoSSC1 () Real) (assert (and (<= (* skoXC1 (+ (- 144.) (* skoXC1 (+ (- 58.) (* skoXC1 (+ (- 4.) (* skoXC1 (/ 3. 8.)))))))) 96.) (and (not (<= (* skoXC1 (+ 24. (* skoXC1 (+ 10. skoXC1)))) (- 16.))) (and (= (* skoXC1 skoXC1) (+ 1. (* skoSSC1 (* skoSSC1 (- 1.))))) (and (<= 0. skoXC1) (and (<= 0. skoSSC1) (and (not (<= 1. skoXC1)) (not (<= (* skoXC1 (+ (+ (/ (- 528.) 125.) (* skoSSC1 (/ 486. 125.))) (* skoXC1 (+ (+ (/ 512. 125.) (* skoSSC1 (/ (- 119.) 125.))) (* skoXC1 (/ 1. 2.)))))) (+ (/ 6. 25.) (* skoSSC1 (/ 3. 25.))))))))))))
-----[end problem]-----

