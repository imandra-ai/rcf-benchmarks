-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1,skoZC1}, ForAll[{}, And[Or[0>skoXC1,skoZC1*((-182079/100000)+skoXC1+skoYC1*(1+skoXC1*((182079/100000)+skoXC1*-1)+skoYC1*skoXC1*-1))>-1+skoXC1*((182079/100000)+skoXC1*-1)+skoYC1*((182079/100000)+skoXC1*-1+skoYC1*-1),skoZC1*(1+skoYC1*skoXC1*-1)<=1+skoXC1*-1+skoYC1*(-1+skoXC1*-1)],skoZC1>0,skoXC1>-1,1>skoYC1,skoYC1>skoXC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) (E skoZC1) [[[skoXC1<0]\/[[((-1+(skoXC1 (182079/100000+(skoXC1 (-1)))))+(skoYC1 ((182079/100000+(skoXC1 (-1)))+(skoYC1 (-1)))))<(skoZC1 ((-182079/100000+skoXC1)+(skoYC1 ((1+(skoXC1 (182079/100000+(skoXC1 (-1)))))+(skoYC1 skoXC1 (-1))))))]\/[(skoZC1 (1+(skoYC1 skoXC1 (-1))))<=((1+(skoXC1 (-1)))+(skoYC1 (-1+(skoXC1 (-1)))))]]]/\[[0<skoZC1]/\[[-1<skoXC1]/\[[skoYC1<1]/\[skoXC1<skoYC1]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoZC1 () Real) (assert (and (or (not (<= 0. skoXC1)) (or (not (<= (* skoZC1 (+ (+ (/ (- 182079.) 100000.) skoXC1) (* skoYC1 (+ (+ 1. (* skoXC1 (+ (/ 182079. 100000.) (* skoXC1 (- 1.))))) (* skoYC1 (* skoXC1 (- 1.))))))) (+ (+ (- 1.) (* skoXC1 (+ (/ 182079. 100000.) (* skoXC1 (- 1.))))) (* skoYC1 (+ (+ (/ 182079. 100000.) (* skoXC1 (- 1.))) (* skoYC1 (- 1.))))))) (<= (* skoZC1 (+ 1. (* skoYC1 (* skoXC1 (- 1.))))) (+ (+ 1. (* skoXC1 (- 1.))) (* skoYC1 (+ (- 1.) (* skoXC1 (- 1.)))))))) (and (not (<= skoZC1 0.)) (and (not (<= skoXC1 (- 1.))) (and (not (<= 1. skoYC1)) (not (<= skoYC1 skoXC1)))))))
-----[end problem]-----

