-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,pi}, ForAll[{}, And[skoXC1*(Pi*Pi*Pi*Pi*Pi*Pi*Pi*Pi*Pi*Pi*Pi*Pi*1296+skoXC1*skoXC1*(Pi*Pi*Pi*Pi*Pi*Pi*Pi*Pi*Pi*Pi*-3528+skoXC1*skoXC1*(Pi*Pi*Pi*Pi*Pi*Pi*Pi*Pi*3409+skoXC1*skoXC1*(Pi*Pi*Pi*Pi*Pi*Pi*-1444+skoXC1*skoXC1*(Pi*Pi*Pi*Pi*294+skoXC1*skoXC1*(Pi*Pi*-28+skoXC1*skoXC1))))))>0,Pi>(15707963/5000000),(31415927/10000000)>Pi,Pi*(1/2)>skoXC1,skoXC1>0]]], Reals]]

% In QepcadB format:
(E skoXC1) (E pi) [[0<(skoXC1 ((pi pi pi pi pi pi pi pi pi pi pi pi (1296))+(skoXC1 skoXC1 ((pi pi pi pi pi pi pi pi pi pi (-3528))+(skoXC1 skoXC1 ((pi pi pi pi pi pi pi pi (3409))+(skoXC1 skoXC1 ((pi pi pi pi pi pi (-1444))+(skoXC1 skoXC1 ((pi pi pi pi (294))+(skoXC1 skoXC1 ((pi pi (-28))+(skoXC1 skoXC1)))))))))))))]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[skoXC1<(pi (1/2))]/\[0<skoXC1]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (not (<= (* skoXC1 (+ (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi 1296.)))))))))))) (* skoXC1 (* skoXC1 (+ (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (- 3528.))))))))))) (* skoXC1 (* skoXC1 (+ (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi 3409.)))))))) (* skoXC1 (* skoXC1 (+ (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi (- 1444.))))))) (* skoXC1 (* skoXC1 (+ (* metit_our_pi (* metit_our_pi (* metit_our_pi (* metit_our_pi 294.)))) (* skoXC1 (* skoXC1 (+ (* metit_our_pi (* metit_our_pi (- 28.))) (* skoXC1 skoXC1)))))))))))))))))) 0.)) (and (not (<= metit_our_pi (/ 15707963. 5000000.))) (and (not (<= (/ 31415927. 10000000.) metit_our_pi)) (and (not (<= (* metit_our_pi (/ 1. 2.)) skoXC1)) (not (<= skoXC1 0.)))))))
-----[end problem]-----

