-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[skoXC1*skoXC1*((1/2)+skoXC1*skoXC1*(-1/24))>1,skoYC1*(skoXC1*skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(1/24))+skoYC1*(skoXC1*skoXC1*((-1/4)+skoXC1*skoXC1*(1/48))+skoYC1*(skoXC1*((-1/6)+skoXC1*skoXC1*(-1/12))+skoYC1*((-1/24)+skoXC1*skoXC1*(1/48)+skoYC1*(skoXC1*(1/24)+skoYC1*(1/144))))))>(-3/5)+skoXC1*skoXC1*skoXC1*skoXC1*((1/24)+skoXC1*skoXC1*((-1/48)+skoXC1*skoXC1*(1/576))),skoYC1*(skoXC1+skoYC1*(1/2))>1+skoXC1*skoXC1*(-1/2),1>skoXC1,1>skoYC1,skoXC1>-1,skoYC1>-1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[1<(skoXC1 skoXC1 (1/2+(skoXC1 skoXC1 (-1/24))))]/\[[(-3/5+(skoXC1 skoXC1 skoXC1 skoXC1 (1/24+(skoXC1 skoXC1 (-1/48+(skoXC1 skoXC1 (1/576)))))))<(skoYC1 ((skoXC1 skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (1/24))))+(skoYC1 ((skoXC1 skoXC1 (-1/4+(skoXC1 skoXC1 (1/48))))+(skoYC1 ((skoXC1 (-1/6+(skoXC1 skoXC1 (-1/12))))+(skoYC1 ((-1/24+(skoXC1 skoXC1 (1/48)))+(skoYC1 ((skoXC1 (1/24))+(skoYC1 (1/144))))))))))))]/\[[(1+(skoXC1 skoXC1 (-1/2)))<(skoYC1 (skoXC1+(skoYC1 (1/2))))]/\[[skoXC1<1]/\[[skoYC1<1]/\[[-1<skoXC1]/\[-1<skoYC1]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (not (<= (* skoXC1 (* skoXC1 (+ (/ 1. 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 24.)))))) 1.)) (and (not (<= (* skoYC1 (+ (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ 1. 24.))))))) (* skoYC1 (+ (* skoXC1 (* skoXC1 (+ (/ (- 1.) 4.) (* skoXC1 (* skoXC1 (/ 1. 48.)))))) (* skoYC1 (+ (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 1.) 12.))))) (* skoYC1 (+ (+ (/ (- 1.) 24.) (* skoXC1 (* skoXC1 (/ 1. 48.)))) (* skoYC1 (+ (* skoXC1 (/ 1. 24.)) (* skoYC1 (/ 1. 144.)))))))))))) (+ (/ (- 3.) 5.) (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 1. 24.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 48.) (* skoXC1 (* skoXC1 (/ 1. 576.)))))))))))))) (and (not (<= (* skoYC1 (+ skoXC1 (* skoYC1 (/ 1. 2.)))) (+ 1. (* skoXC1 (* skoXC1 (/ (- 1.) 2.)))))) (and (not (<= 1. skoXC1)) (and (not (<= 1. skoYC1)) (and (not (<= skoXC1 (- 1.))) (not (<= skoYC1 (- 1.))))))))))
-----[end problem]-----

