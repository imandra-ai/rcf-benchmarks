-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoSQ3C1,pi}, ForAll[{}, And[skoXC1*skoXC1*(skoSQ3C1*skoSQ3C1*skoSQ3C1*skoSQ3C1*(1/2)+skoXC1*skoXC1*(skoSQ3C1*skoSQ3C1*(-1/24)+skoXC1*skoXC1*(1/720)))>skoSQ3C1*skoSQ3C1*skoSQ3C1*skoSQ3C1*3,(-1/10000000)+Pi*(1/2)>skoXC1,Pi>(15707963/5000000),(31415927/10000000)>Pi,skoXC1>0,skoSQ3C1>0]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoSQ3C1) (E pi) [[(skoSQ3C1 skoSQ3C1 skoSQ3C1 skoSQ3C1 (3))<(skoXC1 skoXC1 ((skoSQ3C1 skoSQ3C1 skoSQ3C1 skoSQ3C1 (1/2))+(skoXC1 skoXC1 ((skoSQ3C1 skoSQ3C1 (-1/24))+(skoXC1 skoXC1 (1/720))))))]/\[[skoXC1<(-1/10000000+(pi (1/2)))]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<skoXC1]/\[0<skoSQ3C1]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoSQ3C1 () Real) (declare-fun metit_our_pi () Real) (assert (and (not (<= (* skoXC1 (* skoXC1 (+ (* skoSQ3C1 (* skoSQ3C1 (* skoSQ3C1 (* skoSQ3C1 (/ 1. 2.))))) (* skoXC1 (* skoXC1 (+ (* skoSQ3C1 (* skoSQ3C1 (/ (- 1.) 24.))) (* skoXC1 (* skoXC1 (/ 1. 720.))))))))) (* skoSQ3C1 (* skoSQ3C1 (* skoSQ3C1 (* skoSQ3C1 3.)))))) (and (not (<= (+ (/ (- 1.) 10000000.) (* metit_our_pi (/ 1. 2.))) skoXC1)) (and (not (<= metit_our_pi (/ 15707963. 5000000.))) (and (not (<= (/ 31415927. 10000000.) metit_our_pi)) (and (not (<= skoXC1 0.)) (not (<= skoSQ3C1 0.))))))))
-----[end problem]-----

