-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoAC1}, ForAll[{}, And[skoAC1*(-11+skoAC1*(-6+skoAC1*-1))<=6,skoAC1*(11+skoAC1*(6+skoAC1))<=-6,skoXC1*skoXC1*(15+skoAC1*((73/2)+skoAC1*(28+skoAC1*(13/2)))+skoXC1*skoXC1*((-35/4)+skoAC1*((-517/24)+skoAC1*((-101/6)+skoAC1*(-97/24)))+skoXC1*skoXC1*((55/24)+skoAC1*((4093/720)+skoAC1*((809/180)+skoAC1*(793/720)))+skoXC1*skoXC1*((-463/1344)+skoAC1*((-34597/40320)+skoAC1*((-983/1440)+skoAC1*(-6817/40320)))+skoXC1*skoXC1*((577/17280)+skoAC1*((302413/3628800)+skoAC1*((60329/907200)+skoAC1*(60073/3628800)))+skoXC1*skoXC1*((-35839/15966720)+skoAC1*((-2685877/479001600)+skoAC1*((-536561/119750400)+skoAC1*(-535537/479001600)))+skoXC1*skoXC1*((320503/2905943040)+skoAC1*((2184503/7925299200)+skoAC1*((686207/3113510400)+skoAC1*(369181/6706022400))))))))))>11+skoAC1*(23+skoAC1*(15+skoAC1*3)),skoXC1>(-5/2),skoAC1>-1,(5/2)>skoXC1,1>skoAC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoAC1) [[(skoAC1 (-11+(skoAC1 (-6+(skoAC1 (-1))))))<=6]/\[[(skoAC1 (11+(skoAC1 (6+skoAC1))))<=-6]/\[[(11+(skoAC1 (23+(skoAC1 (15+(skoAC1 (3)))))))<(skoXC1 skoXC1 ((15+(skoAC1 (73/2+(skoAC1 (28+(skoAC1 (13/2)))))))+(skoXC1 skoXC1 ((-35/4+(skoAC1 (-517/24+(skoAC1 (-101/6+(skoAC1 (-97/24)))))))+(skoXC1 skoXC1 ((55/24+(skoAC1 (4093/720+(skoAC1 (809/180+(skoAC1 (793/720)))))))+(skoXC1 skoXC1 ((-463/1344+(skoAC1 (-34597/40320+(skoAC1 (-983/1440+(skoAC1 (-6817/40320)))))))+(skoXC1 skoXC1 ((577/17280+(skoAC1 (302413/3628800+(skoAC1 (60329/907200+(skoAC1 (60073/3628800)))))))+(skoXC1 skoXC1 ((-35839/15966720+(skoAC1 (-2685877/479001600+(skoAC1 (-536561/119750400+(skoAC1 (-535537/479001600)))))))+(skoXC1 skoXC1 (320503/2905943040+(skoAC1 (2184503/7925299200+(skoAC1 (686207/3113510400+(skoAC1 (369181/6706022400))))))))))))))))))))]/\[[-5/2<skoXC1]/\[[-1<skoAC1]/\[[skoXC1<5/2]/\[skoAC1<1]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoAC1 (+ (- 11.) (* skoAC1 (+ (- 6.) (* skoAC1 (- 1.)))))) 6.) (and (<= (* skoAC1 (+ 11. (* skoAC1 (+ 6. skoAC1)))) (- 6.)) (and (not (<= (* skoXC1 (* skoXC1 (+ (+ 15. (* skoAC1 (+ (/ 73. 2.) (* skoAC1 (+ 28. (* skoAC1 (/ 13. 2.))))))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 35.) 4.) (* skoAC1 (+ (/ (- 517.) 24.) (* skoAC1 (+ (/ (- 101.) 6.) (* skoAC1 (/ (- 97.) 24.))))))) (* skoXC1 (* skoXC1 (+ (+ (/ 55. 24.) (* skoAC1 (+ (/ 4093. 720.) (* skoAC1 (+ (/ 809. 180.) (* skoAC1 (/ 793. 720.))))))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 463.) 1344.) (* skoAC1 (+ (/ (- 34597.) 40320.) (* skoAC1 (+ (/ (- 983.) 1440.) (* skoAC1 (/ (- 6817.) 40320.))))))) (* skoXC1 (* skoXC1 (+ (+ (/ 577. 17280.) (* skoAC1 (+ (/ 302413. 3628800.) (* skoAC1 (+ (/ 60329. 907200.) (* skoAC1 (/ 60073. 3628800.))))))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 35839.) 15966720.) (* skoAC1 (+ (/ (- 2685877.) 479001600.) (* skoAC1 (+ (/ (- 536561.) 119750400.) (* skoAC1 (/ (- 535537.) 479001600.))))))) (* skoXC1 (* skoXC1 (+ (/ 320503. 2905943040.) (* skoAC1 (+ (/ 2184503. 7925299200.) (* skoAC1 (+ (/ 686207. 3113510400.) (* skoAC1 (/ 369181. 6706022400.))))))))))))))))))))))))))) (+ 11. (* skoAC1 (+ 23. (* skoAC1 (+ 15. (* skoAC1 3.)))))))) (and (not (<= skoXC1 (/ (- 5.) 2.))) (and (not (<= skoAC1 (- 1.))) (and (not (<= (/ 5. 2.) skoXC1)) (not (<= 1. skoAC1)))))))))
-----[end problem]-----

