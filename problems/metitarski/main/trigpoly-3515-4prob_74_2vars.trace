-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoAC1}, ForAll[{}, And[skoXC1*skoXC1*(120+skoAC1*(322+skoAC1*(302+skoAC1*(115+skoAC1*15)))+skoXC1*skoXC1*(-100+skoAC1*((-835/3)+skoAC1*((-815/3)+skoAC1*((-1297/12)+skoAC1*(-59/4))))+skoXC1*skoXC1*((130/3)+skoAC1*((10963/90)+skoAC1*((5419/45)+skoAC1*((3509/72)+skoAC1*(163/24))))+skoXC1*skoXC1*((-8/105)+skoAC1*((-62/315)+skoAC1*((-6/35)+skoAC1*((-2/35)+skoAC1*(-2/315))))+skoXC1*skoXC1*((16/4725)+skoAC1*((124/14175)+skoAC1*((4/525)+skoAC1*((4/1575)+skoAC1*(4/14175))))+skoXC1*skoXC1*((-16/155925)+skoAC1*((-124/467775)+skoAC1*((-4/17325)+skoAC1*((-4/51975)+skoAC1*(-4/467775))))+skoXC1*skoXC1*((32/14189175)+skoAC1*((248/42567525)+skoAC1*((8/1576575)+skoAC1*((8/4729725)+skoAC1*(8/42567525)))))))))))<=74+skoAC1*(170+skoAC1*(135+skoAC1*(44+skoAC1*5))),skoXC1>(-3/2),skoAC1>-1,(3/2)>skoXC1,1>skoAC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoAC1) [[(skoXC1 skoXC1 ((120+(skoAC1 (322+(skoAC1 (302+(skoAC1 (115+(skoAC1 (15)))))))))+(skoXC1 skoXC1 ((-100+(skoAC1 (-835/3+(skoAC1 (-815/3+(skoAC1 (-1297/12+(skoAC1 (-59/4)))))))))+(skoXC1 skoXC1 ((130/3+(skoAC1 (10963/90+(skoAC1 (5419/45+(skoAC1 (3509/72+(skoAC1 (163/24)))))))))+(skoXC1 skoXC1 ((-8/105+(skoAC1 (-62/315+(skoAC1 (-6/35+(skoAC1 (-2/35+(skoAC1 (-2/315)))))))))+(skoXC1 skoXC1 ((16/4725+(skoAC1 (124/14175+(skoAC1 (4/525+(skoAC1 (4/1575+(skoAC1 (4/14175)))))))))+(skoXC1 skoXC1 ((-16/155925+(skoAC1 (-124/467775+(skoAC1 (-4/17325+(skoAC1 (-4/51975+(skoAC1 (-4/467775)))))))))+(skoXC1 skoXC1 (32/14189175+(skoAC1 (248/42567525+(skoAC1 (8/1576575+(skoAC1 (8/4729725+(skoAC1 (8/42567525))))))))))))))))))))))<=(74+(skoAC1 (170+(skoAC1 (135+(skoAC1 (44+(skoAC1 (5)))))))))]/\[[-3/2<skoXC1]/\[[-1<skoAC1]/\[[skoXC1<3/2]/\[skoAC1<1]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (+ 120. (* skoAC1 (+ 322. (* skoAC1 (+ 302. (* skoAC1 (+ 115. (* skoAC1 15.)))))))) (* skoXC1 (* skoXC1 (+ (+ (- 100.) (* skoAC1 (+ (/ (- 835.) 3.) (* skoAC1 (+ (/ (- 815.) 3.) (* skoAC1 (+ (/ (- 1297.) 12.) (* skoAC1 (/ (- 59.) 4.))))))))) (* skoXC1 (* skoXC1 (+ (+ (/ 130. 3.) (* skoAC1 (+ (/ 10963. 90.) (* skoAC1 (+ (/ 5419. 45.) (* skoAC1 (+ (/ 3509. 72.) (* skoAC1 (/ 163. 24.))))))))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 8.) 105.) (* skoAC1 (+ (/ (- 62.) 315.) (* skoAC1 (+ (/ (- 6.) 35.) (* skoAC1 (+ (/ (- 2.) 35.) (* skoAC1 (/ (- 2.) 315.))))))))) (* skoXC1 (* skoXC1 (+ (+ (/ 16. 4725.) (* skoAC1 (+ (/ 124. 14175.) (* skoAC1 (+ (/ 4. 525.) (* skoAC1 (+ (/ 4. 1575.) (* skoAC1 (/ 4. 14175.))))))))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 16.) 155925.) (* skoAC1 (+ (/ (- 124.) 467775.) (* skoAC1 (+ (/ (- 4.) 17325.) (* skoAC1 (+ (/ (- 4.) 51975.) (* skoAC1 (/ (- 4.) 467775.))))))))) (* skoXC1 (* skoXC1 (+ (/ 32. 14189175.) (* skoAC1 (+ (/ 248. 42567525.) (* skoAC1 (+ (/ 8. 1576575.) (* skoAC1 (+ (/ 8. 4729725.) (* skoAC1 (/ 8. 42567525.))))))))))))))))))))))))))))) (+ 74. (* skoAC1 (+ 170. (* skoAC1 (+ 135. (* skoAC1 (+ 44. (* skoAC1 5.))))))))) (and (not (<= skoXC1 (/ (- 3.) 2.))) (and (not (<= skoAC1 (- 1.))) (and (not (<= (/ 3. 2.) skoXC1)) (not (<= 1. skoAC1)))))))
-----[end problem]-----

