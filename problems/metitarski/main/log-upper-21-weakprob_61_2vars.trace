-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoYC1}, ForAll[{}, And[skoXC1<=0,skoYC1*((-1/4)+skoXC1*((-35/3)+skoXC1*((-85/2)+skoXC1*-35)))>skoXC1*(-4+skoXC1*(-30+skoXC1*(-60+skoXC1*-35))),skoYC1*((-1/3)+skoXC1*(-7+skoXC1*-10))<=skoXC1*(-3+skoXC1*(-12+skoXC1*-10)),skoYC1*((-1/2)+skoXC1*-3)<=skoXC1*(-2+skoXC1*-3),skoYC1*skoYC1==skoXC1*(1+skoXC1),0<=skoYC1,skoXC1>(3/10000)]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoYC1) [[skoXC1<=0]/\[[(skoXC1 (-4+(skoXC1 (-30+(skoXC1 (-60+(skoXC1 (-35))))))))<(skoYC1 (-1/4+(skoXC1 (-35/3+(skoXC1 (-85/2+(skoXC1 (-35))))))))]/\[[(skoYC1 (-1/3+(skoXC1 (-7+(skoXC1 (-10))))))<=(skoXC1 (-3+(skoXC1 (-12+(skoXC1 (-10))))))]/\[[(skoYC1 (-1/2+(skoXC1 (-3))))<=(skoXC1 (-2+(skoXC1 (-3))))]/\[[(skoYC1 skoYC1)=(skoXC1 (1+skoXC1))]/\[[0<=skoYC1]/\[3/10000<skoXC1]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (assert (and (<= skoXC1 0.) (and (not (<= (* skoYC1 (+ (/ (- 1.) 4.) (* skoXC1 (+ (/ (- 35.) 3.) (* skoXC1 (+ (/ (- 85.) 2.) (* skoXC1 (- 35.)))))))) (* skoXC1 (+ (- 4.) (* skoXC1 (+ (- 30.) (* skoXC1 (+ (- 60.) (* skoXC1 (- 35.)))))))))) (and (<= (* skoYC1 (+ (/ (- 1.) 3.) (* skoXC1 (+ (- 7.) (* skoXC1 (- 10.)))))) (* skoXC1 (+ (- 3.) (* skoXC1 (+ (- 12.) (* skoXC1 (- 10.))))))) (and (<= (* skoYC1 (+ (/ (- 1.) 2.) (* skoXC1 (- 3.)))) (* skoXC1 (+ (- 2.) (* skoXC1 (- 3.))))) (and (= (* skoYC1 skoYC1) (* skoXC1 (+ 1. skoXC1))) (and (<= 0. skoYC1) (not (<= skoXC1 (/ 3. 10000.))))))))))
-----[end problem]-----

