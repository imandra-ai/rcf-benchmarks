-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1,skoBC1}, ForAll[{}, And[skoTC1*skoTC1*(skoAC1*skoAC1*-1+skoBC1*skoBC1*-1+skoTC1*skoTC1*-1)>1+skoBC1*skoBC1*skoAC1*skoAC1,skoTC1*(skoBC1*skoBC1*skoAC1*skoAC1*skoAC1*(157079/50000)+skoTC1*(skoAC1*skoAC1+skoBC1*(skoAC1*(-1+skoAC1*skoAC1*2)+skoBC1*(skoAC1*skoAC1*(2+skoAC1*(2+skoAC1))+skoBC1*skoAC1*(2+skoAC1*skoAC1*-1)))+skoTC1*(skoAC1*skoAC1*skoAC1*(157079/50000)+skoBC1*skoBC1*skoAC1*(157079/50000)+skoTC1*(skoAC1*skoAC1*(2+skoAC1*(2+skoAC1))+skoBC1*(skoAC1*(2+skoAC1*skoAC1*-1)+skoBC1*(2+skoAC1*(2+skoAC1)+skoBC1*skoAC1*-1))+skoTC1*(skoAC1*(157079/50000)+skoTC1*(2+skoAC1*(2+skoAC1)+skoBC1*skoAC1*-1))))))>skoBC1*skoBC1*skoBC1*skoAC1*skoAC1*skoAC1*-2,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1]]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) (E skoBC1) [[(1+(skoBC1 skoBC1 skoAC1 skoAC1))<(skoTC1 skoTC1 (((skoAC1 skoAC1 (-1))+(skoBC1 skoBC1 (-1)))+(skoTC1 skoTC1 (-1))))]/\[[(skoBC1 skoBC1 skoBC1 skoAC1 skoAC1 skoAC1 (-2))<(skoTC1 ((skoBC1 skoBC1 skoAC1 skoAC1 skoAC1 (157079/50000))+(skoTC1 (((skoAC1 skoAC1)+(skoBC1 ((skoAC1 (-1+(skoAC1 skoAC1 (2))))+(skoBC1 ((skoAC1 skoAC1 (2+(skoAC1 (2+skoAC1))))+(skoBC1 skoAC1 (2+(skoAC1 skoAC1 (-1)))))))))+(skoTC1 (((skoAC1 skoAC1 skoAC1 (157079/50000))+(skoBC1 skoBC1 skoAC1 (157079/50000)))+(skoTC1 (((skoAC1 skoAC1 (2+(skoAC1 (2+skoAC1))))+(skoBC1 ((skoAC1 (2+(skoAC1 skoAC1 (-1))))+(skoBC1 ((2+(skoAC1 (2+skoAC1)))+(skoBC1 skoAC1 (-1)))))))+(skoTC1 ((skoAC1 (157079/50000))+(skoTC1 ((2+(skoAC1 (2+skoAC1)))+(skoBC1 skoAC1 (-1))))))))))))))]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[skoAC1<skoBC1]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoBC1 () Real) (assert (and (not (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (+ 1. (* skoBC1 (* skoBC1 (* skoAC1 skoAC1)))))) (and (not (<= (* skoTC1 (+ (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (* skoAC1 (/ 157079. 50000.)))))) (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 (+ (* skoAC1 (+ (- 1.) (* skoAC1 (* skoAC1 2.)))) (* skoBC1 (+ (* skoAC1 (* skoAC1 (+ 2. (* skoAC1 (+ 2. skoAC1))))) (* skoBC1 (* skoAC1 (+ 2. (* skoAC1 (* skoAC1 (- 1.))))))))))) (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (* skoAC1 (/ 157079. 50000.)))) (* skoBC1 (* skoBC1 (* skoAC1 (/ 157079. 50000.))))) (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (+ 2. (* skoAC1 (+ 2. skoAC1))))) (* skoBC1 (+ (* skoAC1 (+ 2. (* skoAC1 (* skoAC1 (- 1.))))) (* skoBC1 (+ (+ 2. (* skoAC1 (+ 2. skoAC1))) (* skoBC1 (* skoAC1 (- 1.)))))))) (* skoTC1 (+ (* skoAC1 (/ 157079. 50000.)) (* skoTC1 (+ (+ 2. (* skoAC1 (+ 2. skoAC1))) (* skoBC1 (* skoAC1 (- 1.))))))))))))))) (* skoBC1 (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (* skoAC1 (- 2.))))))))) (and (not (<= skoTC1 (/ 3. 2.))) (and (not (<= skoAC1 0.)) (and (not (<= 2. skoBC1)) (not (<= skoBC1 skoAC1))))))))
-----[end problem]-----

