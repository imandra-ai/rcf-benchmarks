-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoSXC1}, ForAll[{}, And[skoXC1*(-192+skoSXC1*192+skoXC1*(144+skoSXC1*-216+skoXC1*(180+skoSXC1*36+skoXC1*(-165+skoSXC1*(21/2)+skoXC1*((111/4)+skoSXC1*(-3/4)+skoXC1*(-3/8))))))>0,skoXC1*skoXC1==1+skoSXC1*skoSXC1*-1,skoXC1<=1,0<=skoSXC1,skoXC1>0]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoSXC1) [[0<(skoXC1 ((-192+(skoSXC1 (192)))+(skoXC1 ((144+(skoSXC1 (-216)))+(skoXC1 ((180+(skoSXC1 (36)))+(skoXC1 ((-165+(skoSXC1 (21/2)))+(skoXC1 ((111/4+(skoSXC1 (-3/4)))+(skoXC1 (-3/8))))))))))))]/\[[(skoXC1 skoXC1)=(1+(skoSXC1 skoSXC1 (-1)))]/\[[skoXC1<=1]/\[[0<=skoSXC1]/\[0<skoXC1]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoSXC1 () Real) (assert (and (not (<= (* skoXC1 (+ (+ (- 192.) (* skoSXC1 192.)) (* skoXC1 (+ (+ 144. (* skoSXC1 (- 216.))) (* skoXC1 (+ (+ 180. (* skoSXC1 36.)) (* skoXC1 (+ (+ (- 165.) (* skoSXC1 (/ 21. 2.))) (* skoXC1 (+ (+ (/ 111. 4.) (* skoSXC1 (/ (- 3.) 4.))) (* skoXC1 (/ (- 3.) 8.)))))))))))) 0.)) (and (= (* skoXC1 skoXC1) (+ 1. (* skoSXC1 (* skoSXC1 (- 1.))))) (and (<= skoXC1 1.) (and (<= 0. skoSXC1) (not (<= skoXC1 0.)))))))
-----[end problem]-----

