-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,pi}, ForAll[{}, And[skoXC1*skoXC1*skoXC1*(-4+Pi*Pi*(2/3)+skoXC1*skoXC1*((4/3)+Pi*Pi*(-13/45)+skoXC1*skoXC1*((-8/45)+Pi*Pi*(13/315)+skoXC1*skoXC1*((4/315)+Pi*Pi*(-787/259200)+skoXC1*skoXC1*((-251/453600)+Pi*Pi*(1007/7484400)+skoXC1*skoXC1*((227/14968800)+Pi*Pi*(-3247/871782912)+skoXC1*skoXC1*((-1453/5448643200)+Pi*Pi*(3077/46702656000)+skoXC1*skoXC1*((2/638512875)+Pi*Pi*(-1741/2241727488000)+skoXC1*skoXC1*((-101/3923023104000)+Pi*Pi*(251/39230231040000)+skoXC1*skoXC1*((1/6538371840000)+Pi*Pi*(-251/6590678814720000)+skoXC1*skoXC1*((-1/1647669703680000)+Pi*Pi*(1/6590678814720000))))))))))))>0,skoXC1*skoXC1*(4+Pi*Pi*(-5/6)+skoXC1*skoXC1*((-2/3)+Pi*Pi*(19/120)+skoXC1*skoXC1*((1/30)+Pi*Pi*(-41/5040)+skoXC1*skoXC1*((-1/1260)+Pi*Pi*(1/5040)))))>Pi*Pi,(-1/1000000000000)+Pi*(1/2)>skoXC1,Pi>(15707963/5000000),(31415927/10000000)>Pi,skoXC1>0]]], Reals]]

% In QepcadB format:
(E skoXC1) (E pi) [[0<(skoXC1 skoXC1 skoXC1 ((-4+(pi pi (2/3)))+(skoXC1 skoXC1 ((4/3+(pi pi (-13/45)))+(skoXC1 skoXC1 ((-8/45+(pi pi (13/315)))+(skoXC1 skoXC1 ((4/315+(pi pi (-787/259200)))+(skoXC1 skoXC1 ((-251/453600+(pi pi (1007/7484400)))+(skoXC1 skoXC1 ((227/14968800+(pi pi (-3247/871782912)))+(skoXC1 skoXC1 ((-1453/5448643200+(pi pi (3077/46702656000)))+(skoXC1 skoXC1 ((2/638512875+(pi pi (-1741/2241727488000)))+(skoXC1 skoXC1 ((-101/3923023104000+(pi pi (251/39230231040000)))+(skoXC1 skoXC1 ((1/6538371840000+(pi pi (-251/6590678814720000)))+(skoXC1 skoXC1 (-1/1647669703680000+(pi pi (1/6590678814720000))))))))))))))))))))))))]/\[[(pi pi)<(skoXC1 skoXC1 ((4+(pi pi (-5/6)))+(skoXC1 skoXC1 ((-2/3+(pi pi (19/120)))+(skoXC1 skoXC1 ((1/30+(pi pi (-41/5040)))+(skoXC1 skoXC1 (-1/1260+(pi pi (1/5040))))))))))]/\[[skoXC1<(-1/1000000000000+(pi (1/2)))]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[0<skoXC1]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (not (<= (* skoXC1 (* skoXC1 (* skoXC1 (+ (+ (- 4.) (* metit_our_pi (* metit_our_pi (/ 2. 3.)))) (* skoXC1 (* skoXC1 (+ (+ (/ 4. 3.) (* metit_our_pi (* metit_our_pi (/ (- 13.) 45.)))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 8.) 45.) (* metit_our_pi (* metit_our_pi (/ 13. 315.)))) (* skoXC1 (* skoXC1 (+ (+ (/ 4. 315.) (* metit_our_pi (* metit_our_pi (/ (- 787.) 259200.)))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 251.) 453600.) (* metit_our_pi (* metit_our_pi (/ 1007. 7484400.)))) (* skoXC1 (* skoXC1 (+ (+ (/ 227. 14968800.) (* metit_our_pi (* metit_our_pi (/ (- 3247.) 871782912.)))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 1453.) 5448643200.) (* metit_our_pi (* metit_our_pi (/ 3077. 46702656000.)))) (* skoXC1 (* skoXC1 (+ (+ (/ 2. 638512875.) (* metit_our_pi (* metit_our_pi (/ (- 1741.) 2241727488000.)))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 101.) 3923023104000.) (* metit_our_pi (* metit_our_pi (/ 251. 39230231040000.)))) (* skoXC1 (* skoXC1 (+ (+ (/ 1. 6538371840000.) (* metit_our_pi (* metit_our_pi (/ (- 251.) 6590678814720000.)))) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 1647669703680000.) (* metit_our_pi (* metit_our_pi (/ 1. 6590678814720000.))))))))))))))))))))))))))))))))))))) 0.)) (and (not (<= (* skoXC1 (* skoXC1 (+ (+ 4. (* metit_our_pi (* metit_our_pi (/ (- 5.) 6.)))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 2.) 3.) (* metit_our_pi (* metit_our_pi (/ 19. 120.)))) (* skoXC1 (* skoXC1 (+ (+ (/ 1. 30.) (* metit_our_pi (* metit_our_pi (/ (- 41.) 5040.)))) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 1260.) (* metit_our_pi (* metit_our_pi (/ 1. 5040.))))))))))))))) (* metit_our_pi metit_our_pi))) (and (not (<= (+ (/ (- 1.) 1000000000000.) (* metit_our_pi (/ 1. 2.))) skoXC1)) (and (not (<= metit_our_pi (/ 15707963. 5000000.))) (and (not (<= (/ 31415927. 10000000.) metit_our_pi)) (not (<= skoXC1 0.))))))))
-----[end problem]-----

