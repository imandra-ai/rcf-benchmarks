-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoAC1}, ForAll[{}, And[skoXC1*(3+skoXC1*(-6+skoXC1*(-1/3)))<=(-10/3),skoXC1*(-28+skoXC1*(-9+skoXC1*((20/3)+skoXC1*(1/4))))>(59/12),skoXC1*(-9+skoXC1*(3+skoXC1*(1/3)))>(13/3),4>skoXC1,skoAC1>0,skoXC1>0,skoXC1>1,skoXC1>2,skoXC1*skoXC1*(1/2)>(7/2)]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoAC1) [[(skoXC1 (3+(skoXC1 (-6+(skoXC1 (-1/3))))))<=-10/3]/\[[59/12<(skoXC1 (-28+(skoXC1 (-9+(skoXC1 (20/3+(skoXC1 (1/4))))))))]/\[[13/3<(skoXC1 (-9+(skoXC1 (3+(skoXC1 (1/3))))))]/\[[skoXC1<4]/\[[0<skoAC1]/\[[0<skoXC1]/\[[1<skoXC1]/\[[2<skoXC1]/\[7/2<(skoXC1 skoXC1 (1/2))]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoXC1 (+ 3. (* skoXC1 (+ (- 6.) (* skoXC1 (/ (- 1.) 3.)))))) (/ (- 10.) 3.)) (and (not (<= (* skoXC1 (+ (- 28.) (* skoXC1 (+ (- 9.) (* skoXC1 (+ (/ 20. 3.) (* skoXC1 (/ 1. 4.)))))))) (/ 59. 12.))) (and (not (<= (* skoXC1 (+ (- 9.) (* skoXC1 (+ 3. (* skoXC1 (/ 1. 3.)))))) (/ 13. 3.))) (and (not (<= 4. skoXC1)) (and (not (<= skoAC1 0.)) (and (not (<= skoXC1 0.)) (and (not (<= skoXC1 1.)) (and (not (<= skoXC1 2.)) (not (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) (/ 7. 2.))))))))))))
-----[end problem]-----

