-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoX1C1,skoX2C1}, ForAll[{}, And[skoX2C1*(-1+skoX2C1*skoX2C1*(1/6))>skoX1C1*((-1/100)+skoX1C1*skoX1C1*(1/600)),skoX2C1*skoX2C1*-1>-6,skoX1C1>0,skoX2C1>skoX1C1,Or[skoX2C1*(-1+skoX2C1*skoX2C1*(1/6))>skoX1C1*((-1/100)+skoX1C1*skoX1C1*(1/600)),skoX2C1*(1+skoX2C1*skoX2C1*(-1/6))>skoX1C1*((1/100)+skoX1C1*skoX1C1*(-1/600))]]]], Reals]]

% In QepcadB format:
(E skoX1C1) (E skoX2C1) [[(skoX1C1 (-1/100+(skoX1C1 skoX1C1 (1/600))))<(skoX2C1 (-1+(skoX2C1 skoX2C1 (1/6))))]/\[[-6<(skoX2C1 skoX2C1 (-1))]/\[[0<skoX1C1]/\[[skoX1C1<skoX2C1]/\[[(skoX1C1 (-1/100+(skoX1C1 skoX1C1 (1/600))))<(skoX2C1 (-1+(skoX2C1 skoX2C1 (1/6))))]\/[(skoX1C1 (1/100+(skoX1C1 skoX1C1 (-1/600))))<(skoX2C1 (1+(skoX2C1 skoX2C1 (-1/6))))]]]]]].

% In SMTLib2 format:
(declare-fun skoX1C1 () Real) (declare-fun skoX2C1 () Real) (assert (and (not (<= (* skoX2C1 (+ (- 1.) (* skoX2C1 (* skoX2C1 (/ 1. 6.))))) (* skoX1C1 (+ (/ (- 1.) 100.) (* skoX1C1 (* skoX1C1 (/ 1. 600.))))))) (and (not (<= (* skoX2C1 (* skoX2C1 (- 1.))) (- 6.))) (and (not (<= skoX1C1 0.)) (and (not (<= skoX2C1 skoX1C1)) (or (not (<= (* skoX2C1 (+ (- 1.) (* skoX2C1 (* skoX2C1 (/ 1. 6.))))) (* skoX1C1 (+ (/ (- 1.) 100.) (* skoX1C1 (* skoX1C1 (/ 1. 600.))))))) (not (<= (* skoX2C1 (+ 1. (* skoX2C1 (* skoX2C1 (/ (- 1.) 6.))))) (* skoX1C1 (+ (/ 1. 100.) (* skoX1C1 (* skoX1C1 (/ (- 1.) 600.)))))))))))))
-----[end problem]-----

