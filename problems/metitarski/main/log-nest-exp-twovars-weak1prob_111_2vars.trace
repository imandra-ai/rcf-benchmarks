-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,skoXC1}, ForAll[{}, And[skoYC1<=(5/2),skoYC1*((5/2)+skoXC1*2+skoYC1)>(11/2)+skoXC1*5,skoYC1*(4+skoXC1*2)>3+skoXC1*5,skoYC1*(18+skoXC1*18+skoYC1*(-1+skoXC1*-7+skoYC1*(2+skoXC1)))>12+skoXC1*12,skoYC1*(1+skoXC1+skoYC1)>1+skoXC1,skoYC1*(1+skoXC1)>skoXC1,skoXC1>0,2>skoYC1]]], Reals]]

% In QepcadB format:
(E skoYC1) (E skoXC1) [[skoYC1<=5/2]/\[[(11/2+(skoXC1 (5)))<(skoYC1 ((5/2+(skoXC1 (2)))+skoYC1))]/\[[(3+(skoXC1 (5)))<(skoYC1 (4+(skoXC1 (2))))]/\[[(12+(skoXC1 (12)))<(skoYC1 ((18+(skoXC1 (18)))+(skoYC1 ((-1+(skoXC1 (-7)))+(skoYC1 (2+skoXC1))))))]/\[[(1+skoXC1)<(skoYC1 ((1+skoXC1)+skoYC1))]/\[[skoXC1<(skoYC1 (1+skoXC1))]/\[[0<skoXC1]/\[skoYC1<2]]]]]]]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (assert (and (<= skoYC1 (/ 5. 2.)) (and (not (<= (* skoYC1 (+ (+ (/ 5. 2.) (* skoXC1 2.)) skoYC1)) (+ (/ 11. 2.) (* skoXC1 5.)))) (and (not (<= (* skoYC1 (+ 4. (* skoXC1 2.))) (+ 3. (* skoXC1 5.)))) (and (not (<= (* skoYC1 (+ (+ 18. (* skoXC1 18.)) (* skoYC1 (+ (+ (- 1.) (* skoXC1 (- 7.))) (* skoYC1 (+ 2. skoXC1)))))) (+ 12. (* skoXC1 12.)))) (and (not (<= (* skoYC1 (+ (+ 1. skoXC1) skoYC1)) (+ 1. skoXC1))) (and (not (<= (* skoYC1 (+ 1. skoXC1)) skoXC1)) (and (not (<= skoXC1 0.)) (not (<= 2. skoYC1))))))))))
-----[end problem]-----

