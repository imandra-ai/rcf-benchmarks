-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoX1C1,skoX2C1}, ForAll[{}, And[skoX2C1*(-1+skoX2C1*skoX2C1*((1/6)+skoX2C1*skoX2C1*(-1/120)))<=skoX1C1*((1/10000)+skoX1C1*skoX1C1*((-1/60000)+skoX1C1*skoX1C1*(1/1200000))),skoX2C1*(1+skoX2C1*skoX2C1*((-1/6)+skoX2C1*skoX2C1*(1/120)))<=skoX1C1*((-1/10000)+skoX1C1*skoX1C1*((1/60000)+skoX1C1*skoX1C1*(-1/1200000))),skoX2C1*(skoX1C1*(1+skoX1C1*skoX1C1*((-1/6)+skoX1C1*skoX1C1*(1/120)))+skoX2C1*skoX2C1*(skoX1C1*((-1/6)+skoX1C1*skoX1C1*((1/36)+skoX1C1*skoX1C1*(-1/720)))+skoX2C1*skoX2C1*skoX1C1*((1/120)+skoX1C1*skoX1C1*((-1/720)+skoX1C1*skoX1C1*(1/14400)))))>0,skoX2C1*skoX2C1*-1>-6,skoX1C1>0,skoX2C1>skoX1C1]]], Reals]]

% In QepcadB format:
(E skoX1C1) (E skoX2C1) [[(skoX2C1 (-1+(skoX2C1 skoX2C1 (1/6+(skoX2C1 skoX2C1 (-1/120))))))<=(skoX1C1 (1/10000+(skoX1C1 skoX1C1 (-1/60000+(skoX1C1 skoX1C1 (1/1200000))))))]/\[[(skoX2C1 (1+(skoX2C1 skoX2C1 (-1/6+(skoX2C1 skoX2C1 (1/120))))))<=(skoX1C1 (-1/10000+(skoX1C1 skoX1C1 (1/60000+(skoX1C1 skoX1C1 (-1/1200000))))))]/\[[0<(skoX2C1 ((skoX1C1 (1+(skoX1C1 skoX1C1 (-1/6+(skoX1C1 skoX1C1 (1/120))))))+(skoX2C1 skoX2C1 ((skoX1C1 (-1/6+(skoX1C1 skoX1C1 (1/36+(skoX1C1 skoX1C1 (-1/720))))))+(skoX2C1 skoX2C1 skoX1C1 (1/120+(skoX1C1 skoX1C1 (-1/720+(skoX1C1 skoX1C1 (1/14400))))))))))]/\[[-6<(skoX2C1 skoX2C1 (-1))]/\[[0<skoX1C1]/\[skoX1C1<skoX2C1]]]]]].

% In SMTLib2 format:
(declare-fun skoX1C1 () Real) (declare-fun skoX2C1 () Real) (assert (and (<= (* skoX2C1 (+ (- 1.) (* skoX2C1 (* skoX2C1 (+ (/ 1. 6.) (* skoX2C1 (* skoX2C1 (/ (- 1.) 120.)))))))) (* skoX1C1 (+ (/ 1. 10000.) (* skoX1C1 (* skoX1C1 (+ (/ (- 1.) 60000.) (* skoX1C1 (* skoX1C1 (/ 1. 1200000.))))))))) (and (<= (* skoX2C1 (+ 1. (* skoX2C1 (* skoX2C1 (+ (/ (- 1.) 6.) (* skoX2C1 (* skoX2C1 (/ 1. 120.)))))))) (* skoX1C1 (+ (/ (- 1.) 10000.) (* skoX1C1 (* skoX1C1 (+ (/ 1. 60000.) (* skoX1C1 (* skoX1C1 (/ (- 1.) 1200000.))))))))) (and (not (<= (* skoX2C1 (+ (* skoX1C1 (+ 1. (* skoX1C1 (* skoX1C1 (+ (/ (- 1.) 6.) (* skoX1C1 (* skoX1C1 (/ 1. 120.)))))))) (* skoX2C1 (* skoX2C1 (+ (* skoX1C1 (+ (/ (- 1.) 6.) (* skoX1C1 (* skoX1C1 (+ (/ 1. 36.) (* skoX1C1 (* skoX1C1 (/ (- 1.) 720.)))))))) (* skoX2C1 (* skoX2C1 (* skoX1C1 (+ (/ 1. 120.) (* skoX1C1 (* skoX1C1 (+ (/ (- 1.) 720.) (* skoX1C1 (* skoX1C1 (/ 1. 14400.))))))))))))))) 0.)) (and (not (<= (* skoX2C1 (* skoX2C1 (- 1.))) (- 6.))) (and (not (<= skoX1C1 0.)) (not (<= skoX2C1 skoX1C1))))))))
-----[end problem]-----

