-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, ForAll[{}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))<=skoMC1*(-2+skoMC1*-5),skoMC1<=0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1]]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[skoMC1<=0]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[0<=skoSC1]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= skoMC1 0.) (and (not (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.)) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (<= 0. skoSC1)))))))
-----[end problem]-----

