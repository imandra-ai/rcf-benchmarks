-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoBC1,skoAC1}, ForAll[{}, And[skoBC1*(2+skoAC1*skoAC1*2+skoBC1*skoBC1*(2+skoAC1*skoAC1*2))<=0,skoAC1>1,Or[skoBC1*((-182079/50000)+skoAC1*skoAC1*((-182079/50000)+skoAC1)+skoBC1*(4+skoAC1*skoAC1*3+skoBC1*((-182079/50000)+skoAC1*(1+skoAC1*((-182079/50000)+skoAC1))+skoBC1*(1+skoAC1*skoAC1))))>-2+skoAC1*skoAC1*-2,skoBC1<=1],skoAC1>0,2>skoBC1,skoBC1>skoAC1]]], Reals]]

% In QepcadB format:
(E skoBC1) (E skoAC1) [[(skoBC1 ((2+(skoAC1 skoAC1 (2)))+(skoBC1 skoBC1 (2+(skoAC1 skoAC1 (2))))))<=0]/\[[1<skoAC1]/\[[[(-2+(skoAC1 skoAC1 (-2)))<(skoBC1 ((-182079/50000+(skoAC1 skoAC1 (-182079/50000+skoAC1)))+(skoBC1 ((4+(skoAC1 skoAC1 (3)))+(skoBC1 ((-182079/50000+(skoAC1 (1+(skoAC1 (-182079/50000+skoAC1)))))+(skoBC1 (1+(skoAC1 skoAC1)))))))))]\/[skoBC1<=1]]/\[[0<skoAC1]/\[[skoBC1<2]/\[skoAC1<skoBC1]]]]]].

% In SMTLib2 format:
(declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoBC1 (+ (+ 2. (* skoAC1 (* skoAC1 2.))) (* skoBC1 (* skoBC1 (+ 2. (* skoAC1 (* skoAC1 2.))))))) 0.) (and (not (<= skoAC1 1.)) (and (or (not (<= (* skoBC1 (+ (+ (/ (- 182079.) 50000.) (* skoAC1 (* skoAC1 (+ (/ (- 182079.) 50000.) skoAC1)))) (* skoBC1 (+ (+ 4. (* skoAC1 (* skoAC1 3.))) (* skoBC1 (+ (+ (/ (- 182079.) 50000.) (* skoAC1 (+ 1. (* skoAC1 (+ (/ (- 182079.) 50000.) skoAC1))))) (* skoBC1 (+ 1. (* skoAC1 skoAC1))))))))) (+ (- 2.) (* skoAC1 (* skoAC1 (- 2.)))))) (<= skoBC1 1.)) (and (not (<= skoAC1 0.)) (and (not (<= 2. skoBC1)) (not (<= skoBC1 skoAC1))))))))
-----[end problem]-----

