-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoYC1,skoXC1}, ForAll[{}, And[0<=skoYC1,1+skoXC1*-1>skoYC1,skoYC1*((-4/3)+skoXC1*(-8+skoXC1*(4/3))+skoYC1*((2/3)+skoXC1*(4/3)))>(-2/3)+skoXC1*((4/3)+skoXC1*(-2/3)),skoYC1>(1/100),skoXC1>(1/100),30>skoYC1,30>skoXC1]]], Reals]]

% In QepcadB format:
(E skoYC1) (E skoXC1) [[0<=skoYC1]/\[[skoYC1<(1+(skoXC1 (-1)))]/\[[(-2/3+(skoXC1 (4/3+(skoXC1 (-2/3)))))<(skoYC1 ((-4/3+(skoXC1 (-8+(skoXC1 (4/3)))))+(skoYC1 (2/3+(skoXC1 (4/3))))))]/\[[1/100<skoYC1]/\[[1/100<skoXC1]/\[[skoYC1<30]/\[skoXC1<30]]]]]]].

% In SMTLib2 format:
(declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (assert (and (<= 0. skoYC1) (and (not (<= (+ 1. (* skoXC1 (- 1.))) skoYC1)) (and (not (<= (* skoYC1 (+ (+ (/ (- 4.) 3.) (* skoXC1 (+ (- 8.) (* skoXC1 (/ 4. 3.))))) (* skoYC1 (+ (/ 2. 3.) (* skoXC1 (/ 4. 3.)))))) (+ (/ (- 2.) 3.) (* skoXC1 (+ (/ 4. 3.) (* skoXC1 (/ (- 2.) 3.))))))) (and (not (<= skoYC1 (/ 1. 100.))) (and (not (<= skoXC1 (/ 1. 100.))) (and (not (<= 30. skoYC1)) (not (<= 30. skoXC1)))))))))
-----[end problem]-----

