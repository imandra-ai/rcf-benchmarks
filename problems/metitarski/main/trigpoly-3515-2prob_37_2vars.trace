-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoAC1}, ForAll[{}, And[skoAC1*(-3+skoAC1*-1)>2,skoXC1*skoXC1*(-3+skoAC1*((-11/2)+skoAC1*(-5/2))+skoXC1*skoXC1*((3/4)+skoAC1*((35/24)+skoAC1*(17/24))+skoXC1*skoXC1*((-11/120)+skoAC1*((-131/720)+skoAC1*(-13/144))+skoXC1*skoXC1*((2/315)+skoAC1*((4/315)+skoAC1*(2/315))+skoXC1*skoXC1*((-4/14175)+skoAC1*((-8/14175)+skoAC1*(-4/14175))+skoXC1*skoXC1*((4/467775)+skoAC1*((8/467775)+skoAC1*(4/467775))+skoXC1*skoXC1*((-8/42567525)+skoAC1*((-16/42567525)+skoAC1*(-8/42567525))+skoXC1*skoXC1*((2/638512875)+skoAC1*((4/638512875)+skoAC1*(2/638512875))+skoXC1*skoXC1*((-4/97692469875)+skoAC1*((-8/97692469875)+skoAC1*(-4/97692469875))+skoXC1*skoXC1*((4/9280784638125)+skoAC1*((8/9280784638125)+skoAC1*(4/9280784638125))+skoXC1*skoXC1*((-8/2143861251406875)+skoAC1*((-16/2143861251406875)+skoAC1*(-8/2143861251406875)))))))))))))>-5+skoAC1*(-8+skoAC1*-3),skoXC1>(-314159/100000),skoAC1>-1,(314159/100000)>skoXC1]]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoAC1) [[2<(skoAC1 (-3+(skoAC1 (-1))))]/\[[(-5+(skoAC1 (-8+(skoAC1 (-3)))))<(skoXC1 skoXC1 ((-3+(skoAC1 (-11/2+(skoAC1 (-5/2)))))+(skoXC1 skoXC1 ((3/4+(skoAC1 (35/24+(skoAC1 (17/24)))))+(skoXC1 skoXC1 ((-11/120+(skoAC1 (-131/720+(skoAC1 (-13/144)))))+(skoXC1 skoXC1 ((2/315+(skoAC1 (4/315+(skoAC1 (2/315)))))+(skoXC1 skoXC1 ((-4/14175+(skoAC1 (-8/14175+(skoAC1 (-4/14175)))))+(skoXC1 skoXC1 ((4/467775+(skoAC1 (8/467775+(skoAC1 (4/467775)))))+(skoXC1 skoXC1 ((-8/42567525+(skoAC1 (-16/42567525+(skoAC1 (-8/42567525)))))+(skoXC1 skoXC1 ((2/638512875+(skoAC1 (4/638512875+(skoAC1 (2/638512875)))))+(skoXC1 skoXC1 ((-4/97692469875+(skoAC1 (-8/97692469875+(skoAC1 (-4/97692469875)))))+(skoXC1 skoXC1 ((4/9280784638125+(skoAC1 (8/9280784638125+(skoAC1 (4/9280784638125)))))+(skoXC1 skoXC1 (-8/2143861251406875+(skoAC1 (-16/2143861251406875+(skoAC1 (-8/2143861251406875))))))))))))))))))))))))))]/\[[-314159/100000<skoXC1]/\[[-1<skoAC1]/\[skoXC1<314159/100000]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoAC1 () Real) (assert (and (not (<= (* skoAC1 (+ (- 3.) (* skoAC1 (- 1.)))) 2.)) (and (not (<= (* skoXC1 (* skoXC1 (+ (+ (- 3.) (* skoAC1 (+ (/ (- 11.) 2.) (* skoAC1 (/ (- 5.) 2.))))) (* skoXC1 (* skoXC1 (+ (+ (/ 3. 4.) (* skoAC1 (+ (/ 35. 24.) (* skoAC1 (/ 17. 24.))))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 11.) 120.) (* skoAC1 (+ (/ (- 131.) 720.) (* skoAC1 (/ (- 13.) 144.))))) (* skoXC1 (* skoXC1 (+ (+ (/ 2. 315.) (* skoAC1 (+ (/ 4. 315.) (* skoAC1 (/ 2. 315.))))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 4.) 14175.) (* skoAC1 (+ (/ (- 8.) 14175.) (* skoAC1 (/ (- 4.) 14175.))))) (* skoXC1 (* skoXC1 (+ (+ (/ 4. 467775.) (* skoAC1 (+ (/ 8. 467775.) (* skoAC1 (/ 4. 467775.))))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 8.) 42567525.) (* skoAC1 (+ (/ (- 16.) 42567525.) (* skoAC1 (/ (- 8.) 42567525.))))) (* skoXC1 (* skoXC1 (+ (+ (/ 2. 638512875.) (* skoAC1 (+ (/ 4. 638512875.) (* skoAC1 (/ 2. 638512875.))))) (* skoXC1 (* skoXC1 (+ (+ (/ (- 4.) 97692469875.) (* skoAC1 (+ (/ (- 8.) 97692469875.) (* skoAC1 (/ (- 4.) 97692469875.))))) (* skoXC1 (* skoXC1 (+ (+ (/ 4. 9280784638125.) (* skoAC1 (+ (/ 8. 9280784638125.) (* skoAC1 (/ 4. 9280784638125.))))) (* skoXC1 (* skoXC1 (+ (/ (- 8.) 2143861251406875.) (* skoAC1 (+ (/ (- 16.) 2143861251406875.) (* skoAC1 (/ (- 8.) 2143861251406875.))))))))))))))))))))))))))))))))))))) (+ (- 5.) (* skoAC1 (+ (- 8.) (* skoAC1 (- 3.))))))) (and (not (<= skoXC1 (/ (- 314159.) 100000.))) (and (not (<= skoAC1 (- 1.))) (not (<= (/ 314159. 100000.) skoXC1)))))))
-----[end problem]-----

