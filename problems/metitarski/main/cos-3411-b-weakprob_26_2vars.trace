-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1}, ForAll[{}, And[skoAC1*-1>skoTC1,skoTC1*(-1+skoAC1*skoAC1*(1/2)+skoTC1*(skoAC1*(1/2)+skoTC1*(1/6)))>skoAC1*(1+skoAC1*skoAC1*(-1/6)),skoTC1*(-2+skoAC1*(1+skoAC1)+skoTC1*((1/2)+skoAC1+skoTC1*(1/3)))>1+skoAC1*(2+skoAC1*((-1/2)+skoAC1*(-1/3))),skoTC1>0,skoAC1>(1/10),(7/5)>skoTC1,(7/5)>skoAC1]]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) [[skoTC1<(skoAC1 (-1))]/\[[(skoAC1 (1+(skoAC1 skoAC1 (-1/6))))<(skoTC1 ((-1+(skoAC1 skoAC1 (1/2)))+(skoTC1 ((skoAC1 (1/2))+(skoTC1 (1/6))))))]/\[[(1+(skoAC1 (2+(skoAC1 (-1/2+(skoAC1 (-1/3)))))))<(skoTC1 ((-2+(skoAC1 (1+skoAC1)))+(skoTC1 ((1/2+skoAC1)+(skoTC1 (1/3))))))]/\[[0<skoTC1]/\[[1/10<skoAC1]/\[[skoTC1<7/5]/\[skoAC1<7/5]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (assert (and (not (<= (* skoAC1 (- 1.)) skoTC1)) (and (not (<= (* skoTC1 (+ (+ (- 1.) (* skoAC1 (* skoAC1 (/ 1. 2.)))) (* skoTC1 (+ (* skoAC1 (/ 1. 2.)) (* skoTC1 (/ 1. 6.)))))) (* skoAC1 (+ 1. (* skoAC1 (* skoAC1 (/ (- 1.) 6.))))))) (and (not (<= (* skoTC1 (+ (+ (- 2.) (* skoAC1 (+ 1. skoAC1))) (* skoTC1 (+ (+ (/ 1. 2.) skoAC1) (* skoTC1 (/ 1. 3.)))))) (+ 1. (* skoAC1 (+ 2. (* skoAC1 (+ (/ (- 1.) 2.) (* skoAC1 (/ (- 1.) 3.))))))))) (and (not (<= skoTC1 0.)) (and (not (<= skoAC1 (/ 1. 10.))) (and (not (<= (/ 7. 5.) skoTC1)) (not (<= (/ 7. 5.) skoAC1)))))))))
-----[end problem]-----

