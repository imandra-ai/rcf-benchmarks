-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoSINSC1,skoCOSSC1}, ForAll[{}, skoSINSC1*((-5/2)+skoCOSSC1*(-1/2)+skoSC1*((-3/2)+skoSC1*((3/2)+skoSC1*(1/2)))+skoSINSC1*((1/4)+skoSC1*(1/4)))>-2+skoCOSSC1*(-3+skoCOSSC1*(-1/2))+skoSC1*(-6+skoCOSSC1*(-6+skoCOSSC1*(-1/2))+skoSC1*(-6+skoCOSSC1*-3+skoSC1*-2))]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoSINSC1) (E skoCOSSC1) [((-2+(skoCOSSC1 (-3+(skoCOSSC1 (-1/2)))))+(skoSC1 ((-6+(skoCOSSC1 (-6+(skoCOSSC1 (-1/2)))))+(skoSC1 ((-6+(skoCOSSC1 (-3)))+(skoSC1 (-2)))))))<(skoSINSC1 (((-5/2+(skoCOSSC1 (-1/2)))+(skoSC1 (-3/2+(skoSC1 (3/2+(skoSC1 (1/2)))))))+(skoSINSC1 (1/4+(skoSC1 (1/4))))))].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoSINSC1 () Real) (declare-fun skoCOSSC1 () Real) (assert (not (<= (* skoSINSC1 (+ (+ (+ (/ (- 5.) 2.) (* skoCOSSC1 (/ (- 1.) 2.))) (* skoSC1 (+ (/ (- 3.) 2.) (* skoSC1 (+ (/ 3. 2.) (* skoSC1 (/ 1. 2.))))))) (* skoSINSC1 (+ (/ 1. 4.) (* skoSC1 (/ 1. 4.)))))) (+ (+ (- 2.) (* skoCOSSC1 (+ (- 3.) (* skoCOSSC1 (/ (- 1.) 2.))))) (* skoSC1 (+ (+ (- 6.) (* skoCOSSC1 (+ (- 6.) (* skoCOSSC1 (/ (- 1.) 2.))))) (* skoSC1 (+ (+ (- 6.) (* skoCOSSC1 (- 3.))) (* skoSC1 (- 2.))))))))))
-----[end problem]-----

